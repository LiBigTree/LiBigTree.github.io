<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长夜未央</title>
  
  <subtitle>言念君子，温其如玉</subtitle>
  <link href="lider7214.cn/atom.xml" rel="self"/>
  
  <link href="lider7214.cn/"/>
  <updated>2021-01-23T12:52:28.191Z</updated>
  <id>lider7214.cn/</id>
  
  <author>
    <name>Lider</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>以numpy为核心搭建的识猫网络</title>
    <link href="lider7214.cn/2021/01/23/%E4%BB%A5numpy%E4%B8%BA%E6%A0%B8%E5%BF%83%E6%90%AD%E5%BB%BA%E7%9A%84%E8%AF%86%E7%8C%AB%E7%BD%91%E7%BB%9C/"/>
    <id>lider7214.cn/2021/01/23/%E4%BB%A5numpy%E4%B8%BA%E6%A0%B8%E5%BF%83%E6%90%AD%E5%BB%BA%E7%9A%84%E8%AF%86%E7%8C%AB%E7%BD%91%E7%BB%9C/</id>
    <published>2021-01-23T12:23:06.000Z</published>
    <updated>2021-01-23T12:52:28.191Z</updated>
    
    <content type="html"><![CDATA[<p>AI基础，对简单的深刻认识可以帮助深层的理解。</p><a id="more"></a><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、处理数据并以“规范”的形式输入网络训练；</p><p>2、定义好相关参数</p><p>3、前向传播负责预测和衡量</p><p>4、反向传播负责不断优化模型</p><p>5、整合模型并运行</p><p>6、debug理解各种问题</p><h1 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a>学习总结</h1><p>updating</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="数据分享"><a href="#数据分享" class="headerlink" title="数据分享"></a>数据分享</h2><p><a href="https://pan.baidu.com/s/1TNWyxyDbGBMfyW6GIzqzMQ">网盘链接</a></p><p>提取码：dxq1 </p><h2 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># datetime:2020/2/21 10:43</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt  <span class="comment"># painting</span></span><br><span class="line"><span class="keyword">import</span> h5py  <span class="comment"># data management</span></span><br><span class="line"><span class="keyword">import</span> skimage.transform <span class="keyword">as</span> tf  <span class="comment"># zoom image</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_dataset</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    正确加载训练数据特征、标签，加载测试数据特征、标签、类别。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    train_dataset = h5py.File(<span class="string">&#x27;datasets/train_catvnoncat.h5&#x27;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    train_set_x_orig = np.array(train_dataset[<span class="string">&quot;train_set_x&quot;</span>][:])</span><br><span class="line">    train_set_y_orig = np.array(train_dataset[<span class="string">&quot;train_set_y&quot;</span>][:])</span><br><span class="line"></span><br><span class="line">    test_dataset = h5py.File(<span class="string">&#x27;datasets/test_catvnoncat.h5&#x27;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    test_set_x_orig = np.array(test_dataset[<span class="string">&quot;test_set_x&quot;</span>][:])</span><br><span class="line">    test_set_y_orig = np.array(test_dataset[<span class="string">&quot;test_set_y&quot;</span>][:])</span><br><span class="line"></span><br><span class="line">    classes = np.array(test_dataset[<span class="string">&quot;list_classes&quot;</span>][:])</span><br><span class="line"></span><br><span class="line">    train_set_y_orig = train_set_y_orig.reshape((<span class="number">1</span>, train_set_y_orig.shape[<span class="number">0</span>]))</span><br><span class="line">    test_set_y_orig = test_set_y_orig.reshape((<span class="number">1</span>, test_set_y_orig.shape[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> train_set_x_orig, train_set_y_orig, test_set_x_orig, test_set_y_orig, classes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">z</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    参数：</span></span><br><span class="line"><span class="string">    z： numpy数组或数值</span></span><br><span class="line"><span class="string">    s： 经过计算sigmoid的值，在[0， 1]区间</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    s = <span class="number">1</span> / (<span class="number">1</span> + np.exp(-z))</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize_with_zeros</span>(<span class="params">dim</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    功能： 初始化权重w、阈值b</span></span><br><span class="line"><span class="string">    参数：</span></span><br><span class="line"><span class="string">    w：权重数组</span></span><br><span class="line"><span class="string">    b：偏置bias</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    w = np.zeros((dim, <span class="number">1</span>))</span><br><span class="line">    b = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w, b</span><br></pre></td></tr></table></figure><h2 id="Propagate"><a href="#Propagate" class="headerlink" title="Propagate"></a>Propagate</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">propagate</span>(<span class="params">w, b, X, Y</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    参数：</span></span><br><span class="line"><span class="string">    w：权重 （12288，1）</span></span><br><span class="line"><span class="string">    b：偏置</span></span><br><span class="line"><span class="string">    X：图片特征数据 （12288，209）</span></span><br><span class="line"><span class="string">    Y：图片标签</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    返回值：</span></span><br><span class="line"><span class="string">    cost: 成本</span></span><br><span class="line"><span class="string">    dw: w的梯度</span></span><br><span class="line"><span class="string">    db: b的梯度</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    m = X.shape[<span class="number">1</span>]  <span class="comment"># 样本数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 前向传播</span></span><br><span class="line">    A = sigmoid(np.dot(w.T, X) + b)</span><br><span class="line">    cost = -np.<span class="built_in">sum</span>(Y * np.log(A) + (<span class="number">1</span> - Y) * np.log(<span class="number">1</span> - A)) / m</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反向传播</span></span><br><span class="line">    dZ = A - Y</span><br><span class="line">    dw = np.dot(X, dZ.T) / m</span><br><span class="line">    db = np.<span class="built_in">sum</span>(dZ) / m</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将dw 和 db 保存到字典里</span></span><br><span class="line">    grads = &#123;<span class="string">&quot;dw&quot;</span>: dw,</span><br><span class="line">             <span class="string">&quot;db&quot;</span>: db&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> grads, cost</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Optimize-amp-predict"><a href="#Optimize-amp-predict" class="headerlink" title="Optimize&amp;predict"></a>Optimize&amp;predict</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">optimize</span>(<span class="params">w, b, X, Y, num_iterations, learning_rate, print_cost=<span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    参数：</span></span><br><span class="line"><span class="string">    w： 权重</span></span><br><span class="line"><span class="string">    b： 偏置</span></span><br><span class="line"><span class="string">    X：图片特征</span></span><br><span class="line"><span class="string">    Y: 标签</span></span><br><span class="line"><span class="string">    num_iterations: 优化次数</span></span><br><span class="line"><span class="string">    learning_rates: 每次的步进</span></span><br><span class="line"><span class="string">    print_cost: 每一百次变为true，用于打印出来观察分析</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    返回值：</span></span><br><span class="line"><span class="string">    params: 优化后的w、b</span></span><br><span class="line"><span class="string">    costs: 每100次的优化成本</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    costs = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iterations):</span><br><span class="line">        grads, cost = propagate(w, b, X, Y)  <span class="comment"># 得出梯度，成本</span></span><br><span class="line"></span><br><span class="line">        dw = grads[<span class="string">&quot;dw&quot;</span>]</span><br><span class="line">        db = grads[<span class="string">&quot;db&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 梯度更新，优化参数</span></span><br><span class="line">        w = w - learning_rate * dw</span><br><span class="line">        b = b - learning_rate * db</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 成本记录：</span></span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            costs.append(cost)</span><br><span class="line">            <span class="keyword">if</span> print_cost:</span><br><span class="line">                print(<span class="string">&quot;优化%i次后成本是： %f&quot;</span> % (i, cost))</span><br><span class="line"></span><br><span class="line">    params = &#123;<span class="string">&quot;w&quot;</span>: w,</span><br><span class="line">              <span class="string">&quot;b&quot;</span>: b&#125;</span><br><span class="line">    <span class="keyword">return</span> params, costs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">w, b, X</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    参数：</span></span><br><span class="line"><span class="string">    w：权重</span></span><br><span class="line"><span class="string">    b：偏置</span></span><br><span class="line"><span class="string">    X: 图片特征</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    返回值：</span></span><br><span class="line"><span class="string">    Y_prediction: 预测结果</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m = X.shape[<span class="number">1</span>]</span><br><span class="line">    Y_prediction = np.zeros((<span class="number">1</span>, m))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&#x27;w的尺寸是：&#x27;</span>, w.shape)</span><br><span class="line">    print(<span class="string">&#x27;X的尺寸是：&#x27;</span>, X.shape)</span><br><span class="line">    A = sigmoid(np.dot(w.T, X) + b)  <span class="comment"># 预测</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">&#x27;A的尺寸是：&#x27;</span>, A.shape)</span><br><span class="line">    print(<span class="string">&#x27;关于A&#x27;</span>, A)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 转化为 0 or 1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(A.shape[<span class="number">1</span>]):</span><br><span class="line">        <span class="keyword">if</span> A[<span class="number">0</span>, i] &gt;= <span class="number">0.5</span>:</span><br><span class="line">            Y_prediction[<span class="number">0</span>, i] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print()</span></span><br><span class="line">    <span class="comment"># print(&quot;Y_prediction:&quot;, Y_prediction)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Y_prediction</span><br></pre></td></tr></table></figure><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">model</span>(<span class="params">X_train, Y_train, X_test, Y_test, num_iterations=<span class="number">2000</span>, learning_rate=<span class="number">0.5</span>, print_cost=<span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    参数：</span></span><br><span class="line"><span class="string">    X_train: 训练图片 （12288，209）</span></span><br><span class="line"><span class="string">    Y_train：训练图片对应的标签 （1，209）</span></span><br><span class="line"><span class="string">    X_test: 测试图片  （12288， 50）</span></span><br><span class="line"><span class="string">    Y_test： 测试图片对应的标签 （1，50）</span></span><br><span class="line"><span class="string">    num_iterations: 训练/优化次数</span></span><br><span class="line"><span class="string">    learning_rate: 学习步进</span></span><br><span class="line"><span class="string">    print_cost: True时打印成本</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    返回值：</span></span><br><span class="line"><span class="string">    d： 返回一些信息</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 参数初始化：</span></span><br><span class="line">    w, b = initialize_with_zeros(X_train.shape[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 参数优化</span></span><br><span class="line">    parameters, costs = optimize(w, b, X_train, Y_train, num_iterations, learning_rate, print_cost)</span><br><span class="line"></span><br><span class="line">    w = parameters[<span class="string">&#x27;w&#x27;</span>]</span><br><span class="line">    b = parameters[<span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预测图片</span></span><br><span class="line">    Y_prediction_train = predict(w, b, X_train)</span><br><span class="line">    Y_prediction_test = predict(w, b, X_test)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印预测的准确率</span></span><br><span class="line">    print(<span class="string">&quot;训练图片的准确率为： &#123;&#125;%.&quot;</span>.<span class="built_in">format</span>(<span class="number">100</span> - np.mean(np.<span class="built_in">abs</span>(Y_prediction_train - Y_train)) * <span class="number">100</span>))</span><br><span class="line">    print(<span class="string">&quot;测试图片的准确率为： &#123;&#125;%.&quot;</span>.<span class="built_in">format</span>(<span class="number">100</span> - np.mean(np.<span class="built_in">abs</span>(Y_prediction_test - Y_test)) * <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line">    d = &#123;</span><br><span class="line">        <span class="string">&quot;costs&quot;</span>: costs,</span><br><span class="line">        <span class="string">&quot;Y_prediction_test&quot;</span>: Y_prediction_test,</span><br><span class="line">        <span class="string">&quot;Y_prediction_train&quot;</span>: Y_prediction_train,</span><br><span class="line">        <span class="string">&quot;w&quot;</span>: w,</span><br><span class="line">        <span class="string">&quot;b&quot;</span>: b,</span><br><span class="line">        <span class="string">&quot;learning_rate&quot;</span>: learning_rate,</span><br><span class="line">        <span class="string">&quot;num_iterations&quot;</span>: num_iterations&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure><h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">def main():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    执行数据的训练</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    train_set_x_orig, train_set_y, test_set_x_orig, test_set_y, classes &#x3D; load_dataset()</span><br><span class="line">    # index &#x3D; 30</span><br><span class="line">    # plt.imshow(train_set_x_orig[index])</span><br><span class="line">    # plt.show()</span><br><span class="line">    # print(&quot;label:&quot; + str(train_set_y[:, index]) + &quot; classes:&quot;</span><br><span class="line">    # + classes[np.squeeze(train_set_y[:, index])].decode(&quot;utf-8&quot;))</span><br><span class="line"></span><br><span class="line">    # 变量的维度</span><br><span class="line">    print(&quot;train_set_x_orig shape: &quot; + str(train_set_x_orig.shape))</span><br><span class="line">    print(&quot;train_set_y shape: &quot; + str(train_set_y.shape))</span><br><span class="line">    print(&quot;test_set_x_orig: &quot; + str(test_set_x_orig.shape))</span><br><span class="line">    print(&quot;test_set_y shape: &quot; + str(test_set_y.shape))</span><br><span class="line">    print(&#39;训练的y的内容是：&#39;, train_set_y)</span><br><span class="line"></span><br><span class="line">    # # 提取样本数、图片长宽像素</span><br><span class="line">    # # m_train &#x3D; train_set_x_orig.shape[0]</span><br><span class="line">    # # m_test &#x3D; test_set_x_orig.shape[0]</span><br><span class="line">    # num_px &#x3D; test_set_x_orig.shape[1]</span><br><span class="line">    #</span><br><span class="line">    # # 将样本数据进行扁平化和转置</span><br><span class="line">    # # 处理后：（图片数据， 样本数）</span><br><span class="line">    # train_set_x_flatten &#x3D; train_set_x_orig.reshape(train_set_x_orig.shape[0], -1).T</span><br><span class="line">    # test_set_x_flatten &#x3D; test_set_x_orig.reshape(test_set_x_orig.shape[0], -1).T</span><br><span class="line">    #</span><br><span class="line">    # print(&#39;处理后的训练样本尺寸：&#39;, str(train_set_x_flatten.shape))</span><br><span class="line">    # print(&#39;处理后的测试样本尺寸&#39;, str(test_set_x_flatten.shape))</span><br><span class="line">    #</span><br><span class="line">    # # 标准化处理，值在[0, 1]之间</span><br><span class="line">    # train_set_x &#x3D; train_set_x_flatten &#x2F; 255.</span><br><span class="line">    # test_set_x &#x3D; test_set_x_flatten &#x2F; 255.</span><br><span class="line">    #</span><br><span class="line">    # d &#x3D; model(train_set_x, train_set_y, test_set_x, test_set_y,</span><br><span class="line">    #           num_iterations&#x3D;2000, learning_rate&#x3D;0.005, print_cost&#x3D;False)</span><br><span class="line">    #</span><br><span class="line">    # # index &#x3D; 8</span><br><span class="line">    # # plt.imshow(test_set_x[:, index].reshape((num_px, num_px, 3)))</span><br><span class="line">    # # plt.show()</span><br><span class="line">    # # print(&quot;标签：&quot;, str(test_set_y[0, index]), &quot; 预测：&quot;, str(int(d[&quot;Y_prediction_test&quot;][0, index])))</span><br><span class="line">    #</span><br><span class="line">    # # 测试自己的图片</span><br><span class="line">    # my_image &#x3D; &quot;2.jpg&quot;</span><br><span class="line">    # fname &#x3D; &quot;images&#x2F;&quot; + my_image</span><br><span class="line">    #</span><br><span class="line">    # image &#x3D; np.array(plt.imread(fname))</span><br><span class="line">    # my_image &#x3D; tf.resize(image, (num_px, num_px), mode&#x3D;&#39;reflect&#39;).reshape((1, num_px * num_px * 3)).T</span><br><span class="line">    # my_predicted_image &#x3D; predict(d[&quot;w&quot;], d[&quot;b&quot;], my_image)</span><br><span class="line">    #</span><br><span class="line">    # print(&quot;预测结果为&quot; + str(int(np.squeeze(my_predicted_image))))</span><br><span class="line">    #</span><br><span class="line">    # plt.imshow(image)</span><br><span class="line">    # plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    try:</span><br><span class="line">        main()</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><p>[1]网络教程，床长AI</p><p>[2]CSDN对numpy的理解和各种经验贴</p><p>[3]numpy官方库</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;AI基础，对简单的深刻认识可以帮助深层的理解。&lt;/p&gt;</summary>
    
    
    
    <category term="编程 python" scheme="lider7214.cn/categories/%E7%BC%96%E7%A8%8B-python/"/>
    
    
    <category term="python编程思考 神经网络基础" scheme="lider7214.cn/tags/python%E7%BC%96%E7%A8%8B%E6%80%9D%E8%80%83-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>BIM建模上课总结</title>
    <link href="lider7214.cn/2021/01/01/BIM%E5%BB%BA%E6%A8%A1%E4%B8%8A%E8%AF%BE%E6%80%BB%E7%BB%93/"/>
    <id>lider7214.cn/2021/01/01/BIM%E5%BB%BA%E6%A8%A1%E4%B8%8A%E8%AF%BE%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-01T04:19:03.000Z</published>
    <updated>2021-01-24T01:58:12.455Z</updated>
    
    <content type="html"><![CDATA[<p>按照上课内容梳理BIM建模，重在实践探索。</p><a id="more"></a><p>11月12日</p><h1 id="第一节-工业厂房引入，接触Revit"><a href="#第一节-工业厂房引入，接触Revit" class="headerlink" title="第一节 工业厂房引入，接触Revit"></a>第一节 工业厂房引入，接触Revit</h1><p>作为计算机辅助设计，我们应该认识到尽管计算机的性能日益提高，但这种能力在解决实际应用问题时能否真正得以发挥，决定性的关键因素仍在于人类自身。具体地，通过深入思考与分析获得对问题本质的透彻理解，按照长期积淀而成的框架与模式设计出合乎问题的内在规律的方法，选用、改进或定制足以支撑建模高效实现的设计模式，并在真实环境中充分测试、调校和改进，这构成了利用建模解决实际问题的典型流程与不二法门。</p><p>有志于驾驭建模（与诸君共勉），不妨思考从如下方面开始，不断学习，反复练习，勤于总结：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">step1：研读图纸，对要做什么有个了解；</span><br><span class="line">step2:提出并确定问题：“我要做什么，如何来做”，并将要做的问题分解成一个个小步骤；</span><br><span class="line">step3：执行，必要时对step1、2思考校正。</span><br></pre></td></tr></table></figure><p>11月19日</p><h1 id="第二节-工业厂房"><a href="#第二节-工业厂房" class="headerlink" title="第二节 工业厂房"></a>第二节 工业厂房</h1><p>厂房建模问题分析</p><h2 id="step1：图纸解读"><a href="#step1：图纸解读" class="headerlink" title="step1：图纸解读"></a>step1：图纸解读</h2><p>这是一个一层工业厂房，结构规整用作入门练习。 建模时：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、从立面开始分层，之后以0.000为基准，向下200是场地外，向上一直延伸到13.7都是模型；</span><br><span class="line">2、轴网间距都是6米，我们还需要导入结构柱、门窗等——这些有的在族模型中、有的需要我们自己设计。</span><br><span class="line">3、有了主体，然后是屋顶、女儿墙、墙面涂料以及场地外的布置，逐个有序展开。</span><br><span class="line">4、其中的一些细节在执行过程中确认。</span><br></pre></td></tr></table></figure><h2 id="step2-amp-3：执行"><a href="#step2-amp-3：执行" class="headerlink" title="step2&amp;3：执行"></a>step2&amp;3：执行</h2><p>入门练习，问题自然地被分解了，直接开始上手执行。带着建模整体框架即可。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">===主干===</span><br><span class="line"><span class="section">### Part 1 立面 </span></span><br><span class="line">1、建筑样板，切换到<span class="strong">**立面**</span>确定垂直方向的设计;</span><br><span class="line">2、将立面设计导入平面设计，切换到其中的0.000层；</span><br><span class="line"><span class="section">### Part 2 轴网与结构柱</span></span><br><span class="line">3、0.000开始水平设计：建筑&gt;轴网</span><br><span class="line">4、载入结构柱设计：</span><br><span class="line"><span class="bullet">*</span> 连接到10.8高度</span><br><span class="line"><span class="bullet">*</span> 结构柱是500\<span class="emphasis">*700，做好墙之后，还得调整结构柱</span></span><br><span class="line"><span class="emphasis">*</span> 北面有两个节点结构柱不一样，额外注意一下</span><br><span class="line"><span class="section">### Part 3 墙</span></span><br><span class="line">5、设置240的砖墙；</span><br><span class="line">6、设置墙在垂直方向的连通：底部偏移-200、向上到10.8；</span><br><span class="line">===细部===</span><br><span class="line"><span class="section">### Part 4 放置门窗</span></span><br><span class="line">7、载入门、窗的族，建筑选项卡中选择按照图纸放置即可；</span><br><span class="line"><span class="bullet">*</span> 门距离：9130，门中心线到柱中心线距离、底标高设置为200</span><br><span class="line"><span class="bullet">*</span> 两种窗，一种在有门处放置，一种在无门处。</span><br><span class="line"><span class="section">### Part 5 创建雨棚、坡道</span></span><br><span class="line">8、雨棚：新建族，基于墙的公制常规模型：</span><br><span class="line"><span class="bullet">*</span> 在实体矩形里面<span class="strong">**拉伸**</span>出空心</span><br><span class="line"><span class="bullet">*</span> 用对齐标注</span><br><span class="line"><span class="bullet">*</span> 在4.9平面放置，立面高度200</span><br><span class="line"></span><br><span class="line">9、坡道：构建&gt;内建模型&gt;常规模型</span><br><span class="line"><span class="bullet">*</span> 创建<span class="strong">**融合**</span>模型</span><br><span class="line"><span class="bullet">*</span> 融合是一个图形到另一个图形的映射；</span><br><span class="line"></span><br><span class="line"><span class="section">### Part 6 创建散水、檐沟、女儿墙</span></span><br><span class="line">10、散水：内建模型之融合</span><br><span class="line">11、檐沟：内建模型之融合，如法炮制。</span><br><span class="line"><span class="bullet">*</span> 镜像檐沟</span><br><span class="line"><span class="bullet">*</span> 在10.8平面</span><br><span class="line">12、女儿墙：设置相关墙的参数即可</span><br><span class="line"><span class="bullet">*</span> 底部限制条件和底部偏移</span><br><span class="line"><span class="bullet">*</span> 镜像</span><br><span class="line"><span class="section">### Part 7 创建屋顶</span></span><br><span class="line">13、迹线屋顶，绘制并设置坡度</span><br><span class="line"><span class="section">### Part 8 场地外绘制</span></span><br><span class="line">14、在场地设置参照平面，体量和场地——&gt;创建场地</span><br><span class="line">15、子面域：道路</span><br><span class="line"></span><br><span class="line"><span class="section">### Part 9 材质的添加</span></span><br><span class="line">16、管理&gt;材质，</span><br><span class="line"><span class="bullet">*</span> 墙体的涂料，白色和深色的涂料</span><br><span class="line"><span class="bullet">*</span> 设置墙体的面层，厚度为10的面层，并设置高度（拆分区域和指定层）</span><br><span class="line">（2）场地道路为沥青</span><br><span class="line">===成品===</span><br><span class="line"><span class="section">### Part 10 效果渲染</span></span><br><span class="line">视图选项卡中完成</span><br></pre></td></tr></table></figure><p>11月26日</p><h1 id="第三节-参数化建模及厂房周边"><a href="#第三节-参数化建模及厂房周边" class="headerlink" title="第三节 参数化建模及厂房周边"></a>第三节 参数化建模及厂房周边</h1><h2 id="1、参数化建模"><a href="#1、参数化建模" class="headerlink" title="1、参数化建模"></a>1、参数化建模</h2><p>族模型，公制常规模型：</p><p>（1）螺栓</p><ul><li>绘制六边形，<strong>拉伸</strong>高度</li><li>绘制三角形<strong>旋转</strong>体裁剪</li><li>+圆柱体</li></ul><p>（2）扶手</p><ul><li>绘制空间曲线，在参照平面上绘制参照线</li><li>拾取平面切换绘制空间</li><li>放样</li></ul><h2 id="2、工业厂房周边"><a href="#2、工业厂房周边" class="headerlink" title="2、工业厂房周边"></a>2、工业厂房周边</h2><p>见第二节Part8、9、10</p><p>12月3号 </p><h1 id="第四节-办公楼-参数化建模补充"><a href="#第四节-办公楼-参数化建模补充" class="headerlink" title="第四节 办公楼+参数化建模补充"></a>第四节 办公楼+参数化建模补充</h1><h2 id="1、办公楼"><a href="#1、办公楼" class="headerlink" title="1、办公楼"></a>1、办公楼</h2><p>（1）标准层制作：</p><p>修改选项，复制粘贴</p><p>（2）针对性地修改：过滤器</p><p>（3）楼板层绘制：</p><p>第一层平面，（建筑选项卡）</p><p>（4）楼梯</p><p>（5）顶层的房子和女儿墙</p><p>（6）幕墙放置</p><p>（5）楼北面修饰</p><h2 id="2、弹簧"><a href="#2、弹簧" class="headerlink" title="2、弹簧"></a>2、弹簧</h2><p>12月10号</p><ul><li><p>参照平面，放样融合</p></li><li><p>绘制圈对称，放样</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;按照上课内容梳理BIM建模，重在实践探索。&lt;/p&gt;</summary>
    
    
    
    <category term="理论 建筑信息建模" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%BB%BA%E7%AD%91%E4%BF%A1%E6%81%AF%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="BIM" scheme="lider7214.cn/tags/BIM/"/>
    
  </entry>
  
  <entry>
    <title>2021年度规划</title>
    <link href="lider7214.cn/2021/01/01/2021%E5%B9%B4%E5%BA%A6%E8%A7%84%E5%88%92/"/>
    <id>lider7214.cn/2021/01/01/2021%E5%B9%B4%E5%BA%A6%E8%A7%84%E5%88%92/</id>
    <published>2021-01-01T02:35:43.000Z</published>
    <updated>2021-01-01T08:43:24.206Z</updated>
    
    <content type="html"><![CDATA[<p>今年的主题是继续奋斗，创造灿烂的辉煌！</p><p align=right> ——2021</p><a id="more"></a><h1 id="2020年总结"><a href="#2020年总结" class="headerlink" title="2020年总结"></a>2020年总结</h1><p>回顾去年的点滴，自己还是成长了，进步了。让我体会到这一点的是体育课最后的考核，以前我的想法始终是拼命跑、拼命练习，总能越来越快的。某一天，“方法比努力重要”这句话，如同夜空中划破的闪电，启迪我思考改进之道。我分析跑步的因素，观察自己的步频、步幅特点，早上去操场体会半小时左右，感受运动中的变化，改进、练习。</p><p>我发现还不够，长距离的奔跑需要呼吸的支持，于是我又开始思考呼吸和步子。在一次又一次的实验中，我改变了自己，清楚地感觉到自己比以前，强了。结果也在意料之中，我的跑步成绩由之前测量的4分/1000米变成了3分27秒/1000米。</p><p>这件事，让我明白，观察、思考、挑战自己的缺点，表面的内容不如实质的实在，真真切切看到孱弱真实的自己并开始解剖，这是成长的第一步。</p><p>2020的上半年是在家里度过的，情绪上经历了极大的折磨与不稳定，主要体现在浮躁和焦虑。通过阅读我明白了这个道理：当自身的能力过低不足以支撑过高的挑战时，人就会出现焦虑、急躁的心情，这时候被情绪掌控的个体是难以高效率产出的。</p><p>我想到了解决之道，降低任务的难度和能力匹配。把任务分解，耐住性子，成长、觉醒，在能力提高中达到目标。</p><p>仔细梳理这一年，发现许多元素，又发现浪费折腾了许多，明白的和做到的始终有天壤之别。</p><p>下面从学习和生活方面做个简单的整合。</p><h2 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h2><h3 id="1、数学："><a href="#1、数学：" class="headerlink" title="1、数学："></a>1、数学：</h3><ul><li>竞赛结果：省级三等奖。</li></ul><p>蒲未完成</p><p>2020计划的数学竞赛一拖再拖，缺乏明确的目标，或者说从一开始就没能在重重学科乱象中梳理出一条合适理性的学习之路。</p><h3 id="2、英语学习"><a href="#2、英语学习" class="headerlink" title="2、英语学习"></a>2、英语学习</h3><ul><li><p>参加了英语口语和英语六级。</p></li><li><p>完成科技英语学习</p></li><li><p>记录了5000+单词到欧陆</p></li></ul><p>在学习的过程中，体会了不少。然而备考时间还是太短，五千词、听力精读、阅读精练三项内容只是刚刚有了苗头。</p><h3 id="3、计算机"><a href="#3、计算机" class="headerlink" title="3、计算机"></a>3、计算机</h3><ul><li>不求甚解学习阅览了计算机专业的很多课程，看了概论课：</li></ul><p>计算机组成原理、Ubuntu命令行、计算机网络、数据库配置、数据结构[线性表/队列/堆栈/数组/树/图/查找/排序]的知识体系等等；</p><ul><li>未能完成的有：docker的试验配置、C++知识体系的构建</li></ul><h3 id="4、专业"><a href="#4、专业" class="headerlink" title="4、专业"></a>4、专业</h3><p>工程管理学会了放弃，不能兼顾</p><ul><li>了解了知识体系</li></ul><p>结构力学、钢筋混凝土成绩不好</p><ul><li>初步学习了BIM，建模思维</li></ul><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h3 id="5、编程"><a href="#5、编程" class="headerlink" title="5、编程"></a>5、编程</h3><p>学习了python语言，看了许多开源的项目：</p><ul><li><p>实现了自己搭建神经网络并训练，图像领域——识别、检测</p></li><li><p>研读了5+论文，图像的resnet、损失函数论文和语音领域的论文</p></li><li><p>没有完成的算法，始终没有一个契机去推进学习。</p></li><li><p>此外，在学习的过程中接触了并开始使用vs code、git、vim等工具，搭建了自己的博客平台并实现了一次重构内容的迭代。</p></li><li><p>和团队开发出语音app第一代，并获得校级特等奖</p></li><li><p>租了云服务器，老师提供了学校的服务器</p></li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><h3 id="6、技能"><a href="#6、技能" class="headerlink" title="6、技能"></a>6、技能</h3><ul><li><p>双力臂成功了，体测成绩88。</p></li><li><p>六块腹肌始终没能出来，最多四块</p></li><li><p>倒立练习失败</p></li></ul><h3 id="7、阅读"><a href="#7、阅读" class="headerlink" title="7、阅读"></a>7、阅读</h3><ul><li>40+的课外书籍</li></ul><blockquote><p> 《一往无前》、《心流》、《万千之门》、《围城》、《圆圈的正义》、《沉默的大多数》、《三体》、《许三观卖血记》、《人月神话》、《数学之美》、《巫师世界》、《十方武圣》、香农传</p><p>…</p></blockquote><ul><li><p>steam 刺客信条大革命和2代</p></li><li><p>部落冲突</p></li><li><p>B站追完了10+经典电影9分以上</p></li><li><p>看了国番：《灵笼》、《大理寺日志》、《雾山五行》等</p></li></ul><h3 id="8、锻炼"><a href="#8、锻炼" class="headerlink" title="8、锻炼"></a>8、锻炼</h3><ul><li><p>2020年步行：3，980，885步，199天步数过万；</p></li><li><p>10月18日完成了一次22公里的耐力极限跑步；</p></li><li><p><strong>这一年运动健康累计没有达到300公里目标；</strong></p></li><li><p>暑假期间坚持每天健身，引体向上实现28个一次性；</p></li><li><p><strong>未能养成良好的作息</strong>，很多时候会半夜失眠，两点起床。</p></li><li><p>参加了华为健康的徽章挑战，目前累计拥有36个徽章，2020年解锁14个徽章。</p></li><li><p>我的总运动里程：2960.2公里。（数据参考自华为运动）</p></li></ul><h3 id="9、理财"><a href="#9、理财" class="headerlink" title="9、理财"></a>9、理财</h3><p>消费逐渐健康稳定化，比较规划自己的消费。</p><ul><li><p>成功在咸鱼、拍拍处理二手闲置，累计收益过千。</p></li><li><p>课本电子化+淘宝折旧等方法，累计节约五百。</p></li><li><p>饮食规划日均稳定于20–25之间</p></li><li><p>还是会过度消费：集中体现在电子产品的购买和个人打理</p></li></ul><h3 id="10、兴趣"><a href="#10、兴趣" class="headerlink" title="10、兴趣"></a>10、兴趣</h3><ul><li><p>唱歌搁浅，没有天赋和努力的方向。</p></li><li><p>利用英语流利说开始练习口语，开始张口。</p></li></ul><h3 id="11、形象"><a href="#11、形象" class="headerlink" title="11、形象"></a>11、形象</h3><p>做了许多搭配试验，测试风格。选购的细节、颜色的风格尝试。</p><ul><li><p>使用手动剃须，更干净。</p></li><li><p>尝试护肤，重视补水。</p></li><li><p>开始注意饮食的习惯</p></li></ul><h1 id="2021年规划"><a href="#2021年规划" class="headerlink" title="2021年规划"></a>2021年规划</h1><p>2020有遗憾和不完美，酸甜苦辣也是一言难尽，可2021年终是来了，这一年，继续奋斗。</p><h2 id="理论-1"><a href="#理论-1" class="headerlink" title="理论"></a>理论</h2><h3 id="1、专业"><a href="#1、专业" class="headerlink" title="1、专业"></a>1、专业</h3><ul><li>土木<strong>管理造价体系</strong>的学习，完成毕设的准备</li></ul><p>每门课成绩70分左右</p><h3 id="2、计算机理论"><a href="#2、计算机理论" class="headerlink" title="2、计算机理论"></a>2、计算机理论</h3><ul><li><p>数据结构&gt;&gt;&gt;计算机组成原理&gt;&gt;&gt;操作系统&gt;&gt;&gt;计算机网络：整合为<strong>408</strong>一体，化用</p></li><li><p>实践<strong>docker</strong>，玩点有意思的</p></li><li><p><strong>Ubuntu系统</strong>操作指南，从文件系统到命令行娴熟操作</p></li></ul><h3 id="3、数学"><a href="#3、数学" class="headerlink" title="3、数学"></a>3、数学</h3><ul><li>打散学过的<strong>高等数学</strong>，按照逻辑力、想象力、计算力重组，并深入学习更多“超纲”知识：复变、分析、集合论、数论等</li></ul><p>——&gt;冲进国赛，最后一次机会！</p><ul><li><p>完成并打磨成熟的<strong>概率论</strong>解决问题的体系，一维、多维随机变量定义、性质、应用。</p></li><li><p><strong>线性代数</strong>：计算和向量空间两个角度完善，与人工智能结合学习，总结出体系经验。</p></li></ul><h3 id="4、英语"><a href="#4、英语" class="headerlink" title="4、英语"></a>4、英语</h3><ul><li><p><strong>单词</strong>：欧陆词典5000词，生词僻义+词组用法</p></li><li><p><strong>阅读</strong>：</p></li></ul><p>理解深入解读三年的六级阅读真题、考研阅读</p><ul><li><strong>听力和口语</strong>：</li></ul><p>完成新概念英语</p><p>流利说每天坚持</p><h3 id="5、政治"><a href="#5、政治" class="headerlink" title="5、政治"></a>5、政治</h3><ul><li><p>马原毛概近代史思修知识体系以及自制题库</p></li><li><p>背诵政治，关注时事，锻炼对问题的分析</p></li></ul><h2 id="实践与编程"><a href="#实践与编程" class="headerlink" title="实践与编程"></a>实践与编程</h2><h3 id="6、编程"><a href="#6、编程" class="headerlink" title="6、编程"></a>6、编程</h3><ul><li>学习C和C++并做出二个以上练手项目</li></ul><p>使用C++实现数据结构和相关算法</p><ul><li><p>使用python实现图像、语言、语音、GAN、无监督、强化领域的典型项目，总结每个网络的计算图方法</p></li><li><p>阅读200篇以上的领域论文</p></li><li><p>vs 及code和 vim熟练</p></li><li><p>debug日志方法</p></li><li><p>亲声陪伴系统项目，推进到挑战杯国赛</p></li></ul><h2 id="生活-1"><a href="#生活-1" class="headerlink" title="生活"></a>生活</h2><h3 id="7、技能"><a href="#7、技能" class="headerlink" title="7、技能"></a>7、技能</h3><p>学会倒立</p><p>直角肩</p><p>六块腹肌</p><p>学习说普通话</p><h3 id="8、理财"><a href="#8、理财" class="headerlink" title="8、理财"></a>8、理财</h3><p>处理旧书</p><p>攒小目标</p><h3 id="9、形象"><a href="#9、形象" class="headerlink" title="9、形象"></a>9、形象</h3><p><strong>作息！！！试验出自己的情绪、生活各种变化规律，调式出合理的行动法则</strong></p><p>穿搭，简约舒适：</p><p>做更多的试验，尝试不同的线上线下店铺，发现更多的品牌</p><p>理发：继续物色合适的店铺</p><h3 id="10、锻炼"><a href="#10、锻炼" class="headerlink" title="10、锻炼"></a>10、锻炼</h3><p>跑步300公里</p><h3 id="11、阅读与博客"><a href="#11、阅读与博客" class="headerlink" title="11、阅读与博客"></a>11、阅读与博客</h3><p>知乎上发表文章10篇以上</p><p>阅读24本以上的课外书籍</p><p>看50部以上经典电影</p><p>2021，尝试更多可能。最后，附上一个朋友改编自《平凡的世界》的新年展望:</p><blockquote><p>一个新旧之交的日子，零星的雪花夹着的寒冷刺骨的海风正时时刻刻在天地间飘舞着。时令已快到小寒，雪当然不会在吝啬，往往在一夜之间，就已经铺撒的无边无际了。这严寒而漫长的冬天，仍没有过去。但那真正温暖的春天，已在前方向人们招手了。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;今年的主题是继续奋斗，创造灿烂的辉煌！&lt;/p&gt;
&lt;p align=right&gt; ——2021&lt;/p&gt;</summary>
    
    
    
    <category term="生活 年计划" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="plan" scheme="lider7214.cn/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>[工科高数专栏]序言</title>
    <link href="lider7214.cn/2020/12/31/%E5%B7%A5%E7%A7%91%E9%AB%98%E6%95%B0%E4%B8%93%E6%A0%8F-%E5%BA%8F%E8%A8%80/"/>
    <id>lider7214.cn/2020/12/31/%E5%B7%A5%E7%A7%91%E9%AB%98%E6%95%B0%E4%B8%93%E6%A0%8F-%E5%BA%8F%E8%A8%80/</id>
    <published>2020-12-31T01:41:15.000Z</published>
    <updated>2020-12-31T02:11:04.957Z</updated>
    
    <content type="html"><![CDATA[<p>写点数学</p><a id="more"></a><p>想了许久，把数学复习分成以下三个部分：</p><p>想象力、逻辑力、计算力。</p><h1 id="一、想象力"><a href="#一、想象力" class="headerlink" title="一、想象力"></a>一、想象力</h1><p>又叫做数与几何。</p><p>在这一阶段主要做形象地理解，感性地认知曲线、空间等元素。</p><h2 id="1、曲线的凹凸性、拐点"><a href="#1、曲线的凹凸性、拐点" class="headerlink" title="1、曲线的凹凸性、拐点"></a>1、曲线的凹凸性、拐点</h2><h2 id="2、函数图形与曲率"><a href="#2、函数图形与曲率" class="headerlink" title="2、函数图形与曲率"></a>2、函数图形与曲率</h2><h2 id="3、向量"><a href="#3、向量" class="headerlink" title="3、向量"></a>3、向量</h2><h2 id="4、平面和空间"><a href="#4、平面和空间" class="headerlink" title="4、平面和空间"></a>4、平面和空间</h2><h1 id="二、逻辑力"><a href="#二、逻辑力" class="headerlink" title="二、逻辑力"></a>二、逻辑力</h1><p>数学的严谨与思维</p><h2 id="1、拉格朗日"><a href="#1、拉格朗日" class="headerlink" title="1、拉格朗日"></a>1、拉格朗日</h2><h2 id="2、梯度"><a href="#2、梯度" class="headerlink" title="2、梯度"></a>2、梯度</h2><h2 id="3、微分中值"><a href="#3、微分中值" class="headerlink" title="3、微分中值"></a>3、微分中值</h2><h2 id="4、定积分"><a href="#4、定积分" class="headerlink" title="4、定积分"></a>4、定积分</h2><h2 id="5、曲线第二型"><a href="#5、曲线第二型" class="headerlink" title="5、曲线第二型"></a>5、曲线第二型</h2><h2 id="6、曲面第二型"><a href="#6、曲面第二型" class="headerlink" title="6、曲面第二型"></a>6、曲面第二型</h2><h1 id="三、运算力"><a href="#三、运算力" class="headerlink" title="三、运算力"></a>三、运算力</h1><h2 id="1、级数"><a href="#1、级数" class="headerlink" title="1、级数"></a>1、级数</h2><h2 id="2、极限"><a href="#2、极限" class="headerlink" title="2、极限"></a>2、极限</h2><h2 id="3、从求导到链式法则"><a href="#3、从求导到链式法则" class="headerlink" title="3、从求导到链式法则"></a>3、从求导到链式法则</h2><h2 id="4、不定积分"><a href="#4、不定积分" class="headerlink" title="4、不定积分"></a>4、不定积分</h2><h2 id="5、微分方程"><a href="#5、微分方程" class="headerlink" title="5、微分方程"></a>5、微分方程</h2><h2 id="6、重积分"><a href="#6、重积分" class="headerlink" title="6、重积分"></a>6、重积分</h2><h2 id="7、第一型积分"><a href="#7、第一型积分" class="headerlink" title="7、第一型积分"></a>7、第一型积分</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;写点数学&lt;/p&gt;</summary>
    
    
    
    <category term="理论 工科高等数学" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A7%91%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高数 纲要" scheme="lider7214.cn/tags/%E9%AB%98%E6%95%B0-%E7%BA%B2%E8%A6%81/"/>
    
  </entry>
  
  <entry>
    <title>python编程</title>
    <link href="lider7214.cn/2020/12/25/python/"/>
    <id>lider7214.cn/2020/12/25/python/</id>
    <published>2020-12-25T11:46:58.927Z</published>
    <updated>2021-01-20T15:22:00.916Z</updated>
    
    <content type="html"><![CDATA[<p>第三次学习python，之前对编程学习一直是伴随着网课教程的思路，几经浮沉，总是不得要点，近日静下心来细细回味之前学习的零散知识点，带着“我想掌握python的哪些知识，想用它来做什么”的问题，来学习这一门编程语言，于是，构建了如下基础知识体系。</p><a id="more"></a><h1 id="知识体系构建思路"><a href="#知识体系构建思路" class="headerlink" title="知识体系构建思路"></a>知识体系构建思路</h1><p>处理现实问题，从对一个py文件的控制到几个py文件之间的控制，形成python内部的一体化。然后掌握出现意外如何处理的手段，在这个基础上了解更多库，学习与其他语言的互通、学习现实性问题的处理，包括文件。</p><h1 id="Python-Tutorial"><a href="#Python-Tutorial" class="headerlink" title="Python Tutorial"></a>Python Tutorial</h1><h2 id="一、函数的定义、调用与参数相关细节"><a href="#一、函数的定义、调用与参数相关细节" class="headerlink" title="一、函数的定义、调用与参数相关细节"></a>一、函数的定义、调用与参数相关细节</h2><h3 id="1、最简单的定义与调用"><a href="#1、最简单的定义与调用" class="headerlink" title="1、最简单的定义与调用"></a>1、最简单的定义与调用</h3><p>定义函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">n</span>):</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; n:</span><br><span class="line">        print(a, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">    print()  <span class="comment"># 空行</span></span><br></pre></td></tr></table></figure><p>调用函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    fib(<span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="2、关于调用"><a href="#2、关于调用" class="headerlink" title="2、关于调用"></a>2、关于调用</h3><p>定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对一个或多个参数指定默认值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ask_ok</span>(<span class="params">prompt, retries=<span class="number">4</span>, reminder=<span class="string">&#x27;Please try again!&#x27;</span></span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ok = <span class="built_in">input</span>(prompt)</span><br><span class="line">        <span class="keyword">if</span> ok <span class="keyword">in</span> (<span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;ye&#x27;</span>, <span class="string">&#x27;yes&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> ok <span class="keyword">in</span> (<span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;no&#x27;</span>, <span class="string">&#x27;nop&#x27;</span>, <span class="string">&#x27;nope&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        retries = retries - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> retries &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;invalid user response&#x27;</span>)</span><br><span class="line">        print(reminder)</span><br></pre></td></tr></table></figure><p>调用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># ask_ok函数的调用方法</span></span><br><span class="line">    <span class="comment"># ask_ok(&#x27;Do you really want to quit?&#x27;)  # 只给出必需的参数</span></span><br><span class="line">    <span class="comment"># ask_ok(&#x27;OK to overwrite the file?&#x27;, 2)  # 给出一个可选的参数</span></span><br><span class="line">    ask_ok(<span class="string">&#x27;OK to overwrite the file?&#x27;</span>, <span class="number">2</span>, reminder=<span class="string">&#x27;Come on, only yes or no!&#x27;</span>)  <span class="comment"># 给出所有的参数</span></span><br></pre></td></tr></table></figure><h4 id="默认值是在函数定义处计算的"><a href="#默认值是在函数定义处计算的" class="headerlink" title="默认值是在函数定义处计算的"></a><strong>默认值是在函数定义处计算的</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i &#x3D; 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def f(arg&#x3D;i):</span><br><span class="line">    print(arg)</span><br><span class="line">    </span><br><span class="line">i &#x3D; 6</span><br><span class="line">f()</span><br></pre></td></tr></table></figure><h4 id="默认值只会执行一次"><a href="#默认值只会执行一次" class="headerlink" title="默认值只会执行一次"></a><strong>默认值只会执行一次</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span>(<span class="params">a, one=[]</span>):</span></span><br><span class="line">    <span class="comment"># 测试默认值执行的次数</span></span><br><span class="line">    one.append(a)</span><br><span class="line">    <span class="keyword">return</span> one</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f3</span>(<span class="params">a, eli_one=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> eli_one <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        eli_one = []</span><br><span class="line">    eli_one.append(a)</span><br><span class="line">    <span class="keyword">return</span> eli_one</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">   <span class="comment"># 测试默认值参数调用次数</span></span><br><span class="line">    print(f2(<span class="number">1</span>))</span><br><span class="line">    print(f2(<span class="number">2</span>))</span><br><span class="line">    print(f2(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    print(f3(<span class="number">1</span>))</span><br><span class="line">    print(f3(<span class="number">2</span>))</span><br><span class="line">    print(f3(<span class="number">3</span>))</span><br><span class="line">    </span><br><span class="line">运行结果：    </span><br><span class="line">[<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>]</span><br><span class="line">[<span class="number">2</span>]</span><br><span class="line">[<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h3 id="3、关键字参数"><a href="#3、关键字参数" class="headerlink" title="3、关键字参数"></a>3、关键字参数</h3><h4 id="关键字参数跟随在位置参数的后面"><a href="#关键字参数跟随在位置参数的后面" class="headerlink" title="关键字参数跟随在位置参数的后面"></a>关键字参数跟随在位置参数的后面</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parrot</span>(<span class="params">voltage, state=<span class="string">&#x27;a stiff&#x27;</span>, action=<span class="string">&#x27;vcom&#x27;</span>, <span class="built_in">type</span>=<span class="string">&#x27;Norwegian Blue&#x27;</span></span>):</span></span><br><span class="line">    print(<span class="string">&quot;-- This parrot wouldn&#x27;t&quot;</span>, action, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    print(<span class="string">&quot;if you put&quot;</span>, voltage, <span class="string">&quot;volts through it.&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;-- Lovely plumage, the&quot;</span>, <span class="built_in">type</span>)</span><br><span class="line">    print(<span class="string">&quot;-- It&#x27;s&quot;</span>, state, <span class="string">&quot;!&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:     </span><br><span class="line">    <span class="comment"># 关键字参数的学习</span></span><br><span class="line">    parrot(<span class="number">1000</span>)  <span class="comment"># 1 positional argument</span></span><br><span class="line">    print()</span><br><span class="line">    parrot(voltage=<span class="number">2000</span>)  <span class="comment"># 1 keyword argument</span></span><br><span class="line">    print()</span><br><span class="line">    parrot(voltage=<span class="number">1000</span>, action=<span class="string">&#x27;VOOOOOM&#x27;</span>)  <span class="comment"># 2 keyword arguments</span></span><br><span class="line">    print()</span><br><span class="line">    parrot(action=<span class="string">&#x27;VOOOOOM&#x27;</span>, voltage=<span class="number">1000</span>) <span class="comment"># 2 keyword arguments</span></span><br><span class="line">    print()</span><br><span class="line">    parrot(<span class="string">&#x27;a million&#x27;</span>, <span class="string">&#x27;bereft of life&#x27;</span>, <span class="string">&#x27;jump&#x27;</span>)  <span class="comment"># 3 positional arguments</span></span><br><span class="line">    print()</span><br><span class="line">    parrot(<span class="string">&#x27;a thousand&#x27;</span>, state=<span class="string">&#x27;pushing up the daisies&#x27;</span>)  <span class="comment"># 1 positional, 1 keyword</span></span><br><span class="line">    </span><br><span class="line">结果：</span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t vcom if you put 1000 volts through it.</span></span><br><span class="line"><span class="string">-- Lovely plumage, the Norwegian Blue</span></span><br><span class="line"><span class="string">-- It&#x27;</span>s a stiff !</span><br><span class="line"></span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t vcom if you put 2000 volts through it.</span></span><br><span class="line"><span class="string">-- Lovely plumage, the Norwegian Blue</span></span><br><span class="line"><span class="string">-- It&#x27;</span>s a stiff !</span><br><span class="line"></span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t VOOOOOM if you put 1000 volts through it.</span></span><br><span class="line"><span class="string">-- Lovely plumage, the Norwegian Blue</span></span><br><span class="line"><span class="string">-- It&#x27;</span>s a stiff !</span><br><span class="line"></span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t VOOOOOM if you put 1000 volts through it.</span></span><br><span class="line"><span class="string">-- Lovely plumage, the Norwegian Blue</span></span><br><span class="line"><span class="string">-- It&#x27;</span>s a stiff !</span><br><span class="line"></span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t jump if you put a million volts through it.</span></span><br><span class="line"><span class="string">-- Lovely plumage, the Norwegian Blue</span></span><br><span class="line"><span class="string">-- It&#x27;</span>s bereft of life !</span><br><span class="line"></span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t vcom if you put a thousand volts through it.</span></span><br><span class="line"><span class="string">-- Lovely plumage, the Norwegian Blue</span></span><br><span class="line"><span class="string">-- It&#x27;</span>s pushing up the daisies !</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="剩余的形参中，位置参数用收集，关键字参数用-收集。"><a href="#剩余的形参中，位置参数用收集，关键字参数用-收集。" class="headerlink" title="剩余的形参中，位置参数用收集，关键字参数用*收集。"></a>剩余的形参中，位置参数用<em>收集，关键字参数用*</em>收集。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cheese_shop</span>(<span class="params">kind, *arguments, **keywords</span>):</span></span><br><span class="line">    print(<span class="string">&quot;-- Do you have any&quot;</span>, kind, <span class="string">&quot;?&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;-- I&#x27;m sorry, we&#x27;re all out of&quot;</span>, kind)</span><br><span class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> arguments:</span><br><span class="line">        print(arg)</span><br><span class="line">    print(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line">    <span class="keyword">for</span> kw <span class="keyword">in</span> keywords:</span><br><span class="line">        print(kw, <span class="string">&quot;:&quot;</span>, keywords[kw])</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 剩余参数的收集</span></span><br><span class="line">    cheese_shop(<span class="string">&quot;Limburger&quot;</span>, <span class="string">&quot;It&#x27;s very runny, sir.&quot;</span>,</span><br><span class="line">                <span class="string">&quot;It&#x27;s really very, VERY runny, sir.&quot;</span>,</span><br><span class="line">                shopkeep=<span class="string">&quot;Michael Pallin&quot;</span>,</span><br><span class="line">                client=<span class="string">&quot;John Cleese&quot;</span>,</span><br><span class="line">                sketch=<span class="string">&quot;Cheese Shop Sketch&quot;</span>)</span><br><span class="line">结果：</span><br><span class="line">-- Do you have any Limburger ?</span><br><span class="line">-- I<span class="string">&#x27;m sorry, we&#x27;</span>re <span class="built_in">all</span> out of Limburger</span><br><span class="line">It<span class="string">&#x27;s very runny, sir.</span></span><br><span class="line"><span class="string">It&#x27;</span>s really very, VERY runny, sir.</span><br><span class="line">----------------------------------------</span><br><span class="line">shopkeep : Michael Pallin</span><br><span class="line">client : John Cleese</span><br><span class="line">sketch : Cheese Shop Sketch</span><br></pre></td></tr></table></figure><h3 id="4、限制参数调用方式"><a href="#4、限制参数调用方式" class="headerlink" title="4、限制参数调用方式"></a>4、限制参数调用方式</h3><p>正斜杠之前放置限制位置参数，*之后仅限关键字参数，二者之间随意</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">standard_arg</span>(<span class="params">arg</span>):</span></span><br><span class="line">    print(arg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pos_only_arg</span>(<span class="params">arg, /</span>):</span></span><br><span class="line">    print(arg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">kwd_only_arg</span>(<span class="params">*, arg</span>):</span></span><br><span class="line">    print(arg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">combined_example</span>(<span class="params">pos_only, /, standard, *, kwd_only</span>):</span></span><br><span class="line">    print(pos_only, standard, kwd_only)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 不同调用方式比对</span></span><br><span class="line">    standard_arg(<span class="number">2</span>)</span><br><span class="line">    pos_only_arg(<span class="number">1</span>)  <span class="comment"># 希望形参名称对用户不可用时使用、对API，防止形参名称修改时造成破坏性的API变动</span></span><br><span class="line">    kwd_only_arg(arg=<span class="number">2</span>)  <span class="comment"># 形参有实际意义、防止过度依赖传入参数的位置时</span></span><br><span class="line">    combined_example(<span class="number">1</span>, <span class="number">2</span>, kwd_only=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><strong>使用仅限位置参数，对API，可以防止形参名称被修改时造成的破坏性的API变动</strong></p><p><strong>当然，若形参有实际意义、防止过度依赖传入参数的位置时，使用仅限关键字参数</strong></p><h2 id="二、控制函数内部细节的方法"><a href="#二、控制函数内部细节的方法" class="headerlink" title="二、控制函数内部细节的方法"></a>二、控制函数内部细节的方法</h2><blockquote><p>1、2、3是关于定义、调用函数的细节、技巧…</p></blockquote><h3 id="1、解包参数列表"><a href="#1、解包参数列表" class="headerlink" title="1、解包参数列表"></a>1、解包参数列表</h3><p>调用函数时用，解析参数传递</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpack_para</span>():</span></span><br><span class="line">    args = [<span class="number">3</span>, <span class="number">6</span>]</span><br><span class="line">    show = <span class="built_in">list</span>(<span class="built_in">range</span>(*args))</span><br><span class="line">    print(show)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 将元组里的参数**解包**分别传递给调用的函数</span></span><br><span class="line">    unpack_para()</span><br></pre></td></tr></table></figure><h3 id="2、lambda表达式"><a href="#2、lambda表达式" class="headerlink" title="2、lambda表达式"></a>2、lambda表达式</h3><p>两个作用：一是返回一个函数；二是传递一个小函数作为参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lambda_test</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> x: x + n</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:    </span><br><span class="line">    f = lambda_test(<span class="number">42</span>)</span><br><span class="line">    print(f(<span class="number">8</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transport</span>():</span></span><br><span class="line">    pairs = [(<span class="number">1</span>, <span class="string">&#x27;one&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;two&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;three&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;four&#x27;</span>)]</span><br><span class="line">    pairs.sort(key=<span class="keyword">lambda</span> pair: pair[<span class="number">1</span>])</span><br><span class="line">    print(pairs)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 传递小函数作为参数</span></span><br><span class="line">    transport()</span><br></pre></td></tr></table></figure><h3 id="3、关于文档标注"><a href="#3、关于文档标注" class="headerlink" title="3、关于文档标注"></a>3、关于文档标注</h3><p>标注参数、返回值的属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">annotations_test</span>(<span class="params">ham: <span class="built_in">str</span>, eggs: <span class="built_in">str</span> = <span class="string">&#x27;eggs&#x27;</span></span>) -&gt; str:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    函数标注的使用例子：其中分别有对位置参数、关键字参数、返回值的标注</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;Annotations:&quot;</span>, annotations_test.__annotations__)</span><br><span class="line">    print(<span class="string">&quot;Arguments:&quot;</span>, ham, eggs)</span><br><span class="line">    <span class="keyword">return</span> ham + <span class="string">&#x27; and &#x27;</span> + eggs</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 函数标注（和文档字符串一起学习的）</span></span><br><span class="line">    result = annotations_test(<span class="string">&#x27;spam&#x27;</span>)</span><br><span class="line">    print(fibonacci.__annotations__)</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>。。。</p><h2 id="三、模块（实现py文件之间的控制）"><a href="#三、模块（实现py文件之间的控制）" class="headerlink" title="三、模块（实现py文件之间的控制）"></a>三、模块（实现py文件之间的控制）</h2><h3 id="1、认识模块"><a href="#1、认识模块" class="headerlink" title="1、认识模块"></a>1、认识模块</h3><p>模块就是一个.py文件，模块之间可以互相引用，在实际编程，以主模块为核心，编写各种功能模块。</p><blockquote><p>通过.__name__获得当前模块名称</p></blockquote><p>制作模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 学习模块的使用，构建更大项目</span></span><br><span class="line"><span class="comment"># 函数放在主函数之外的其他地方</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">n</span>):</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; n:</span><br><span class="line">        print(a, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib2</span>(<span class="params">n</span>):</span></span><br><span class="line">    result = []</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; n:</span><br><span class="line">        result.append(a)</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>使用模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fibo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 访问做好的模块</span></span><br><span class="line">    fibo.fib(<span class="number">1000</span>)</span><br><span class="line">    print(fibo.fib2(<span class="number">100</span>))</span><br><span class="line">    <span class="comment"># 当前模块的名称</span></span><br><span class="line">    print(fibo.__name__)</span><br></pre></td></tr></table></figure><ul><li>技巧：如果经常使用某一函数，可以赋值到一个变量上。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块，赋值简化方便后续使用</span></span><br><span class="line">    fib = fibo.fib</span><br><span class="line">    fib(<span class="number">500</span>)</span><br></pre></td></tr></table></figure><h3 id="2、更多关于模块"><a href="#2、更多关于模块" class="headerlink" title="2、更多关于模块"></a>2、更多关于模块</h3><p>（1）函数定义和可执行语句在第一次导入时被执行，用来初始化模块。</p><p>（2）每个模块都有一个私有符号表：</p><ul><li><p>主模块的全局变量不会和其他模块发生冲突</p></li><li><p>可以用访问函数的方法去访问一个模块的全局变量</p></li><li><p>同样，可以指定导入模块的对应私有符号变量而不去导入模块本身</p></li><li><p>使用*符号导入除了以下划线开头的名称之外的所有名称（通常情况不要这样做，因为可能会导入一些未知的函数覆盖调自己定义的东西）</p></li><li><p>可以用as指定别名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fibo <span class="keyword">import</span> fib, fib2</span><br><span class="line">fib(<span class="number">500</span>)</span><br></pre></td></tr></table></figure></li></ul><p>（3）每个模块在解释器中执行一次，更改了模块的内容得重启。</p><p>在交互测试中可以这样做：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line">importlib.reload(modulename)</span><br></pre></td></tr></table></figure><h3 id="3、执行模块"><a href="#3、执行模块" class="headerlink" title="3、执行模块"></a>3、执行模块</h3><p>使用脚本传入参数执行模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python module.py &lt;arguments&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># =======</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 脚本方式执行模块</span></span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">    fib(<span class="built_in">int</span>(sys.argv[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><ul><li>技巧：添加main，只有在主模块执行时下面的内容才被调用，经常用于提供一个很方便的用户接口或者用于测试</li></ul><h3 id="4、模块搜索路径"><a href="#4、模块搜索路径" class="headerlink" title="4、模块搜索路径"></a>4、模块搜索路径</h3><p>当一个模块被导入，解释器寻找次序为：</p><p>（1）具有该名称的内置模块；</p><p>（2）从<code>sys.path</code>变量给出的目录里面找module.py的文件</p><blockquote><p>sys.path的初始路径：输入脚本的目录（未指定文件时为当前目录）、PYTHONPATH（一个包含目录名称的列表）、取决于安装的默认位置</p></blockquote><p>！在初始化之后可以更改<code>sys.path</code>，包含正在运行的脚本的文件目录将被放在搜索路径的开头，在标准库路径之前。所以，不要让文件和标准库重名了。</p><h3 id="5、关于编译过的python文件"><a href="#5、关于编译过的python文件" class="headerlink" title="5、关于编译过的python文件"></a>5、关于编译过的python文件</h3><p>在<code>__pycache__</code>缓存<code>.pyc</code>文件，会让载入速度变快但并不对执行起作用。</p><p>两种情况不检查缓存：（1）命令行载入的；（2）没有源模块。</p><ul><li>- O 编译时去除断言，- OO编译时去除断言和<code>__doc__</code>字符串</li><li>compileall模块可以为一个目录下的所有模块创建.pyc文件</li></ul><h3 id="6、dir-函数"><a href="#6、dir-函数" class="headerlink" title="6、dir()函数"></a>6、dir()函数</h3><p>（1）查看模块定义的名称，返回字符串列表</p><p>默认返回当前定义的名称，会列出所有类型的名称</p><p>（2）要查看内置函数和变量名称：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"><span class="built_in">dir</span>(builtins)</span><br></pre></td></tr></table></figure><h3 id="7、包"><a href="#7、包" class="headerlink" title="7、包"></a>7、包</h3><p>（1）模块的集合，分层的文件系统，<code>__init.py</code>是标志。</p><p>导入方法类似上述的模块（第2点）</p><p>（2）关于<code>__init.py</code>文件：</p><p>可以只是一个空文件，也可以是执行包的初始化代码或设置<code>__all__</code>变量：</p><p>包中导入*时，可能会产生不必要的副作用，所以此时可以提供一个包的显式索引，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from package import *</span><br><span class="line">设置：</span><br><span class="line">__all__ &#x3D; [&#39;moduleA&#39;,&#39;moduleB&#39;]</span><br><span class="line">如果没有设置__all__:</span><br><span class="line">不会导入包中的任何子模块，只确保 导入当前的模块和运行任何在__init.py__中的代码，然后导入包中定义的任何名称</span><br><span class="line"></span><br><span class="line">总结：</span><br><span class="line">建议使用from package import specific_submodule</span><br></pre></td></tr></table></figure><p>（3）包除了绝对导入外，还可以相对导入：“子包参考”</p><h2 id="四、类（更好地控制py文件实现功能）"><a href="#四、类（更好地控制py文件实现功能）" class="headerlink" title="四、类（更好地控制py文件实现功能）"></a>四、类（更好地控制py文件实现功能）</h2><h3 id="1、理解命名空间和作用域"><a href="#1、理解命名空间和作用域" class="headerlink" title="1、理解命名空间和作用域"></a>1、理解命名空间和作用域</h3><ul><li>命名空间：名字到对象的映射</li><li>作用域：一个命名空间可直接访问的python程序的文本区域</li></ul><p>global：将变量关联到全局作用域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">def scope_test():</span><br><span class="line">    def do_local():</span><br><span class="line">        spam &#x3D; &quot;local spam&quot;</span><br><span class="line"></span><br><span class="line">    def do_nonlocal():</span><br><span class="line">        nonlocal spam</span><br><span class="line">        spam &#x3D; &quot;nonlocal spam&quot;</span><br><span class="line"></span><br><span class="line">    def do_global():</span><br><span class="line">        global spam</span><br><span class="line">        spam &#x3D; &quot;global spam&quot;</span><br><span class="line"></span><br><span class="line">    spam &#x3D; &quot;test spam&quot;</span><br><span class="line">    do_local()</span><br><span class="line">    print(&quot;after local: &quot;, spam)</span><br><span class="line">    do_nonlocal()</span><br><span class="line">    print(&quot;after nonlocal: &quot;, spam)</span><br><span class="line">    do_global()</span><br><span class="line">    print(&quot;after global: &quot;, spam)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    # 理解作用域与命名空间，一个命名空间下的多个作用域</span><br><span class="line">    scope_test()</span><br><span class="line">    print(&quot;In global scope: &quot;, spam)</span><br></pre></td></tr></table></figure><h3 id="2、类-lt-–-gt-实例：属性引用"><a href="#2、类-lt-–-gt-实例：属性引用" class="headerlink" title="2、类&lt;–&gt;实例：属性引用"></a>2、类&lt;–&gt;实例：属性引用</h3><h4 id="（1）类的属性引用"><a href="#（1）类的属性引用" class="headerlink" title="（1）类的属性引用"></a>（1）类的属性引用</h4><ul><li>属性引用：返回内容或者函数对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A simple class&quot;&quot;&quot;</span></span><br><span class="line">    i = <span class="number">12345</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 属性引用</span></span><br><span class="line">    <span class="comment"># MyClass.i = &#x27;changed&#x27; 类的属性可以被赋值，可以通过赋值来更改值</span></span><br><span class="line">    print(MyClass.i)  <span class="comment"># 返回一个整数</span></span><br><span class="line">    print(MyClass.__doc__)</span><br><span class="line">    print(MyClass.f)  <span class="comment"># 返回一个函数对象</span></span><br></pre></td></tr></table></figure><h4 id="（2）实例的属性引用"><a href="#（2）实例的属性引用" class="headerlink" title="（2）实例的属性引用"></a>（2）实例的属性引用</h4><blockquote><p>可以视之为不带参数的函数，常常包含一个名为<code>__init__()</code>的特殊方法</p></blockquote><p>self即是类本身，初始化方法的使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, realpart, imagpart</span>):</span></span><br><span class="line">        self.r = realpart</span><br><span class="line">        self.i = imagpart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 实例化2</span></span><br><span class="line">    x2 = Complex(<span class="number">3.0</span>, <span class="number">-4.5</span>)</span><br><span class="line">    print(<span class="string">&#x27;实数部分：%.1f；虚数部分：%.1f&#x27;</span> % (x2.r, x2.i))</span><br></pre></td></tr></table></figure><ul><li><h5 id="数据属性"><a href="#数据属性" class="headerlink" title="数据属性"></a>数据属性</h5><p>赋值时产生，实例化时的专有名词，对应类时的变量</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化的属性引用: 数据属性</span></span><br><span class="line">x.counter = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> x &lt; <span class="number">10</span>:</span><br><span class="line">    x.counter = x.counter * <span class="number">2</span></span><br><span class="line">print(x.counter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> x.counter</span><br></pre></td></tr></table></figure><ul><li><h5 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h5></li></ul><p>类的属性引用叫做函数对象&gt;&gt;&gt;实例化之后的引用叫做方法</p><p>方法可以在绑定后被立即调用，也可以被保存起来以后再调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法 类的属性引用叫做函数对象 实例化之后的引用叫做方法</span></span><br><span class="line">xf = x.f <span class="comment"># 注意这里！！！ x.f:绑定，不立即调用； x.f():绑定后立即调用</span></span><br><span class="line">print(xf())</span><br></pre></td></tr></table></figure><p>方法：实例对象会作为函数的第一个参数被传入，调用<code>x.f()</code>相当于<code>MyClass.f(x)</code></p><h3 id="3、类和实例中的“变量”"><a href="#3、类和实例中的“变量”" class="headerlink" title="3、类和实例中的“变量”"></a>3、类和实例中的“变量”</h3><p>实例中的实例变量是<strong>每个实例的唯一数据</strong>，类中的变量是<strong>所有实例共享的属性和方法</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">    kind = <span class="string">&#x27;canine&#x27;</span>  <span class="comment"># class variable shared by all instance</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># instance variable unique to each variable</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 类和实例变量</span></span><br><span class="line">    d = Dog(<span class="string">&#x27;Fido&#x27;</span>)</span><br><span class="line">    e = Dog(<span class="string">&#x27;Buddy&#x27;</span>)</span><br><span class="line">    print(<span class="string">&quot;=== shared by all variable ===&quot;</span>)</span><br><span class="line">    print(d.kind)</span><br><span class="line">    print(e.kind)</span><br><span class="line">    print(<span class="string">&quot;=== unique by each variable ===&quot;</span>)</span><br><span class="line">    print(d.name)</span><br><span class="line">    print(e.name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>！注意：类中的变量会共享给所有实例，要想使得某个变量被独享，应该放在初始化方法中</p><p>*<em>反例: *</em></p><p>属性引用被映射到了公共区域，若是想要独享，只要映射在实例特有区域便可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">    kind = <span class="string">&#x27;canine&#x27;</span>  <span class="comment"># class variable shared by all instance</span></span><br><span class="line"></span><br><span class="line">    tricks = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># instance variable unique to each variable</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_tricks</span>(<span class="params">self, trick</span>):</span></span><br><span class="line">        self.tricks.append(trick)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog2</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># instance variable unique to each variable</span></span><br><span class="line">        self.tricks = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_tricks</span>(<span class="params">self, trick</span>):</span></span><br><span class="line">        self.tricks.append(trick)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 共享范围对比</span></span><br><span class="line">    print(<span class="string">&quot;=== 这是放在类的共享区域里： ===&quot;</span>)</span><br><span class="line">    d = Dog(<span class="string">&#x27;Fido&#x27;</span>)</span><br><span class="line">    e = Dog(<span class="string">&#x27;Buddy&#x27;</span>)</span><br><span class="line">    d.add_tricks(<span class="string">&#x27;roll over&#x27;</span>)  </span><br><span class="line">    e.add_tricks(<span class="string">&#x27;play dead&#x27;</span>)</span><br><span class="line">    print(d.tricks)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;=== 这是利用初始化，为每个实例创建的空间： ===&quot;</span>)</span><br><span class="line">    d2 = Dog2(<span class="string">&#x27;Fido&#x27;</span>)</span><br><span class="line">    e2 = Dog2(<span class="string">&#x27;Buddy&#x27;</span>)</span><br><span class="line">    d2.add_tricks(<span class="string">&#x27;roll over&#x27;</span>)  <span class="comment"># 换言之，实例将属性引用映射到了不同的位置：查找时一般时先映射到共享的类的位置，再是映射到每个实例下。</span></span><br><span class="line">    e2.add_tricks(<span class="string">&#x27;play dead&#x27;</span>)</span><br><span class="line">    print(d2.tricks)</span><br><span class="line">    print(e2.tricks)</span><br></pre></td></tr></table></figure><h3 id="4、属性查找优先级"><a href="#4、属性查找优先级" class="headerlink" title="4、属性查找优先级"></a>4、属性查找优先级</h3><p>同样的属性名称同时出现在类和实例中，则属性查找会<strong>优先选择实例</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Warehouse</span>:</span></span><br><span class="line">    purpose = <span class="string">&#x27;storage&#x27;</span></span><br><span class="line">    region = <span class="string">&#x27;west&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    w1 = Warehouse()</span><br><span class="line">    print(w1.purpose, w1.region)</span><br><span class="line">    print(<span class="string">&quot;=====前后对比=====&quot;</span>)</span><br><span class="line">    w2 = Warehouse()</span><br><span class="line">    w2.region = <span class="string">&#x27;east&#x27;</span></span><br><span class="line">    print(w2.purpose, w2.region)</span><br></pre></td></tr></table></figure><p>方法可以引用全局名称，比如模块、函数。</p><h3 id="5、继承"><a href="#5、继承" class="headerlink" title="5、继承"></a>5、继承</h3><p>派生类：<code>DerivedClassName(BaseName):</code></p><p>当构造类对象时，基类会被记住，用来解析属性引用：</p><p>请求的属性在当前类中找不到，上一级去基类中找。再找不到，如果有基类的基类，就继续递归式地查找。</p><ul><li>派生类可能重载基类的方法</li><li>两个内置函数可以被用于继承机制：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isinstance</span>() 检查一个实例的类型</span><br><span class="line"><span class="built_in">issubclass</span>() 检查类的继承关系</span><br></pre></td></tr></table></figure><h3 id="6、私有变量、一些说明"><a href="#6、私有变量、一些说明" class="headerlink" title="6、私有变量、一些说明"></a>6、私有变量、一些说明</h3><p>下划线的名称改写</p><h3 id="7、迭代器"><a href="#7、迭代器" class="headerlink" title="7、迭代器"></a>7、迭代器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 8、生成器</span><br><span class="line"></span><br><span class="line">用于创建迭代器的工具，使用&#96;&#96;&#96;yield&#96;&#96;&#96;语句</span><br><span class="line"></span><br><span class="line">### 9、生成器表达式</span><br><span class="line"></span><br><span class="line">语法类似与列表推导式，外层为圆括号。</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;python</span><br><span class="line"># 生成器表达式</span><br><span class="line">print(&quot;使用生成器表达式：&quot;, sum(i*i for i in range(10)))</span><br></pre></td></tr></table></figure><h2 id="五、错误（学习出现意外的处理手段）"><a href="#五、错误（学习出现意外的处理手段）" class="headerlink" title="五、错误（学习出现意外的处理手段）"></a>五、错误（学习出现意外的处理手段）</h2><p>两种可区分的错误：错误和异常</p><h3 id="1、语法错误"><a href="#1、语法错误" class="headerlink" title="1、语法错误"></a>1、语法错误</h3><p>Syntax Error：解析时发现的错误</p><h3 id="2、异常"><a href="#2、异常" class="headerlink" title="2、异常"></a>2、异常</h3><p>程序执行时检测到的错误：</p><blockquote><p>错误的最后一行，遇到了什么类型的错误；</p><p>错误的前一部分，以堆栈回溯的形式显示发生异常时的上下文</p></blockquote><h3 id="3、处理异常"><a href="#3、处理异常" class="headerlink" title="3、处理异常"></a>3、处理异常</h3><ul><li>异常测试：执行try语句，正常情况跳过except；出现异常去检测except中匹配的部分并执行，（没有时报错），执行完继续try语句。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">except_test</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;please input a number: &quot;</span>))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            print(<span class="string">&quot;Oops! That was no valid number. Try again...&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 异常测试：执行try语句，正常情况跳过except；出现异常去检测except中匹配的部分并执行，（没有时报错），执行完继续try语句</span></span><br><span class="line">    except_test()</span><br></pre></td></tr></table></figure><h4 id="（1）一个except语句可以用元组包含多个异常"><a href="#（1）一个except语句可以用元组包含多个异常" class="headerlink" title="（1）一个except语句可以用元组包含多个异常"></a>（1）一个except语句可以用元组包含多个异常</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">except</span> (RuntimeError, TypeError, NameError):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="（2）异常执行时，基类可以起到派生类的作用，假如将基类放在前面，则出发基类。"><a href="#（2）异常执行时，基类可以起到派生类的作用，假如将基类放在前面，则出发基类。" class="headerlink" title="（2）异常执行时，基类可以起到派生类的作用，假如将基类放在前面，则出发基类。"></a>（2）异常执行时，基类可以起到派生类的作用，假如将基类放在前面，则出发基类。</h4><blockquote><p><strong>异常类的兼容问题: 基类兼容派生类。但是派生类不兼容基类</strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>(<span class="params">B</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span>(<span class="params">C</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 异常类的兼容问题: 基类兼容派生类。但是派生类不兼容基类</span></span><br><span class="line">    <span class="keyword">for</span> cls <span class="keyword">in</span> [B, C, D]:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">raise</span> cls()</span><br><span class="line">        <span class="keyword">except</span> D:</span><br><span class="line">            print(<span class="string">&quot;D&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> C:</span><br><span class="line">            print(<span class="string">&quot;C&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> B:</span><br><span class="line">            print(<span class="string">&quot;B&quot;</span>)</span><br></pre></td></tr></table></figure><p>反例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># 异常覆盖</span></span><br><span class="line"><span class="keyword">for</span> cls <span class="keyword">in</span> [B, C, D]:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">raise</span> cls()</span><br><span class="line">    <span class="keyword">except</span> B:</span><br><span class="line">        print(<span class="string">&quot;B&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> D:</span><br><span class="line">        print(<span class="string">&quot;D&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> C:</span><br><span class="line">        print(<span class="string">&quot;C&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="（3）except后没有任何东西时，通配符"><a href="#（3）except后没有任何东西时，通配符" class="headerlink" title="（3）except后没有任何东西时，通配符"></a>（3）except后没有任何东西时，通配符</h4><p><strong>这种方式可能会掩盖真正的编程错误</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">no_except</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">&#x27;myfile.txt&#x27;</span>)</span><br><span class="line">        s = f.readline()</span><br><span class="line">        i = <span class="built_in">int</span>(s.strip())</span><br><span class="line">    <span class="keyword">except</span> OSError <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">&quot;OS error: &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(err))</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        print(<span class="string">&quot;Could not convert data to an integer.&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;Unexpected error:&quot;</span>, sys.exc_info()[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 省略异常以用作通配符</span></span><br><span class="line">    no_except()</span><br></pre></td></tr></table></figure><h4 id="（4）可选的else子句"><a href="#（4）可选的else子句" class="headerlink" title="（4）可选的else子句"></a>（4）可选的else子句</h4><p>try…except…既是捕获异常，也是对一段代码的保护。而使用else语句可以避免意外捕获try-except语句保护的代码引发的异常。——&gt;就是把try执行代码分开了，针对性地处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">else_test</span>():</span></span><br><span class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> sys.argv[<span class="number">1</span>:]:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            f = <span class="built_in">open</span>(arg, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">            print(<span class="string">&#x27;here...&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            print(<span class="string">&#x27;cannot open&#x27;</span>, arg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(arg, <span class="string">&#x27;has&#x27;</span>, <span class="built_in">len</span>(f.readlines()), <span class="string">&#x27;lines&#x27;</span>)</span><br><span class="line">            f.close()</span><br><span class="line">            </span><br><span class="line"><span class="comment"># else子句测试</span></span><br><span class="line"> else_test()</span><br></pre></td></tr></table></figure><h4 id="（5）except可以在异常后面指定一个变量关联到实例"><a href="#（5）except可以在异常后面指定一个变量关联到实例" class="headerlink" title="（5）except可以在异常后面指定一个变量关联到实例"></a>（5）except可以在异常后面指定一个变量关联到实例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connect_except</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> inst:</span><br><span class="line">        print(<span class="built_in">type</span>(inst))</span><br><span class="line">        print(inst.args)</span><br><span class="line">        print(inst)</span><br><span class="line"></span><br><span class="line">        x, y = inst.args  <span class="comment"># unpack args</span></span><br><span class="line">        print(<span class="string">&#x27;x = &#x27;</span>, x)</span><br><span class="line">        print(<span class="string">&#x27;y = &#x27;</span>, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># except可以在异常后面指定一个变量关联到实例</span></span><br><span class="line"><span class="comment"># connect_except()</span></span><br></pre></td></tr></table></figure><h4 id="（6）程序可以处理try子句中函数内部发生的异常"><a href="#（6）程序可以处理try子句中函数内部发生的异常" class="headerlink" title="（6）程序可以处理try子句中函数内部发生的异常"></a>（6）程序可以处理try子句中函数内部发生的异常</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inner_test</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        this_fails()</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">&#x27;Handing run-time error:&#x27;</span>, err)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 程序可以处理try子句中函数内部发生的异常</span></span><br><span class="line">    inner_test()</span><br></pre></td></tr></table></figure><h3 id="4、抛出异常"><a href="#4、抛出异常" class="headerlink" title="4、抛出异常"></a>4、抛出异常</h3><p>raise语句：强制发生指定的异常</p><p>唯一的参数就是指定的异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">raise</span> NameError</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;D:/coding/python/python_learn/basic/error_expectation06.py&quot;</span>, line <span class="number">78</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">raise</span> NameError</span><br><span class="line">NameError</span><br></pre></td></tr></table></figure><p>重新出发异常：确定异常是否被引发但不处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">raise_again</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">raise</span> NameError(<span class="string">&#x27;HiThere&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> NameError:</span><br><span class="line">        print(<span class="string">&#x27;An exception flew by!&#x27;</span>)</span><br><span class="line">        <span class="keyword">raise</span>  <span class="comment"># 这个raise重新触发了Name Error 打印出来后面的内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 重新引发异常</span></span><br><span class="line">    raise_again()</span><br></pre></td></tr></table></figure><blockquote><p>用户可以从Exception派生类自定义自己的异常</p></blockquote><h3 id="5、定义清理操作"><a href="#5、定义清理操作" class="headerlink" title="5、定义清理操作"></a>5、定义清理操作</h3><p>finally子句：定义必须在所有的情况下执行的清理操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">finally_test</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">raise</span> KeyboardInterrupt</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        print(<span class="string">&#x27;Goodbye, world!&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 定义必须在所有的情况下执行的清理操作</span></span><br><span class="line">    finally_test()</span><br></pre></td></tr></table></figure><p>finally子句的优先级是最高的，比except、try都高：</p><ul><li>except的异常（try中、except中、else中）在finally执行完毕后才被触发</li><li>try中的break、continue或return在finally之后被执行</li><li>try和finally中都有return时，以finally中的为准</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bool_return</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># finally拥有最高的优先级</span></span><br><span class="line">    x = bool_return()</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><blockquote><p>实际应用程序中，finally子句对于是否释放外部资源（例如文件或者网络连接）非常有用，无论是否成功使用资源。</p></blockquote><h3 id="6、预定义的清理操作——with子句"><a href="#6、预定义的清理操作——with子句" class="headerlink" title="6、预定义的清理操作——with子句"></a>6、预定义的清理操作——with子句</h3><p>在代码执行完毕后及时地清理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">with_test</span>():</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;myfile.txt&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            print(line, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># with子句预定义清理操作</span></span><br><span class="line">    with_test()</span><br></pre></td></tr></table></figure><h2 id="六、外界交互（解决现实问题初步）"><a href="#六、外界交互（解决现实问题初步）" class="headerlink" title="六、外界交互（解决现实问题初步）"></a>六、外界交互（解决现实问题初步）</h2><h3 id="A-输入"><a href="#A-输入" class="headerlink" title="A.输入"></a>A.输入</h3><p>写入值的方法：</p><h4 id="1、表达式语句"><a href="#1、表达式语句" class="headerlink" title="1、表达式语句"></a>1、表达式语句</h4><p>格式化输出法：一是格式化字符串面值；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">format_one</span>():</span></span><br><span class="line">    year = <span class="number">2021</span></span><br><span class="line">    event = <span class="string">&#x27;Referendum&#x27;</span></span><br><span class="line">    print(<span class="string">f&#x27;Results of the <span class="subst">&#123;year&#125;</span> <span class="subst">&#123;event&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    format_one()</span><br></pre></td></tr></table></figure><p>二是用字符串的str.format()方法；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;格式化是这样使唤的：&#123;a&#125;。。。&#123;b&#125;&#x27;</span>.<span class="built_in">format</span>(a=<span class="string">&#x27;没错，你使唤对了&#x27;</span>,b=<span class="string">&#x27;对了2&#x27;</span>))</span><br><span class="line">格式化是这样使唤的：没错，你使唤对了。。。对了<span class="number">2</span></span><br></pre></td></tr></table></figure><p>三是使用字符串切片和连接操作</p><blockquote><p>只想要快速调试时，可以使用repr()函数和str()函数</p></blockquote><h4 id="2、print函数"><a href="#2、print函数" class="headerlink" title="2、print函数"></a>2、print函数</h4><h4 id="3、文件对象的write方法"><a href="#3、文件对象的write方法" class="headerlink" title="3、文件对象的write方法"></a>3、文件对象的write方法</h4><h3 id="B-输出"><a href="#B-输出" class="headerlink" title="B.输出"></a>B.输出</h3><h2 id="七、大型程序基础"><a href="#七、大型程序基础" class="headerlink" title="七、大型程序基础"></a>七、大型程序基础</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;第三次学习python，之前对编程学习一直是伴随着网课教程的思路，几经浮沉，总是不得要点，近日静下心来细细回味之前学习的零散知识点，带着“我想掌握python的哪些知识，想用它来做什么”的问题，来学习这一门编程语言，于是，构建了如下基础知识体系。&lt;/p&gt;</summary>
    
    
    
    <category term="编程 python" scheme="lider7214.cn/categories/%E7%BC%96%E7%A8%8B-python/"/>
    
    
    <category term="python编程思考" scheme="lider7214.cn/tags/python%E7%BC%96%E7%A8%8B%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>使用matplotlib绘制单词数量分布条形图</title>
    <link href="lider7214.cn/2020/12/25/%E4%BD%BF%E7%94%A8matplotlib%E7%BB%98%E5%88%B6%E5%8D%95%E8%AF%8D%E6%95%B0%E9%87%8F%E5%88%86%E5%B8%83%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    <id>lider7214.cn/2020/12/25/%E4%BD%BF%E7%94%A8matplotlib%E7%BB%98%E5%88%B6%E5%8D%95%E8%AF%8D%E6%95%B0%E9%87%8F%E5%88%86%E5%B8%83%E6%9D%A1%E5%BD%A2%E5%9B%BE/</id>
    <published>2020-12-25T08:16:15.000Z</published>
    <updated>2020-12-25T08:39:39.976Z</updated>
    
    <content type="html"><![CDATA[<p>最近在记忆英语单词，想要统计出每个字母下的单词数量多少，然后比对分区，先记少的，再记忆多的，日积月累。</p><blockquote><p>策略：精读+泛记，精多由少到多，泛读由多到少。</p></blockquote><p>于是就决定用python来实现字母数据整理这一步。</p><a id="more"></a><p>主要使用了python的matplotlib中的pylot模块，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.font_manager <span class="keyword">as</span> fm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">number_of_words</span>():</span></span><br><span class="line">    <span class="comment"># 绘制图</span></span><br><span class="line">    x_data = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>]</span><br><span class="line">    y_data = [<span class="number">456</span>, <span class="number">283</span>, <span class="number">656</span>, <span class="number">380</span>, <span class="number">325</span>, <span class="number">204</span>, <span class="number">140</span>, <span class="number">177</span>, <span class="number">304</span>, <span class="number">37</span>, <span class="number">17</span>, <span class="number">156</span>, <span class="number">271</span>, <span class="number">98</span>, <span class="number">122</span>, <span class="number">78</span>, <span class="number">1</span>, <span class="number">183</span>, <span class="number">645</span>, <span class="number">254</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">92</span>,</span><br><span class="line">              <span class="number">0</span>, <span class="number">6</span>, <span class="number">3</span>]</span><br><span class="line">    <span class="comment"># plt.plot(x_data, y_data, color=&#x27;red&#x27;, linewidth=2.0,linestyle=&#x27;-&#x27;)</span></span><br><span class="line">    plt.bar(x_data, y_data, fc=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 选择字体命名</span></span><br><span class="line">    de_font = fm.FontProperties(fname=<span class="string">&#x27;simfang.ttf&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;背诵单词数量分布&#x27;</span>, fontproperties=de_font)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 标注数值</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(x_data, y_data):</span><br><span class="line">        plt.text(a, b, <span class="string">&#x27;%.0f&#x27;</span> % b, verticalalignment=<span class="string">&#x27;baseline&#x27;</span>, horizontalalignment=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.xlabel(<span class="string">&#x27;字母表&#x27;</span>, fontproperties=de_font)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;数量&#x27;</span>, fontproperties=de_font)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存画好的图(!先保存后显示)</span></span><br><span class="line">    plt.savefig(<span class="string">&#x27;./words.png&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    number_of_words()</span><br></pre></td></tr></table></figure><p>总结：在学习拓展库的功能时，不必一次追求大而全，带着目的去学习掌握需要的功能，消化吸收，向外拓展。这次绘图最初使用了折线图，但折线图偏向于反映趋势，并不能很好地展现分布，于是进一步变动有了条形图。绘制出条形图之后，想着再添加一些文字、标注，于是便有了最后的成品。</p><p>可以见得，不管多么简单的想法的实现，都是一步步完善的。</p><p>附效果图如下：</p><p><img src="/img/matplotlib/words.png" alt="words"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在记忆英语单词，想要统计出每个字母下的单词数量多少，然后比对分区，先记少的，再记忆多的，日积月累。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;策略：精读+泛记，精多由少到多，泛读由多到少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是就决定用python来实现字母数据整理这一步。&lt;/p&gt;</summary>
    
    
    
    <category term="编程 python" scheme="lider7214.cn/categories/%E7%BC%96%E7%A8%8B-python/"/>
    
    
    <category term="python-matplotlib" scheme="lider7214.cn/tags/python-matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>记录施工企业会计学一点感悟</title>
    <link href="lider7214.cn/2020/12/03/%E8%AE%B0%E5%BD%95%E6%96%BD%E5%B7%A5%E4%BC%81%E4%B8%9A%E4%BC%9A%E8%AE%A1%E5%AD%A6%E4%B8%80%E7%82%B9%E6%84%9F%E6%82%9F/"/>
    <id>lider7214.cn/2020/12/03/%E8%AE%B0%E5%BD%95%E6%96%BD%E5%B7%A5%E4%BC%81%E4%B8%9A%E4%BC%9A%E8%AE%A1%E5%AD%A6%E4%B8%80%E7%82%B9%E6%84%9F%E6%82%9F/</id>
    <published>2020-12-03T10:53:54.000Z</published>
    <updated>2020-12-03T11:30:27.596Z</updated>
    
    <content type="html"><![CDATA[<p>复习的过程对会计学有了一些认识，记录。</p><a id="more"></a><p>最近触动很大的一个学习观念——“我一直认为，在学习上，智商比方法重要，方法比努力重要”。思考是生产第一驱动力。</p><p>所以，一直去思索如何更高效地获取知识、内化。</p><p>我对会计学的认识，或者说学习。先达到一个及格的框架，了解清楚学习的主干，在这个主干上是实践的精华，而任何深入的学习都基于这个主干去拓展丰富，时间投入的多少了。</p><p>会计学源于人们对经济活动记录方法的思考，这一学科，最基础的便是记录经济业务的往来。</p><p>那么如何完善、精确地记录每一社会单位的经济行为呢？特定的语言与特定的方法。在我学习的施工企业会计里，就是用借贷记账符号表示每一笔业务的来龙去脉，然后在借贷的基础上，引入复式记账，构成会计基础核算体系。</p><p>这一基础体系静态叫做资产负债记录，动态又引入了成本、费用，叫做利润记录。</p><p>一条条记录按照一定的时间组合，形成凭证期间的集合体，集合体的汇集便是帐薄。</p><p>会计的主干体系也由此而生，底层到顶层，这些脉络分明的账目为我们提供了许许多多可以反映的信息，供社会公众、政府相关部门、企业高管、债权人和投资人研读。</p><p>其中的细节之处每每想起，也让人赞叹其中的活性。</p><p>单从<em>资产=负债+所有者权益</em>这一等式去散发思考，资产细化有固定资产、存货、固定资产、无形资产等，每一个细化之下有着主干的账目又从主干的账目动态地设置了应对日常变化的准备变动。</p><p>举个例子，固定资产是一级科目，所有的资产是在这一出核算，但为了反映更多问题，固定资产对应又设置了累计折旧、在建工程、工程物资、固定资产减值、固定资产清理。这些账目每一个都具有现实意义——累计折旧反映企业固定资产的使用、在建工程反映正在建设的工程的成本、工程物资为在建工程服务、固定资产清理又是对企业资产发生“特殊”情况的一种考虑。</p><p>前前后后，全面地记录忠实地反映问题，会计的妙处也在其中体现的淋漓尽致。</p><p>最后，写到这里想到所学的会计学对现实情况建立了四个基本假设——大体来说，就是企业健康地运营下去，按照期间统计业务变动等。这一模型简化现实，专注于问题本身的主要矛盾，也是科学学习中的一种常见的处理问题的手段。</p><p>学而不思则罔，思而不学则殆。</p><p align="right">——2020/12/03</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;复习的过程对会计学有了一些认识，记录。&lt;/p&gt;</summary>
    
    
    
    <category term="理论 经济管理" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="施工企业会计" scheme="lider7214.cn/tags/%E6%96%BD%E5%B7%A5%E4%BC%81%E4%B8%9A%E4%BC%9A%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>十一月，《旅程》</title>
    <link href="lider7214.cn/2020/11/29/%E5%8D%81%E4%B8%80%E6%9C%88/"/>
    <id>lider7214.cn/2020/11/29/%E5%8D%81%E4%B8%80%E6%9C%88/</id>
    <published>2020-11-29T14:02:44.302Z</published>
    <updated>2020-11-29T14:10:18.505Z</updated>
    
    <content type="html"><![CDATA[<p>作者汪国真</p><a id="more"></a><p>意志倒下了</p><p>生命也就不再屹立</p><p>歪歪斜斜的身影</p><p>怎耐得，</p><p>秋叶萧瑟 </p><p>晚来风急</p><p>垂下头颅</p><p>只是为了让思想扬起</p><p>你若有一个不屈的灵魂</p><p>脚下，</p><p>就会有一片坚实的土地</p><p>无论走向何方</p><p>都会有无数双眼睛跟随着你</p><p>从别人那里</p><p>我们认识了自己</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;作者汪国真&lt;/p&gt;</summary>
    
    
    
    <category term="生活 阅读" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="诗歌" scheme="lider7214.cn/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>matlab</title>
    <link href="lider7214.cn/2020/11/09/matlab/"/>
    <id>lider7214.cn/2020/11/09/matlab/</id>
    <published>2020-11-09T06:27:32.000Z</published>
    <updated>2020-11-09T13:48:47.234Z</updated>
    
    <content type="html"><![CDATA[<p>本篇内容是我用matlab学习图像处理的记录</p><p>Q:how to improve my coding force level</p><p>A:我会找个教程/文档例子，把代码逐行敲一遍，感觉就像是我自己写的一样，一旦完成，我会从头重写一遍，添加注释，并根据自己的用例修改它。</p><a id="more"></a><p><strong>结合右侧的目录学习体验会更好</strong></p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="matlab界面"><a href="#matlab界面" class="headerlink" title="matlab界面"></a>matlab界面</h2><p><img src="/img/matlab/matlab001_%E7%95%8C%E9%9D%A2.png" alt="matlab界面"></p><p>我们常规见到的界面应该包括在如图的6个窗口中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、命令行窗口：这是MATLAB运行命令的主要位置</span><br><span class="line">2、编辑器：编程工作区</span><br><span class="line">3、菜单栏：常规功能</span><br><span class="line">4、变量：显示变量的具体内容</span><br><span class="line">5、当前文件夹&amp;详细信息：这两个是分不开的</span><br><span class="line">6、工作区：显示了当前工作状态下的所有变量</span><br></pre></td></tr></table></figure><h3 id="命令行窗口"><a href="#命令行窗口" class="headerlink" title="命令行窗口"></a>命令行窗口</h3><p>命令行窗口可以快速运行一些计算或执行命令。当出现提示光标&gt;&gt;时，即代表命令行准备就绪</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="number">1</span>+<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; </span><br><span class="line"></span><br><span class="line">使用命令行窗口还有一个非常好用的小trick，那就是在命令行准备就绪时，可以使用上方向键直接调取历史命令。而如果你已经输入了一些内容，则会调取与你输入内容开头相匹配的命令。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><p>我们总是希望编写完程序后可以自动运行，而不是每次都手动输入命令。在编辑器中，我们可以编辑脚本文件或函数文件，其语法与命令行相同。</p><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><p>菜单栏覆盖了几乎所有的初学MATLAB的操作。例如，我们点击菜单栏中的“主页”-&gt;“新建脚本”，将会自动跳转到新的脚本界面。我们编辑以下脚本内容：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 绘制y=x^2的图像</span></span><br><span class="line">a = <span class="number">1</span>:<span class="number">10</span>;</span><br><span class="line">b = a.^<span class="number">2</span>;</span><br><span class="line"><span class="built_in">plot</span>(a,b);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>点击菜单栏中“编辑器”-&gt;“保存”，将脚本文件命名为“Script2_1.m”将结果直接保存至当前文件夹。再次点击<br>“运行”，即可出现下图所示结果。<br><img src="/img/matlab/matlab002_figure1.png" alt="figure"></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>运行完刚刚的程序，可以看到我们的工作区中目前有a，ans，b三个变量。我们双击a变量，即可打开变量窗口。可以看到下图所示的内容。<br><img src="/img/matlab/matlab003_variable.png" alt="variable"></p><p>“1×10 double”表明该变量的大小为1行×10列，每个元素的类型均为double（双精度浮点数）。以此点击别的变量，我们可以看到对应的变量内容。</p><p>需要注意的是，在变量窗口中，变量的值是可以直接被修改的。双击其中的一个元素，即可对元素进行更改。</p><h3 id="当前文件夹-amp-详细信息"><a href="#当前文件夹-amp-详细信息" class="headerlink" title="当前文件夹&amp;详细信息"></a>当前文件夹&amp;详细信息</h3><p>同菜单栏下方的地址栏一起，表明你当前的工作位置。正常情况下，当前文件夹中显示的文件夹均为透明，表明这些文件夹处于不可用状态，即不在你的工作区当中。</p><p>这两者有什么区别呢？我们在当前文件夹中右键，创建一个新文件夹。接着，我们再次创建一个脚本“Script2_2.m”，并保存至新创建的文件夹下。这时我们在命令行窗口中输入“Script2_1”，可以看到之前编写的程序重新运行。但是我们如果输入“Script2_1”，将会提示“未定义函数或变量 ‘Script2_1’。”这就是因为我们新创建的文件夹并不属于当前工作区导致的。</p><p>解决方法就是右击新建的文件夹文件夹，选择“添加到路径”，根据情况选择是否需要添加子文件夹即可。这时我们可以看到，原本透明的文件夹已经变得不透明，其中的脚本文件也可以成功运行。</p><p>如果我们选择“Script2_1.m”，可以看到详细信息中出现了“绘制y=x^2的图像”，这正是我们编写脚本时开头的注释。因此这里希望大家养成良好的习惯，在编写脚本时在开头使用注释简单说明程序功能，以方便之后的查找。</p><p>PS：在当前文件夹中，可以进行各种常规资源管理器操作，例如复制、粘贴、重命名等。<br><img src="/img/matlab/matlab004_current_folder.png" alt="current folder"></p><h3 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h3><p>工作区显示了当前状态下的所有变量情况，包括名称、值等。左键标题可以进行排序，右键标题即可选择显示的内容，双击变量即可打开变量窗口。</p><p>另外，在工作区中选择变量后，按Del键可以删除变量。</p><p>如果想快速清除所有变量，可以在命令行中输入clear。</p><ul><li>当不清楚一个功能时，在命令行窗口输入用 help + 查询函数会有官方解释，（网上查也是一种选择）</li><li>有用的函数指令<br>  clc: 清空命令行窗口<br>  clear: 清空工作变量区的所有变量<br>  close all； 关闭建立的所有窗口</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>接下来我们将学习MATLAB中的各种数据类型，主要包括10种基本数据类型和4种复合数据类型。</p><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>和一般的编程语言一样，MATLAB的基本数据类型分为两种，即整型(int)和浮点数(float)。其中整形根据其是否包含负数可以进一步分为有符号整形和无符号整形，而浮点数根据其精度不同又可以进一步划分为单精度浮点数和双精度浮点数。下面的表格列出了各种基本数据类型对应的表示范围，这里类型名称沿用了一般编程语言中的名称。</p><p>(图像初期用到的基本数据类型是unit8和double类型。)<br><img src="/img/matlab/matlab004_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="数据类型"></p><p>在MATLAB中，不显式指定数据类型的情况下，默认所有的数据类型均为double类型。如果需要创建一个其他类型的变量，只需要加上其符号名即可，例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = int8(<span class="number">13</span>);        <span class="comment">% 创建一个字节型整数13</span></span><br><span class="line">b = single(<span class="number">25.56</span>);    <span class="comment">% 创建一个单精度浮点数25.56</span></span><br><span class="line">c = <span class="number">-32</span>;        <span class="comment">% 未显式指明数据类型，创建一个双精度浮点数32</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>MATLAB中，有几个特殊的常量，它们分别是：</p><pre><code>pi：圆周率πeps：最小浮点数Inf：正无穷大，即1/0NaN：非数，即0/0i,j：虚数单位</code></pre><h2 id="复合数据类型——矩阵"><a href="#复合数据类型——矩阵" class="headerlink" title="复合数据类型——矩阵"></a>复合数据类型——矩阵</h2><p>类似一般编程语言中的数组，MATLAB中也有很多复合数据类型，可以将众多基本数据类型合并到一起。最为常见的符合数据类型包括矩阵，结构体和元胞矩阵。</p><p>矩阵是MATLAB中的基本运算单元，即使是一个数在MATLAB中也是被当做1*1的矩阵看待的。矩阵由若干维度组成，例如0维矩阵表示一个元素，1维矩阵表示一个向量，还有2维、3维甚至更高维的矩阵。在MATLAB中，常规矩阵的最小维度为2维，即一般数学意义上的矩阵，而标量、向量都是矩阵的特例。下面我们将以2维矩阵为例，介绍其生成与运算。</p><p>矩阵的生成方式主要包括以下几种方式：</p><h3 id="矩阵的生成–直接输入"><a href="#矩阵的生成–直接输入" class="headerlink" title="矩阵的生成–直接输入"></a>矩阵的生成–直接输入</h3><p>利用直接输入的方法，我们可以生成一个矩阵。输入的矩阵用中括号表示，同一行元素之间使用逗号或空格分开，用分号或回车结束一行的输入。例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>; <span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b = [<span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当输入的矩阵不指定变量名称时，结果将暂时保存到ans变量中，即</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; [2,3; 3,4]</span><br><span class="line"></span><br><span class="line">ans &#x3D;</span><br><span class="line"></span><br><span class="line">     2     3</span><br><span class="line">     3     4</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果没有及时保存结果，ans变量中的内容将会被下一次不指定变量名称的输出结果覆盖。</p><h3 id="矩阵的生成–函数生成"><a href="#矩阵的生成–函数生成" class="headerlink" title="矩阵的生成–函数生成"></a>矩阵的生成–函数生成</h3><p>MATLAB中有一些好用的函数，用于构造一些具有特殊性质的矩阵。例如常用的构造函数：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; zeros23 = <span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">3</span>) <span class="comment">% 生成2*3的零矩阵</span></span><br><span class="line"></span><br><span class="line">zeros23 =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; ones3 = <span class="built_in">ones</span>(<span class="number">3</span>) <span class="comment">% 生成3*3的全1矩阵，方阵只需要输入行数</span></span><br><span class="line"></span><br><span class="line">ones3 =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; eye32 = <span class="built_in">eye</span>(<span class="number">3</span>,<span class="number">2</span>) <span class="comment">% 生成3*2的单位对角阵</span></span><br><span class="line"></span><br><span class="line">eye32 =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><p>类似的函数还有rand()（生成随机矩阵）, magic()（生成幻方矩阵）等，大家可以自行尝试。</p><h3 id="矩阵计算"><a href="#矩阵计算" class="headerlink" title="矩阵计算"></a>矩阵计算</h3><p>MATLAB中提供了以下的矩阵运算符</p><pre><code>+（加法），-（减法），*（乘法），’（转置），\（左除），/（右除），^（乘幂）</code></pre><p>在使用矩阵运算符的过程中，应使得操作矩阵符合矩阵运算性质。例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">ones</span>(<span class="number">2</span>)^<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">eye</span>(<span class="number">3</span>,<span class="number">2</span>) * <span class="built_in">eye</span>(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; ans&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>特别的，当加法、减法和乘法作用于矩阵和标量时，代表对矩阵中每个元素进行对应的处理，例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">eye</span>(<span class="number">2</span>,<span class="number">3</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">4.5</span>*<span class="built_in">ones</span>(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">4.5000</span>    <span class="number">4.5000</span></span><br><span class="line">    <span class="number">4.5000</span>    <span class="number">4.5000</span></span><br></pre></td></tr></table></figure><p>另外，对于左除和右除，其用法如下：</p><pre><code>设\(A\)为可逆矩阵，\(AX=B\)的解是\(X=A\setminus B\)，\(XA=B\)的解是\(X=B/A\)。</code></pre><p>除此之外，矩阵还有一些特殊的运算，称之为“点”运算，使用较多的包括.*（点乘）和.^（点乘幂）。点运算的特殊之处在于，它不是按照矩阵的运算规律进行计算的，而是对具有相同大小的两矩阵，将对应元素进行乘或乘幂的操作。例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] .* [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span>    <span class="number">10</span>    <span class="number">18</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] .^ [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>    <span class="number">32</span>   <span class="number">729</span></span><br></pre></td></tr></table></figure><h3 id="冒号运算符与矩阵拼接"><a href="#冒号运算符与矩阵拼接" class="headerlink" title="冒号运算符与矩阵拼接"></a>冒号运算符与矩阵拼接</h3><p>在MATLAB中，:（冒号运算符）是非常重要的一个符号，利用冒号可以轻松表示等差数列。例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="number">1</span>:<span class="number">5</span> <span class="comment">% 创建从1到5，公差为1（可省略）的等差数组</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b = <span class="number">1</span>:<span class="number">3</span>:<span class="number">10</span> <span class="comment">% 创建从1到10，公差为3的等差数组</span></span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span>    <span class="number">10</span></span><br></pre></td></tr></table></figure><p>取出矩阵元素时，我们只需要指定选取的行号与列号即可。请注意，MATLAB中所有下标均从1开始而非从0开始，请一定牢记！！！</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="built_in">magic</span>(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">    <span class="number">17</span>    <span class="number">24</span>     <span class="number">1</span>     <span class="number">8</span>    <span class="number">15</span></span><br><span class="line">    <span class="number">23</span>     <span class="number">5</span>     <span class="number">7</span>    <span class="number">14</span>    <span class="number">16</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">6</span>    <span class="number">13</span>    <span class="number">20</span>    <span class="number">22</span></span><br><span class="line">    <span class="number">10</span>    <span class="number">12</span>    <span class="number">19</span>    <span class="number">21</span>     <span class="number">3</span></span><br><span class="line">    <span class="number">11</span>    <span class="number">18</span>    <span class="number">25</span>     <span class="number">2</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a(<span class="number">3</span>,<span class="number">2</span>) <span class="comment">% 选取a的第3行，第2列元素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a(<span class="number">1</span>:<span class="number">2</span>,<span class="number">2</span>:<span class="number">4</span>) <span class="comment">% 选取a的1~2行，2~4列元素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">24</span>     <span class="number">1</span>     <span class="number">8</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">7</span>    <span class="number">14</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a(<span class="number">2</span>,:) <span class="comment">% 选取a的第2行，所有列元素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">23</span>     <span class="number">5</span>     <span class="number">7</span>    <span class="number">14</span>    <span class="number">16</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a(<span class="number">1</span>:<span class="number">2</span>:<span class="number">5</span>,[<span class="number">2</span>,<span class="number">5</span>]) <span class="comment">% 选取a的第[1,3,5]行，第[2,5]列元素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">24</span>    <span class="number">15</span></span><br><span class="line">     <span class="number">6</span>    <span class="number">22</span></span><br><span class="line">    <span class="number">18</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a(<span class="number">3</span>:<span class="keyword">end</span>,<span class="number">4</span>) <span class="comment">% 选取a的第三行到最后一行，第4列元素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">20</span></span><br><span class="line">    <span class="number">21</span></span><br><span class="line">     <span class="number">2</span></span><br></pre></td></tr></table></figure><p>基于此，我们可以对长度吻合的矩阵进行拼接，例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = [<span class="number">1</span>:<span class="number">5</span>, <span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">3</span>); <span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">8</span>)]</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b = [a(<span class="number">1</span>,<span class="number">1</span>:<span class="number">2</span>:<span class="number">7</span>); <span class="number">4</span>:<span class="number">-0.5</span>:<span class="number">2.5</span>]</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">3.0000</span>    <span class="number">5.0000</span>    <span class="number">1.0000</span></span><br><span class="line">    <span class="number">4.0000</span>    <span class="number">3.5000</span>    <span class="number">3.0000</span>    <span class="number">2.5000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除了冒号运算符，还有一种生成等差数列的方式，即使用linspace(a,b,n)函数生成从a到b共n个数值的等差数列。同样的，利用logspace(a,b,n)可以生成从(10^a)到(10^b)共n个数值的等比数列。例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="built_in">pi</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">         <span class="number">0</span>    <span class="number">0.7854</span>    <span class="number">1.5708</span>    <span class="number">2.3562</span>    <span class="number">3.1416</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b = <span class="built_in">logspace</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">2.1544</span>    <span class="number">4.6416</span>   <span class="number">10.0000</span></span><br></pre></td></tr></table></figure><p>注意，无论使用冒号运算符，或是linspace函数，生成的矩阵均为1*n的矩阵，即为行向量。使用转置符号可以将其转置为列向量。</p><h2 id="复合数据类型——字符串"><a href="#复合数据类型——字符串" class="headerlink" title="复合数据类型——字符串"></a>复合数据类型——字符串</h2><p>上面介绍的所有类型均为数字类型的变量。而最常见的非数类型的变量就是字符串了。MATLAB中，使用单引号表示字符串：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">hello</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>字符串是一个特殊的行向量，其每个元素是一个字符。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; b = a(<span class="number">2</span>:<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">ell</span><br></pre></td></tr></table></figure><p>字符串的拼接类似数组的拼接，但是需要注意由于字符串是行向量，只能进行横向拼接，否则将会报错。</p><figure class="highlight plain"><figcaption><span>[a,b]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ans &#x3D;</span><br><span class="line"></span><br><span class="line">helloell</span><br></pre></td></tr></table></figure><p>字符串和数字之间的转换也十分容易，可以利用num2str()和str2num()函数进行：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; [<span class="string">&#x27;1+1=&#x27;</span>, num2str(<span class="number">1</span>+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>+<span class="number">1</span>=<span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">2</span> + str2num(<span class="string">&#x27;3.2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">5.2000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="复合数据类型——结构体（了解）"><a href="#复合数据类型——结构体（了解）" class="headerlink" title="复合数据类型——结构体（了解）"></a>复合数据类型——结构体（了解）</h2><p>结构体是一种特殊的数据类型，是由“变量”和其拥有的“字段”共同组成的，在初学阶段可能见到的比较少，更多的是调用MATLAB内置函数后生成的结构体变量。例如一个学生，他拥有姓名、年龄、期末成绩三个“字段”。利用“.”点运算，我们可以这样定义一个学生：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; student.name = <span class="string">&#x27;Mike&#x27;</span></span><br><span class="line"></span><br><span class="line">student = </span><br><span class="line"></span><br><span class="line">    name: <span class="string">&#x27;Mike&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; student.age = <span class="number">22</span></span><br><span class="line"></span><br><span class="line">student = </span><br><span class="line"></span><br><span class="line">    name: <span class="string">&#x27;Mike&#x27;</span></span><br><span class="line">     age: <span class="number">22</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; student.grade = [<span class="number">83</span>,<span class="number">80</span>,<span class="number">85</span>,<span class="number">90</span>]</span><br><span class="line"></span><br><span class="line">student = </span><br><span class="line"></span><br><span class="line">     name: <span class="string">&#x27;Mike&#x27;</span></span><br><span class="line">      age: <span class="number">22</span></span><br><span class="line">    grade: [<span class="number">83</span> <span class="number">80</span> <span class="number">85</span> <span class="number">90</span>]</span><br></pre></td></tr></table></figure><p>可以看到，随着我们不断向student变量中增加字段，其包含的信息也越来越多。同样的，我们也可以使用struct(filed,value,…)的方式直接生成结构体：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; student = struct(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Mike&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;grade&#x27;</span>,[<span class="number">83</span>,<span class="number">80</span>,<span class="number">85</span>,<span class="number">90</span>])</span><br><span class="line"></span><br><span class="line">student = </span><br><span class="line"></span><br><span class="line">     name: <span class="string">&#x27;Mike&#x27;</span></span><br><span class="line">      age: <span class="number">22</span></span><br><span class="line">    grade: [<span class="number">83</span> <span class="number">80</span> <span class="number">85</span> <span class="number">90</span>]</span><br><span class="line"></span><br><span class="line">&gt;&gt; student.grade</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">83</span>    <span class="number">80</span>    <span class="number">85</span>    <span class="number">90</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果想要了解更多关于结构体的用法，可以查阅MATLAB的帮助文档。</p><h2 id="复合结构类型——元胞矩阵（了解）"><a href="#复合结构类型——元胞矩阵（了解）" class="headerlink" title="复合结构类型——元胞矩阵（了解）"></a>复合结构类型——元胞矩阵（了解）</h2><p>元胞矩阵是矩阵的一种扩展，虽然直到现在我也不知道这个名字是怎么取出来的。在矩阵中，一个元素代表的都是一个数，或者都是一个字符。但是在元胞矩阵中，这种限制被打破，不同位置可以拥有任何类型的元素，包括字符串，数值或矩阵。为了区分元胞矩阵和普通矩阵，我们使用大括号进行定义，在使用元素时，也是用大括号对其进行取出。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = &#123;<span class="string">&#x27;hello&#x27;</span>,<span class="number">500</span>; [<span class="number">30</span>,<span class="number">20</span>,<span class="number">40</span>],[]&#125;</span><br><span class="line"></span><br><span class="line">a = </span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;hello&#x27;</span>         [<span class="number">500</span>]</span><br><span class="line">    [<span class="number">1</span>x3 double]       []</span><br><span class="line"></span><br><span class="line">&gt;&gt; a&#123;<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line">&gt;&gt; a&#123;<span class="number">2</span>,<span class="number">1</span>&#125;(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">40</span></span><br></pre></td></tr></table></figure><p>可能你在尝试的过程中也发现了，利用小括号也能对其元素进行取出。关于这两种方式有何不同，我们将在之后的一篇关于元胞矩阵的讨论中再次提到。同样的，MATLAB的帮助文档永远是你的好帮手。</p><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><p>通过前面的内容，我们已经对MATLAB中的数据类型和一些简单的命令有所了解。这篇文章将主要介绍一下MATLAB中的流程控制语句，包括顺序执行、条件控制和循环控制。相信经过这篇文章的学习，你已经可以写出像模像样的MATLAB程序了。</p><h3 id="顺序执行"><a href="#顺序执行" class="headerlink" title="顺序执行"></a>顺序执行</h3><p>可能你已经注意到了，我们之前的语句都是在命令行窗口中进行编写的。这样虽然可以及时得到反馈，但是如果我们想要同时执行多个语句则是非常困难的。因此我们将利用MATLAB的脚本m文件，使其从一个“大计算器”变成一个“编程工具”。</p><p>顺序执行是程序执行过程中最基本的执行方式，在MATLAB中也不需要对其进行任何的控制，只需要把要执行的命令按顺序写下来就可以了。例如我们需要对下面的方程组进行求解：</p><p>我们可以在m文件中编写以下内容。需要注意的是，如果语句不以分号结尾，则会将输出发送到命令行窗口；而如果是以分号结尾，程序虽然运行了，但不会产生任何输出：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>;<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>]; <span class="comment">% 语句以分号结尾时，结果将不输出到命令行窗口</span></span><br><span class="line">b = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]&#x27;;</span><br><span class="line">X = A \ b <span class="comment">% 语句不以分号结尾时，结果将直接输出到命令行窗口，否则命令行将没有任何输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% X =</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%    -0.1364</span></span><br><span class="line"><span class="comment">%     0.0682</span></span><br><span class="line"><span class="comment">%     0.2273</span></span><br></pre></td></tr></table></figure><h3 id="条件执行"><a href="#条件执行" class="headerlink" title="条件执行"></a>条件执行</h3><p>顺序执行显然不能满足我们的需要，如果我们要操作的语句是根据一定的条件进行选择，那么我们就需要用到条件语句。</p><h4 id="if条件语句"><a href="#if条件语句" class="headerlink" title="if条件语句"></a>if条件语句</h4><p>最为常见的条件语句即为if条件语句，其使用方法包括以下两种：</p><figure class="highlight plain"><figcaption><span>如果condition条件为TRUE(1)，则执行语句statement，否则不执行</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if condition</span><br><span class="line">    statement</span><br><span class="line">end</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 如果condition条件TRUE(1)，则执行语句statement1，否则执行语句statement2</span></span><br><span class="line"><span class="keyword">if</span> condition</span><br><span class="line">    statement1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    statement2</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>为了方便对控制条件进行编写，这里介绍常见的关系运算符和逻辑运算符。常用的关系运算符包括以下几个：</p><pre><code>==（等于），~=（不等于），&gt;（大于），&lt;（小于），&gt;=（大于等于），&lt;=（小于等于）</code></pre><p>和其他编程语言类似，注意逻辑判断中的==（等于）和赋值语句中的=（赋值）的区别。</p><p>常用的逻辑运算符包括以下几个：</p><pre><code>&amp;&amp;（逻辑与），||（逻辑或），~（逻辑非）。</code></pre><p>注意在MATLAB中，FALSE的值默认为0，TRUE的值默认为1；在进行逻辑运算时，所有的0值被当做FALSE处理，非0值被当做TRUE处理。举例说明：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">3</span>&gt;<span class="number">2</span>) &amp;&amp; (<span class="number">2</span>~=<span class="number">3</span>); <span class="comment">% 结果为1（TRUE）</span></span><br><span class="line">~(<span class="number">4</span>&lt;=<span class="number">4</span>); <span class="comment">% 结果为0（FALSE）</span></span><br><span class="line">(<span class="number">3</span>&gt;<span class="number">4</span>) || <span class="number">5</span>; <span class="comment">% 结果为1（TRUE）</span></span><br><span class="line">~<span class="number">0</span>; <span class="comment">% 结果为1（TRUE）</span></span><br></pre></td></tr></table></figure><ul><li>拓展<br>  MATLAB提供位运算符，分别是&amp;（按位与），|（按位或），~（按位非）<br>  MATLAB提供的逻辑运算符支持短路操作<br>  MATLAB中不提供++、+=等类似的赋值操作符</li></ul><p>举一个栗子，如果一斤栗子10元，买5斤及以上总价打八折，计算价格的程序可以这样编写：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">unitPrice = <span class="number">10</span>; <span class="comment">% 单价10元/斤</span></span><br><span class="line">weight = <span class="number">8</span>; <span class="comment">% 输入购买的重量（斤）</span></span><br><span class="line"><span class="keyword">if</span> weight &gt;= <span class="number">5</span></span><br><span class="line">    price = unitPrice * weight * <span class="number">0.8</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    price = unitPrice * weight</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% price =</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">%     64</span></span><br></pre></td></tr></table></figure><h4 id="if嵌套语句"><a href="#if嵌套语句" class="headerlink" title="if嵌套语句"></a>if嵌套语句</h4><p>if语句是可以进行层层嵌套的，例如下面是两种常见的嵌套模式：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 若condition1满足：同时满足condition2时，执行statement21；不满足时执行statement22。若condition1不满足，则执行statement1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line">    <span class="keyword">if</span> condition2</span><br><span class="line">        statement21</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        statement22</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    statement1</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 若condition1满足，则执行statement1；否则，若condition2满足，则执行statement21，不满足时执行statement22</span></span><br><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line">    statement1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> condition2</span><br><span class="line">        statement21</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        statement22</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>通过if语句的嵌套形式，我们可以对运行流程进行更好的控制。再举一个栗子，刚刚的栗子如果买10斤及以上则总价打7折，则计算程序如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">unitPrice = <span class="number">10</span>; <span class="comment">% 单价10元/斤</span></span><br><span class="line">weight = <span class="number">12</span>; <span class="comment">% 输入购买的重量（斤）</span></span><br><span class="line"><span class="keyword">if</span> weight &gt;= <span class="number">5</span></span><br><span class="line">    <span class="keyword">if</span> weight &gt;= <span class="number">10</span></span><br><span class="line">        price = unitPrice * weight * <span class="number">0.7</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        price = unitPrice * weight * <span class="number">0.8</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    price = unitPrice * weight</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% price =</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">%     84</span></span><br></pre></td></tr></table></figure><h4 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h4><p>当我们要判断的分支非常多时，如果使用嵌套if语句写法，将会显得十分繁琐。这时我们可以使用switch语句来使得程序可读性更强。</p><p>switch语句的用法是这样的。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> variable</span><br><span class="line">    <span class="keyword">case</span> &#123;value11,value12...&#125;</span><br><span class="line">        statement1</span><br><span class="line">    <span class="keyword">case</span> value2</span><br><span class="line">        statement2</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> valuen</span><br><span class="line">        statementn</span><br><span class="line">    <span class="keyword">otherwise</span></span><br><span class="line">        statement</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>当variable的值可以匹配上其中的任何value时，会直接跳转执行其对应的语句；如果没有匹配上任何值，则会直接跳转到otherwise语句进行执行。需要注意的是，otherwise语句并不是必须的。</p><p>不同于其他语言的switch语句，如果多个值对应同一个执行语句，可以利用大括号将值写在一起。这也意味着MATLAB不需要在每一个分支后使用break进行显式中断。</p><p>我们可以编写一个根据年份和月份判断该月有几天的程序：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">year = <span class="number">2012</span>;</span><br><span class="line">month = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">switch</span> month</span><br><span class="line">    <span class="keyword">case</span> &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">12</span>&#125; <span class="comment">% 一三五七八十腊，三十一天永不差</span></span><br><span class="line">        days = <span class="number">31</span></span><br><span class="line">    <span class="keyword">case</span> &#123;<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>&#125; <span class="comment">% 四六九冬三十日</span></span><br><span class="line">        days = <span class="number">30</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span> <span class="comment">% 二月需要判断是否为闰年</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">mod</span>(year,<span class="number">4</span>) == <span class="number">0</span> &amp;&amp; <span class="built_in">mod</span>(year,<span class="number">100</span>) ~= <span class="number">0</span>) || (<span class="built_in">mod</span>(year,<span class="number">400</span>) == <span class="number">0</span>)</span><br><span class="line">            days = <span class="number">29</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            days = <span class="number">28</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% days =</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">%     29</span></span><br></pre></td></tr></table></figure><p>在这个例子中，我们在switch语句内部再次使用了if语句，用于对闰年的判断。其中mod(a,b)函数表示a对b的模。</p><h3 id="循环执行"><a href="#循环执行" class="headerlink" title="循环执行"></a>循环执行</h3><p>流程控制中的循环语句非常重要，它避免了我们写几乎重复的代码，而通过程序的循环与退出对其进行控制。常见的循环执行语句有while循环和for循环。</p><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><p>while循环是最容易理解的一种循环，其用法如下所示：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line">    statement</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>当condition条件为真时，循环执行statement语句，然后再次判断condition条件，直至condition条件不再满足时退出循环。如果在进入while循环前，condition条件不满足，则循环直接不会执行。</p><p>我们以经典的“水滴数”计算为例，练习while循环。水滴数是这样计算的：对于任意一个正整数，如果它是奇数，则乘3再加1；如果它是偶数，就除以2。循环往复，最后终将变成1（该结果尚未被证明，但至今未发现反例）。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">50</span>; <span class="comment">% 以50为例，显示水滴数的变化过程。由于num的计算过程没有加分号，会输出每次运算的结果。</span></span><br><span class="line"><span class="keyword">while</span> num ~= <span class="number">1</span> <span class="comment">% 还没有减小到1时，不断循环</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">mod</span>(num,<span class="number">2</span>) == <span class="number">0</span> <span class="comment">% 如果是偶数</span></span><br><span class="line">        num = num / <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span> <span class="comment">% 如果是奇数</span></span><br><span class="line">        num = num * <span class="number">3</span> + <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 命令行输出结果：（略）</span></span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p>回顾一下高斯的优秀事迹：如果要计算1到100的和，如何写这个循环呢？我们当然可以采用如下的while循环的方式进行编写：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span>;    <span class="comment">% 保存求和结果</span></span><br><span class="line"><span class="built_in">i</span> = <span class="number">1</span>;        <span class="comment">% 当前数</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">i</span> &lt;= <span class="number">100</span></span><br><span class="line">    sum = sum + <span class="built_in">i</span>;</span><br><span class="line">    <span class="built_in">i</span> = <span class="built_in">i</span> + <span class="number">1</span>; <span class="comment">% 不要忘记变到下一个数</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum        <span class="comment">% 不加分号，输出最后结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% sum =</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%         5050</span></span><br></pre></td></tr></table></figure><p>但是除了while循环外，还有一种更加方便的计数循环：for循环可以快速解决这个问题。for循环的格式如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> variable = value</span><br><span class="line">    statement</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中value一般是利用冒号运算符得到的等差数列。我们利用for循环改写一下求和程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sum &#x3D; 0;        % 保存求和结果</span><br><span class="line">for i &#x3D; 1:100</span><br><span class="line">    sum &#x3D; sum + i;    % 累加</span><br><span class="line">end</span><br><span class="line">sum             % 输出结果</span><br><span class="line"></span><br><span class="line">% 以下是命令行输出结果</span><br><span class="line">%</span><br><span class="line">% sum &#x3D;</span><br><span class="line">%</span><br><span class="line">%         5050</span><br></pre></td></tr></table></figure><p>可以看到使用for循环后整个程序变得更加简洁易懂。同样的，我们还可以求100以内所有奇数的平方和：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span>;            <span class="comment">% 保存求和结果</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">2</span>:<span class="number">100</span>            <span class="comment">% 1~100以内所有奇数</span></span><br><span class="line">    sum = sum + <span class="built_in">i</span>^<span class="number">2</span>;    <span class="comment">% 累加</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum                 <span class="comment">% 输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% sum =</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%       166650</span></span><br></pre></td></tr></table></figure><p>我们可以看到，使用for循环避免了编写复杂的循环控制条件，使得程序编写者可以直接确定循环的次数和循环变量的值。而当循环次数未知时，则仍需要使用while循环对其进行控制。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>在我们已经可以编写简单的MATLAB脚本之后，我们需要学习一个更加强大的编程工具：函数。这篇文章将主要介绍MATLAB中函数的使用。</p><h3 id="函数的思想"><a href="#函数的思想" class="headerlink" title="函数的思想"></a>函数的思想</h3><p>之所以说函数是一种强大的工具，是因为使用函数可以让我们的代码变得更加简洁，同时也给我们模块化带来了很大的方便。</p><p>以我们在生活中做家务为例，正常情况下，我们需要具体写出做家务的每一步，例如：</p><figure class="highlight plain"><figcaption><span>擦桌子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2. 洗碗</span><br><span class="line">3. 扫地</span><br><span class="line">4. xxxx</span><br><span class="line">5. 擦桌子</span><br><span class="line">6. 洗碗</span><br><span class="line">7. 扫地</span><br><span class="line">8. ...</span><br></pre></td></tr></table></figure><p>如果我们将其组织成一个函数，那我们每次只需要调用做家务这个函数，就可以实现这样一套流程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">定义：做家务 &#x3D; </span><br><span class="line">    1. 擦桌子</span><br><span class="line">    2. 洗碗</span><br><span class="line">    3. 扫地</span><br><span class="line"></span><br><span class="line">1. 做家务</span><br><span class="line">2. xxxx</span><br><span class="line">3. 做家务</span><br><span class="line">4. ...</span><br></pre></td></tr></table></figure><p>同样，如果我们需要在做家务的过程中添加一项“倒垃圾”，我们只需要在函数端进行修改，而不用对调用部分的代码做任何改动，这样模块化的方法将使得我们代码的可维护性大大增强。</p><h3 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h3><p>了解了函数的作用之后，我们就需要了解如何对函数进行定义。MATLAB中的函数定义包括function保留字、输出变量、函数名、输入参数、函数体几部分：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% function为保留字，out1~outN为函数输出，function_name为函数名，para1~paraN为输入参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[out1, out2, outN]</span> = <span class="title">function_name</span><span class="params">(para1, para2, paraN)</span></span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>定义函数时，一般通过建立单独的函数m文件进行编写。例如，我们可以定义一个“给定两个数，返回其和”的函数add。因此我们可以首先选择新建 -&gt; 函数选项，新建一个与函数名同名的函数m文件（事实上，函数m文件和脚本m文件没有实质性的不同，但是新建函数m文件时将会自动生成函数结构）。这时我们可以看到MATLAB已经自动为我们生成好了函数的结构。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[ output_args ]</span> = <span class="title">Untitled1</span><span class="params">( input_args )</span></span></span><br><span class="line"><span class="comment">%UNTITLED1 此处显示有关此函数的摘要</span></span><br><span class="line"><span class="comment">%   此处显示详细说明</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>我们将其更改为下面内容：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span> = <span class="title">add</span><span class="params">(num1, num2)</span></span></span><br><span class="line"><span class="comment">%add 给定两个数，返回其和</span></span><br><span class="line"><span class="comment">%   给定输入的两个数num1和num2，计算得到两数之和并返回（虽然看起来很啰嗦，但是把输入输出讲清楚非常重要）</span></span><br><span class="line">    sum = num1 + num2;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>通过这个例子我们可以看到，与一般的编程语言不同，MATLAB没有显式的return语句返回计算结果，而是通过在语句中给输出变量赋值的方法实现返回值。类似的，如果我们的函数具有多个返回值，我们即需要对所有的输出变量进行赋值。</p><p>MATLAB也支持没有任何输出的函数，此时函数仅需要包含如下部分：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 没有返回值的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">function_name</span><span class="params">(para1, para2, paraN)</span></span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>一般而言，这种没有返回值的函数使用较少，主要是为了实现一些附加作用而使用的。</p><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><p>定义函数是为了方便我们进行调用。MATLAB中调用已定义的函数非常简单，实际上我们之前已经调用过系统内置函数，例如zeros()、ones()等。调用函数的方法如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">% 调用函数</span><br><span class="line">[out1, out2, outN] &#x3D; function_name(para1, para2, paraN)</span><br></pre></td></tr></table></figure><p>与上述我们定义的add函数相匹配的函数调用为</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br></pre></td></tr></table></figure><p>这与我们定义函数的形式非常一致。需要注意的是，当输出变量的个数小于函数实际返回的变量个数时，MATLAB将默认从前到后进行返回，并不会引起报错。下面的例子很好的说明了这一点。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件calculate.m %%%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 计算两个数的四则运算结果</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[res1, res2, res3, res4]</span> = <span class="title">calculate</span><span class="params">(num1, num2)</span></span></span><br><span class="line">    res1 = num1 + num2;</span><br><span class="line">    res2 = num1 - num2;</span><br><span class="line">    res3 = num1 * num2;</span><br><span class="line">    res4 = num1 / num2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%% 文件Script5_1.m %%%</span></span><br><span class="line"></span><br><span class="line">sum = calculate(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">[sum, diff, product, quot] = calculate(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是运行Script5_1.m的命令行输出结果</span></span><br><span class="line"><span class="comment">% 注：此为第1行运行结果</span></span><br><span class="line">sum =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line"><span class="comment">% 注：此为第2行运行结果</span></span><br><span class="line">sum =</span><br><span class="line">     <span class="number">3</span></span><br><span class="line">diff =</span><br><span class="line">    <span class="number">-1</span></span><br><span class="line">product =</span><br><span class="line">     <span class="number">2</span></span><br><span class="line">quot =</span><br><span class="line">    <span class="number">0.5000</span></span><br></pre></td></tr></table></figure><p>之所以强调是Script5_1.m的运行结果，是因为带有输入参数的函数是无法直接被运行的。但是没有输入参数的函数可以直接被运行，例如下列函数在屏幕上打印出Hello World字样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">% 在屏幕上打印出Hello World</span><br><span class="line">function hello()</span><br><span class="line">    disp(&#39;Hello World!&#39;);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">% 以下是命令行输出结果</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h3 id="函数变量"><a href="#函数变量" class="headerlink" title="函数变量"></a>函数变量</h3><h4 id="函数作为参数"><a href="#函数作为参数" class="headerlink" title="函数作为参数"></a>函数作为参数</h4><p>这一部分可能会使得编程基础稍差的同学感到迷惑，不过耐心读几遍还是可以读懂的。</p><p>MATLAB一项令人欣喜的功能是可以将函数作为变量看待，其方式为使用’@’字符。例如我们编写了之前的add.m文件后，使用以下命令：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 将add函数赋值给var_fun函数</span></span><br><span class="line">var_fun = @add;</span><br><span class="line"><span class="comment">% 使用var_fun函数</span></span><br><span class="line">var_fun(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">8</span></span><br></pre></td></tr></table></figure><p>我们发现，我们定义的var_fun居然实现了和add一样的功能！这看起来很不可思议，但实际上这正是函数式编程的基本概念。甚至，我们还可以将函数作为函数参数进行传递。例如我们定义了一个函数operate，这个函数接受一个操作两个数的函数（例如add）和两个数字，给出计算结果。我们可以这样定义：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件add.m %%%</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span> = <span class="title">add</span><span class="params">(num1, num2)</span></span></span><br><span class="line">    sum = num1 + num2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%% 文件operate.m %%%</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">result</span> = <span class="title">operate</span><span class="params">(my_fun, num1, num2)</span></span></span><br><span class="line">    result = my_fun(num1, num2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%% 文件Script5_2.m %%%</span></span><br><span class="line"></span><br><span class="line">operate(@add, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span></span><br></pre></td></tr></table></figure><p>我们惊讶地发现，我们将add函数作为参数成功传递给了operate，并给出了正确的计算结果。请认真思考上述代码的执行流程。</p><h4 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h4><p>提起函数式编程，就不得不提到大名鼎鼎的Lambda函数。在MATLAB中，同样对Lambda函数提供了支持。为方便不了解函数式编程的同学，下面将统一称之为“匿名函数”。</p><p>首先回想我们使用函数的流程。我们需要确定函数的输入与输出、函数名，新建函数m文件，编写函数体，然后在主程序中对函数进行调用。但很多时候，我们编写的函数可能往往只有一行或更少，这种情况下单独编写一个函数m文件就显得非常麻烦。甚至有些时候，这个函数我们只需要用一次，能不能不取名呢？匿名函数（Lambda函数）就很好地解决了这个问题。</p><p>匿名函数的声明如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@(para1, para2, paraN)expression</span><br></pre></td></tr></table></figure><p>匿名函数的形式十分简洁，将整个函数的定义缩减到一行内。例如之前的add函数，我们可以这样进行改写</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 定义add函数的Lambda形式</span></span><br><span class="line">lambda_add = @(a, b)a + b</span><br><span class="line"><span class="comment">% 调用函数</span></span><br><span class="line">lambda_add(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">7</span></span><br></pre></td></tr></table></figure><p>可以看到Lambda函数保持了和原函数一样的功能。我们将之前的Script5_2.m文件进行Lambda函数改写：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件operate.m %%%</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">result</span> = <span class="title">operate</span><span class="params">(my_fun, num1, num2)</span></span></span><br><span class="line">    result = my_fun(num1, num2);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%% 文件Script5_2.m %%%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 利用operate函数和匿名函数进行四则运算</span></span><br><span class="line">operate(@(a,b)a + b, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">operate(@(a,b)a - b, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">operate(@(a,b)a * b, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">operate(@(a,b)a / b, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">5</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">-1</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">6</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">0.6667</span></span><br></pre></td></tr></table></figure><p>看到这里，相信大多数人一定一头雾水，不禁想到：这有什么卵用？事实上这还真的用卵用，后面的章节中我们可以看到很多匿名函数的使用，因此希望这一节的内容你能够尽量理解~</p><h3 id="形参vs实参"><a href="#形参vs实参" class="headerlink" title="形参vs实参"></a>形参vs实参</h3><p>学过其他编程语言的同学在对待函数时，往往需要急切地弄清楚什么时候函数传递形参，什么时候传递实参呢？</p><p>先上结论：MATLAB函数永远传递形参</p><p>没有理解的同学可以通过下面的例子感受一下。</p><p>假设我现在有一个1*5的矩阵，我现在想让这个矩阵的第一个元素加1，那么有什么办法呢？最直观的想法是这样的：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件add_one.m %%%</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_one</span><span class="params">(mat)</span></span></span><br><span class="line">    mat(<span class="number">1</span>, <span class="number">1</span>) = mat(<span class="number">1</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>表面上看来，这个函数对于任何传递进来的矩阵mat，都将第一个元素进行了加1操作。我们对其进行一下测试：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件Script5_3.m %%%</span></span><br><span class="line">mat = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">add_one(mat);</span><br><span class="line">mat</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"></span><br><span class="line">mat =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure><p>我们惊讶地发现，mat的值并没有发生任何变化！事实上，无论我们在函数内对传入参数进行什么操作，都不会影响到参数在主程序中的原本值，这是因为MATLAB使用的是“形参传递”。在这个过程中，实际上在MATLAB内部发生了如下的事情：</p><pre><code>1 主程序调用函数，此时需要传递参数mat=[1,2,3,4,5]2 主程序将所有需要传递的参数的值复制了一份，生成了参数副本mat_copy=[1,2,3,4,5]3 主程序将计算中的所有变量暂存，进入函数执行模式4 函数利用mat_copy进行计算，当函数试图修改mat的值时，实际在修改mat_copy的值，使得mat_copy=[2,2,3,4,5]5 函数计算完成，告知主程序计算完成，并将计算结果返回主程序6 主程序将暂存变量恢复，mat的值仍为[1,2,3,4,5]</code></pre><p>因此，无论我们怎么做，主程序中的值都无法在函数中进行修改。那我们怎样实现上述需求呢？一种方式是可以将mat_copy的值直接返回给主程序，主程序再将mat的值替换为函数返回值。如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件add_one.m %%%</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mat</span> = <span class="title">add_one</span><span class="params">(mat)</span></span></span><br><span class="line">    mat(<span class="number">1</span>, <span class="number">1</span>) = mat(<span class="number">1</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%% 文件Script5_3.m %%%</span></span><br><span class="line">mat = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">mat = add_one(mat)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"></span><br><span class="line">mat =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure><p>这样做或许显得不美观，但也不失为一种好方法。</p><p>还有一种方法则是利用全局变量的方法。</p><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>在介绍全局变量之前，我们需要先了解一下变量空间。变量空间是指MATLAB计算过程中当前状态可以使用的所有变量。例如在主程序中可以访问在主程序中定义的变量，但是在函数运行过程中就无法使用主程序定义的变量，因此我们说它们属于不同的变量空间。</p><p>一般而言，MATLAB的变量空间可以有多个，其中所有的脚本m文件共享一个变量空间，例如先执行Script2_1.m，再执行Script2_2.m时仍然可以访问在之前的脚本中已经定义的函数；而不同的函数m文件属于不同的变量空间，且不同于脚本m文件的变量空间，因此任何函数都不能调用在其他函数中或者主程序中定义的变量。<br><img src="/img/matlab/matlab005_variable_spaces.jpg" alt="variable_spaces"></p><p>之所以传递到函数中的参数不能修改，是因为主程序中传进去的参数是属于主程序的变量空间，当函数开始执行时，主程序的变量就被暂存起来无法改动了。那我们自然想到，能不能利用什么方法，使得一个变量不只是属于主程序呢？答案就是全局变量。全局变量不属于任何一个程序模块，在任何时候都可以被修改。</p><p>我们使用如下的方式定义或使用一个全局变量：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">global</span> global_var;</span><br><span class="line">statements</span><br></pre></td></tr></table></figure><p>使用任何全局变量前，都要先进行声明，以告知编译器：这是一个全局变量，请不要在局部变量里面寻找。使用全局变量可以对上述的add_one方法进行改写：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%% 文件add_one.m %%%</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_one</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">global</span> mat;</span><br><span class="line">    mat(<span class="number">1</span>, <span class="number">1</span>) = mat(<span class="number">1</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%% 文件Script5_3.m %%%</span></span><br><span class="line"><span class="keyword">global</span> mat;</span><br><span class="line">mat = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">add_one();</span><br><span class="line">mat</span><br><span class="line"></span><br><span class="line"><span class="comment">% 以下是命令行输出结果</span></span><br><span class="line"></span><br><span class="line">mat =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br></pre></td></tr></table></figure><p>使用全局变量非常方便，但是需要注意的是，使用全局变量与函数化、模块化的概念完全相悖，大量使用全局变量将使得程序的逻辑控制变得复杂，可读性变差。因此建议大家尽量不要使用全局变量，以免生出“一个月前写的程序自己都看不懂”的悲剧。</p><h2 id="matlab绘图"><a href="#matlab绘图" class="headerlink" title="matlab绘图"></a>matlab绘图</h2><p>为了将计算结果进行可视化呈现，MATLAB提供了诸多绘图功能，可以满足不同可视化的需求。这篇内容将主要介绍使用MATLAB进行二维绘图的入门操作。</p><h3 id="plot函数"><a href="#plot函数" class="headerlink" title="plot函数"></a>plot函数</h3><p>提到MATLAB中的二维绘图函数，那一定要提到plot函数。虽然是最基础的二维绘图函数，但是其功能却十分的强大。在开始绘图的学习之前，请先将下面这句话默念3遍：</p><p>MATLAB主要用来处理【数值运算】！</p><p>这句话虽然不完全正确，但在初学阶段请牢记。如同之前提到的，MATLAB的主要运算对象是【矩阵】，因此MATLAB的绘制实际上是根据你提供的数据进行绘图，换句话说你可以当作MATLAB是个不认识函数的“傻子”。举个栗子，你让MATLAB绘制所谓y=sin(x)的图像，它做不到；但是根据产生的x、y值序列，MATLAB可以轻松进行绘图。</p><h4 id="plot函数的基本使用方法"><a href="#plot函数的基本使用方法" class="headerlink" title="plot函数的基本使用方法"></a>plot函数的基本使用方法</h4><p>plot函数可以根据提供的数据绘制对应的图像，其基本用法如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 以1:n为X坐标，绘制Y值的折线图</span></span><br><span class="line"><span class="built_in">plot</span>(Y)</span><br><span class="line"><span class="comment">% 根据提供的X和Y数据绘制折线图</span></span><br><span class="line"><span class="built_in">plot</span>(X, Y)</span><br><span class="line"><span class="comment">% 绘制折线图并指定线型、颜色等特征</span></span><br><span class="line"><span class="built_in">plot</span>(X, Y, LineSpec)</span><br><span class="line"><span class="comment">% 在同一幅图中绘制多组图线</span></span><br><span class="line"><span class="built_in">plot</span>(X1, Y1, LineSpec1, Xn, Yn, LineSpecn)</span><br></pre></td></tr></table></figure><p>例如我们绘制函数y=sin(x)在区间[0,5]上的图像，可以使用以下的代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 产生x值数据，这里每隔0.1取一个点。</span></span><br><span class="line">x = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">5</span>;</span><br><span class="line"><span class="comment">% 根据函数关系，生成对应的y值数据；MATLAB提供的sin函数支持对向量的处理。</span></span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line"><span class="comment">% 绘图，选择曲线为红色</span></span><br><span class="line"><span class="built_in">plot</span>(x, y, <span class="string">&#x27;r&#x27;</span>);</span><br></pre></td></tr></table></figure><p>绘图结果如图所示：<br><img src="/img/matlab/matlab006_plot1.png" alt="plot1"></p><p>同时绘制y=x^2和y=0.5x^3两个图像：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 产生x值数据，这里每隔0.1取一个点。</span></span><br><span class="line">x = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">5</span>;</span><br><span class="line"><span class="comment">% 根据函数关系，生成对应的y值数据。</span></span><br><span class="line">y1 = x.^<span class="number">2</span>;</span><br><span class="line">y2 = <span class="number">0.5</span> * x.^<span class="number">3</span>;</span><br><span class="line"><span class="comment">% 绘图</span></span><br><span class="line"><span class="built_in">plot</span>(x, y1, <span class="string">&#x27;r^-&#x27;</span>, x, y2, <span class="string">&#x27;ko--&#x27;</span>);</span><br></pre></td></tr></table></figure><p>绘图结果：<br><img src="/img/matlab/matlab007_plot2.png" alt="plot2"></p><p>常见的颜色、线型、标记点属性如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">颜色     符号</span><br><span class="line">红色     ‘r’</span><br><span class="line">粉红     ‘m’</span><br><span class="line">绿色     ‘g’</span><br><span class="line">青色     ‘c’</span><br><span class="line">蓝色     ‘b’</span><br><span class="line">白色     ‘w’</span><br><span class="line">黄色     ‘y’</span><br><span class="line">黑色     ‘k’</span><br><span class="line">线型     符号</span><br><span class="line">实线     ’-‘</span><br><span class="line">虚线     ’–’</span><br><span class="line">点线     ’:’</span><br><span class="line">点划线     ’-.’</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">标记点类型     符号</span><br><span class="line">上三角     ’^’</span><br><span class="line">下三角     ‘v’</span><br><span class="line">左三角     ’&lt;’</span><br><span class="line">右三角     ’&gt;’</span><br><span class="line">星号     ‘*’</span><br><span class="line">加号     ’+’</span><br><span class="line">叉号     ‘x’</span><br><span class="line">实心圆     ’.’</span><br><span class="line">空心圆     ‘o’</span><br><span class="line">正方形     ’s’</span><br><span class="line">五角星     ‘p’</span><br><span class="line">六角星     ‘h’</span><br><span class="line">菱形     ‘d’</span><br></pre></td></tr></table></figure><p>这些属性可以仅指定一种，也可以被同时指定，指定时无需区分顺序。需要注意的是如果指定了标记点类型的话，必须要进一步指定线型，否则绘图时只会出现标记点而没有线。</p><h4 id="plot函数的额外属性"><a href="#plot函数的额外属性" class="headerlink" title="plot函数的额外属性"></a>plot函数的额外属性</h4><p>使用plot函数除了可以对颜色、线型、标记点类型进行修改外，还可以通过以下方式设定通用属性值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(X, Y, LineSpec, Name, Value)</span><br></pre></td></tr></table></figure><p>常见的属性值包括</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">属性名     说明</span><br><span class="line">‘LineWidth’     线宽（默认为0.5）</span><br><span class="line">‘MarkerSize’     标记点大小（默认为6.0）</span><br><span class="line">‘MarkerEdgeColor’     标记点轮廓颜色（与线颜色写法相同）</span><br><span class="line">‘MarkerFaceColor’     标记点填充颜色（与线颜色写法相同）</span><br></pre></td></tr></table></figure><p>例如下面代码设置了多种参数：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = -<span class="built_in">pi</span>:<span class="built_in">pi</span>/<span class="number">10</span>:<span class="built_in">pi</span>;</span><br><span class="line">y = <span class="built_in">tan</span>(<span class="built_in">sin</span>(x)) - <span class="built_in">sin</span>(<span class="built_in">tan</span>(x));</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;--gs&#x27;</span>,...</span><br><span class="line">    <span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,...</span><br><span class="line">    <span class="string">&#x27;MarkerSize&#x27;</span>,<span class="number">10</span>,...</span><br><span class="line">    <span class="string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,...</span><br><span class="line">    <span class="string">&#x27;MarkerFaceColor&#x27;</span>,[<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>])</span><br></pre></td></tr></table></figure><p>绘制出的图像如下所示：<br><img src="/img/matlab/matlab008_plot3.png" alt="plot3"></p><h4 id="添加-设置图像其他部分"><a href="#添加-设置图像其他部分" class="headerlink" title="添加/设置图像其他部分"></a>添加/设置图像其他部分</h4><p>一张完整的图表应当包括标题、轴坐标等元素。下面展示了一些常用的添加/设置图表元素的方法。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 设置图表标题</span></span><br><span class="line">title(<span class="string">&#x27;Sample Title&#x27;</span>);</span><br><span class="line"><span class="comment">% 设置x坐标轴名称</span></span><br><span class="line">xlabel(<span class="string">&#x27;X Label Title&#x27;</span>);</span><br><span class="line"><span class="comment">% 设置y坐标轴名称</span></span><br><span class="line">ylabel(<span class="string">&#x27;Y Label Title&#x27;</span>);</span><br><span class="line"><span class="comment">% 设置图例项</span></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;Legend1&#x27;</span>,<span class="string">&#x27;Legend2&#x27;</span>,<span class="string">&#x27;LegendN&#x27;</span>);</span><br><span class="line"><span class="comment">% 设置X、Y轴坐标范围</span></span><br><span class="line">xlim([XMIN, XMAX]);</span><br><span class="line">ylim([YMIN, YMAX]);</span><br><span class="line"><span class="comment">% 或者使用以下方式设置坐标范围</span></span><br><span class="line">axis([XMIN, XMAX, YMIN, YMAX]);</span><br><span class="line"><span class="comment">% 开启网格</span></span><br><span class="line">grid on</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用代码对图像进行调整，可以使得每次生成的图像具有相同的属性。但是还有一种更加交互化（福利化）的方式，那就是在图像界面进行直接设置。在生成的图像中选择“编辑”-&gt;“图形属性”，即可打开对应的交互化设置界面。点击图中的坐标轴、图线还可以对这些元素进行对应的设置。<br><img src="/img/matlab/matlab009_plot4.png" alt="plot4"></p><h3 id="新建图像和添加图像"><a href="#新建图像和添加图像" class="headerlink" title="新建图像和添加图像"></a>新建图像和添加图像</h3><p>当你想要绘制多张图像时，你可能会发现多次调用plot方法会使得后一次绘制的结果覆盖已有的图像。为了生成新的图像，需要使用以下命令生成一张空白的图像。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">figure</span>;</span><br></pre></td></tr></table></figure><p>事实上，在你第一次调用plot()函数时，你可以认为MATLAB已经自动调用了figure方法，生成新的空白图像用于绘图。但之后若没有再次调用figure方法，则每次使用plot()时将覆盖已有的图像。</p><p>例如使用以下代码生成互为反函数的y=ln(x)和y=e^x的两幅图像：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">0.1</span>:<span class="number">0.1</span>:<span class="number">5</span>;</span><br><span class="line">y = <span class="built_in">log</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>;     <span class="comment">% 第一次绘制时，figure命令可省略</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制函数y=ln(x)的图像</span></span><br><span class="line"><span class="built_in">plot</span>(x, y);</span><br><span class="line">title(<span class="string">&#x27;函数y=ln(x)&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制函数y=e^x的图像</span></span><br><span class="line"><span class="built_in">plot</span>(y, x);</span><br><span class="line">title(<span class="string">&#x27;函数y=e^x&#x27;</span>);</span><br></pre></td></tr></table></figure><p>Matlab会生成两幅图像：</p><p><img src="/img/matlab/matlab010_plot5.png" alt="plot5"></p><p><img src="/img/matlab/matlab011_plot6.png" alt="plot6"></p><p>有时我们可能并不想将结果绘制在多个图像上，而是直接绘制在同一个图像上。但是多次使用plot()函数又会使得之前的图像被覆盖，这时就需要使用hold on命令来保持当前图像。</p><p>hold on命令的使用方法如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>();</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>();</span><br></pre></td></tr></table></figure><p>需要注意的是，使用hold on命令之后，两次的plot将完全不相关，等同于在一次plot()函数中同时绘制多组数据。因此使用对于plot()函数出现的多条图线，将不会自动生成直线连接它们。</p><p>使用hold on方法可以使我们绘制图像时不拘泥于将绘图数据全部计算完成后画出，而是使用“更新”的方法进行绘图。例如绘制幂函数y=x^a在不同a值时的函数图像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">figure;        % 第一次绘制时，figure命令可省略</span><br><span class="line">for a &#x3D; -2:2</span><br><span class="line">    x &#x3D; -2:0.1:2;</span><br><span class="line">    y &#x3D; x .^ a;</span><br><span class="line">    plot(x, y, &#39;linewidth&#39;, 1);</span><br><span class="line">    hold on;</span><br><span class="line">end</span><br><span class="line">grid on;</span><br><span class="line">axis([-2,2,-5,5]);</span><br><span class="line">title(&#39;y&#x3D;x^a在不同a值下的图像&#39;);</span><br><span class="line">legend(&#39;a&#x3D;-2&#39;, &#39;a&#x3D;-1&#39;, &#39;a&#x3D;0&#39;, &#39;a&#x3D;1&#39;, &#39;a&#x3D;2&#39;);</span><br></pre></td></tr></table></figure><p>绘制在同一幅图中的效果：<br><img src="/img/matlab/matlab012_plot7.png" alt="plot7"></p><p>利用hold on还可以作出类似“动态变化”的效果:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% “水滴数”动态变化图</span></span><br><span class="line"><span class="comment">% 设置初始值</span></span><br><span class="line">num = <span class="number">50</span>;</span><br><span class="line"><span class="comment">% 设置刷新时间</span></span><br><span class="line">refresh = <span class="number">0.5</span>;</span><br><span class="line"><span class="comment">% 记录迭代次数</span></span><br><span class="line">iter = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 进行第一次绘图，这里我们采用散点图，并添加标题等其他元素</span></span><br><span class="line"><span class="built_in">figure</span>;     <span class="comment">% 第一次绘制图像的时候，是否添加这句话效果相同</span></span><br><span class="line"><span class="built_in">plot</span>(iter, num, <span class="string">&#x27;ro&#x27;</span>);</span><br><span class="line">axis([<span class="number">1</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">100</span>]);</span><br><span class="line">title(<span class="string">&#x27;“水滴数”动态变化展示&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;迭代次数&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;数值&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 开始迭代计算</span></span><br><span class="line"><span class="keyword">while</span> num ~= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% 迭代一次</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">mod</span>(num,<span class="number">2</span>) == <span class="number">0</span></span><br><span class="line">        num = num / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        num = num * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    iter = iter + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">% 绘图</span></span><br><span class="line">    <span class="built_in">plot</span>(iter, num, <span class="string">&#x27;ro&#x27;</span>);</span><br><span class="line">    pause(refresh);</span><br><span class="line">    <span class="built_in">hold</span> on;         <span class="comment">% 这里的hold on命令也可省略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="绘制多幅子图像"><a href="#绘制多幅子图像" class="headerlink" title="绘制多幅子图像"></a>绘制多幅子图像</h3><p>有些使用我们需要在同一张图中并列放置多张图像，这时候我们可以使用subplot进行绘制。其主要使用方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% 绘制m*n排列的子图像中的第p幅</span><br><span class="line">subplot(m, n, p);</span><br><span class="line">plot();</span><br></pre></td></tr></table></figure><p>需要注意的是，subplot默认按逐行的方式对子图像进行排列。例如以下代码绘制了函数y=sin(k*x)在不同k值下的图像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">% 生成绘图数据</span><br><span class="line">x &#x3D; linspace(0,10);</span><br><span class="line">y1 &#x3D; sin(1*x);</span><br><span class="line">y2 &#x3D; sin(2*x);</span><br><span class="line">y3 &#x3D; sin(3*x);</span><br><span class="line">y4 &#x3D; sin(4*x);</span><br><span class="line"></span><br><span class="line">% 绘制2*2排列的子图像</span><br><span class="line">figure;     % 第一次绘制时，figure命令可省略</span><br><span class="line">subplot(2,2,1);</span><br><span class="line">plot(x,y1);</span><br><span class="line">title(&#39;Subplot 1: sin(x)&#39;);</span><br><span class="line"></span><br><span class="line">subplot(2,2,2);</span><br><span class="line">plot(x,y2);</span><br><span class="line">title(&#39;Subplot 2: sin(2x)&#39;);</span><br><span class="line"></span><br><span class="line">subplot(2,2,3);</span><br><span class="line">plot(x,y3);</span><br><span class="line">title(&#39;Subplot 3: sin(3x)&#39;);</span><br><span class="line"></span><br><span class="line">subplot(2,2,4);</span><br><span class="line">plot(x,y4);</span><br><span class="line">title(&#39;Subplot 4: sin(4x)&#39;);</span><br></pre></td></tr></table></figure><p>子图像的绘制结果如图所示：<br><img src="/img/matlab/matlab013_plot8.png" alt="plot8"></p><h1 id="图像算法"><a href="#图像算法" class="headerlink" title="图像算法"></a>图像算法</h1><blockquote><p>参考代码都是可以优化的，下面的只是参考，定位是简单入门。</p></blockquote><h2 id="图像导入与格式转换"><a href="#图像导入与格式转换" class="headerlink" title="图像导入与格式转换"></a>图像导入与格式转换</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line"><span class="comment">%-----读--取--图--片--并--显--示---------</span></span><br><span class="line"><span class="comment">% imread 读一张图片，括号里格式为字符串，这字符串表示你要读取图片的路径</span></span><br><span class="line">img = imread(<span class="string">&#x27;1.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 函数figure: 建立一个窗口 可以直接用数字去编号：</span></span><br><span class="line"><span class="comment">% figure(1);</span></span><br><span class="line"><span class="comment">% 关于figure的用法参考：https://blog.csdn.net/qq_30387863/article/details/80301996</span></span><br><span class="line"><span class="comment">% 命名编号：括号里两个参数：第一个是指定参数为&#x27;name&#x27;, 第二个写你要起的名字</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;小黑&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% 函数imshow：显示图片 括号里面是需要显示的图片的名字</span></span><br><span class="line">imshow(img);</span><br><span class="line"></span><br><span class="line"><span class="comment">% -----图--像--的--表--示-----</span></span><br><span class="line"><span class="comment">% 关于图像里面的数据格式，常见的是uint8和double </span></span><br><span class="line"><span class="comment">% 其中，uint8指的是没有符号的整数，即非负整数，double指的是精确度比较高的浮点数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 彩图和灰度图的转化不是可逆的，彩图到灰度图可以用函数rgb2gray</span></span><br><span class="line">gray = rgb2gray(img);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>);</span><br><span class="line">imshow(gray);</span><br><span class="line"></span><br><span class="line"><span class="comment">% ---保存图片到指定位置---</span></span><br><span class="line"><span class="comment">% 用 imwrite(A,filename) </span></span><br><span class="line"><span class="comment">% 将图像数据 A 写入 filename 指定的文件，并从扩展名推断出文件格式。</span></span><br></pre></td></tr></table></figure><h2 id="均值滤波"><a href="#均值滤波" class="headerlink" title="均值滤波"></a>均值滤波</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><h4 id="均值滤波的代码-code-m"><a href="#均值滤波的代码-code-m" class="headerlink" title="均值滤波的代码:code.m"></a>均值滤波的代码:code.m</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例用的思路是：</span><br><span class="line">选取相邻<span class="number">3</span>x3的范围，用<span class="number">9</span>个数字的平均作为滤波结果，进行赋值。</span><br><span class="line"></span><br><span class="line">均值滤波的两种方法：一个是示例的邻域平均，另一个是根据距离目标像素点的远近乘以加权的系数，叫做加权平均，像高斯滤波就是如此。</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote><p>这篇文章介绍得挺好：</p><p><a href="https://blog.csdn.net/u010552731/article/details/48162719">均值滤波和中值滤波</a></p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><blockquote><p>code.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line">img = imread(<span class="string">&#x27;1.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line">gray = rgb2gray(img);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;gray&#x27;</span>);</span><br><span class="line">imshow(gray);</span><br><span class="line"></span><br><span class="line">[m, n] = <span class="built_in">size</span>(gray);</span><br><span class="line"></span><br><span class="line">avg_filter = gray;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span>:m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span>:n<span class="number">-1</span></span><br><span class="line">        </span><br><span class="line">        filter_con = gray(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        k = sum(sum(filter_con))/<span class="number">9</span>;</span><br><span class="line">        avg_filter(<span class="built_in">i</span>, <span class="built_in">j</span>) = k;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;avg_filter&#x27;</span>);</span><br><span class="line">imshow(avg_filter);</span><br></pre></td></tr></table></figure><h2 id="sobel算法"><a href="#sobel算法" class="headerlink" title="sobel算法"></a>sobel算法</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><h4 id="文件code-m，"><a href="#文件code-m，" class="headerlink" title="文件code.m，"></a>文件code.m，</h4><p>利用sobel算子可以将图像周围像素灰度有阶跃变化的像素检测出来，这些像素组成的集合就是该图像的边缘。</p><p>实现： 分别用检测垂直边缘和检测水平边缘的算子对图像一点作平面卷积，然后开平方得到该点的灰度值。</p><h4 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h4><blockquote><p><a href="https://blog.csdn.net/Lrrent/article/details/51424447">sobel参考</a>  原理可以，里面参考代码不太行，漏洞太多，以我为准。</p><p><a href="https://zhuanlan.zhihu.com/p/59640437">知乎一篇不错的文章</a></p></blockquote><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><blockquote><p>code.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line">img = imread(<span class="string">&#x27;1.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;原图&#x27;</span>);</span><br><span class="line">imshow(img);</span><br><span class="line"></span><br><span class="line">gray = rgb2gray(img);</span><br><span class="line">[m, n] = <span class="built_in">size</span>(gray);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 预设好矩阵大小</span></span><br><span class="line">x_sobel = double(gray);</span><br><span class="line">y_sobel = double(gray);</span><br><span class="line">img_sobel = gray;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span>:m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span>:n<span class="number">-1</span></span><br><span class="line">        <span class="comment">% 分别用x、y方向的算子检测边缘，然后合成</span></span><br><span class="line">        <span class="comment">% x_con = [-1,0,1; -2,0,2; -1,0,1];</span></span><br><span class="line">        <span class="comment">% y_con = [-1,-2,-1; 0,0,0; 1,2,1];</span></span><br><span class="line">        x_sobel(<span class="built_in">i</span>,<span class="built_in">j</span>) = (<span class="number">-1</span>*gray(<span class="built_in">i</span><span class="number">-1</span>, <span class="built_in">j</span><span class="number">-1</span>) + gray(<span class="built_in">i</span><span class="number">-1</span>, <span class="built_in">j</span>+<span class="number">1</span>) ... <span class="comment">% 三个省略号表示接着下一行</span></span><br><span class="line">            <span class="number">-2</span>*gray(<span class="built_in">i</span>, <span class="built_in">j</span><span class="number">-1</span>) + <span class="number">2</span>*gray(<span class="built_in">i</span>, <span class="built_in">j</span>+<span class="number">1</span>) ...</span><br><span class="line">            <span class="number">-1</span>*gray(<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>) + gray(<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span>+<span class="number">1</span>));</span><br><span class="line">        </span><br><span class="line">        y_sobel(<span class="built_in">i</span>, <span class="built_in">j</span>) = (<span class="number">-1</span>*gray(<span class="built_in">i</span><span class="number">-1</span>, <span class="built_in">j</span><span class="number">-1</span>) - <span class="number">2</span>*gray(<span class="built_in">i</span><span class="number">-1</span>, <span class="built_in">j</span>) - gray(<span class="built_in">i</span><span class="number">-1</span>, <span class="built_in">j</span>+<span class="number">1</span>) ...</span><br><span class="line">            +gray(<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>) + <span class="number">2</span>*gray(<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span>) + gray(<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span>+<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">img_sobel = <span class="built_in">sqrt</span>(x_sobel.^<span class="number">2</span> + y_sobel.^<span class="number">2</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;img_sobel&#x27;</span>);</span><br><span class="line">imshow(uint8(img_sobel));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="腐蚀膨胀"><a href="#腐蚀膨胀" class="headerlink" title="腐蚀膨胀"></a>腐蚀膨胀</h2><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><h4 id="文件-code1-m："><a href="#文件-code1-m：" class="headerlink" title="文件 code1.m："></a>文件 code1.m：</h4><p>膨胀，使图像中亮的区域增长 </p><p>使用卷积核B对图片A进行卷积运算，求局部最大值，这个卷积核可以有任意的形状和大小，通常是一个方形或者圆形。卷积核B通常有个锚点，通常位于卷积核的中央位置。</p><p>随着卷积核扫描图像，计算叠加区域的最大像素值，并将锚点的位置用最大值替换，从而导致图片中亮的区域增长。</p><h5 id="文件code2-m"><a href="#文件code2-m" class="headerlink" title="文件code2.m:"></a>文件code2.m:</h5><p>腐蚀，使亮色的区域减少</p><h5 id="文件code3-m"><a href="#文件code3-m" class="headerlink" title="文件code3.m:"></a>文件code3.m:</h5><p>开操作, 先腐蚀后膨胀；先膨胀后腐蚀是闭操作；</p><p><strong>顶帽操作和底帽操作</strong>是灰度图像所特有的，其原理是开操作将使峰顶消去，具体消去了多少呢，可以用原图减去开操作结果，这样就能得到其消去的部分，而这个过程成为顶帽操作，顶帽就是开操作消去的峰顶，这一部分对应于图像中较亮的部分，也叫白色顶帽。</p><p>开运算放大了裂缝或者局部低亮度的区域，所以，从原图中减去开运算后的图，得到的结果突出了比原图轮廓周围的区域更明亮的区域，这个操作与选择的核的大小有关。TopHat运算一般用来分离比邻近点亮一些的斑块，可以使用这个运算提取背景。</p><p>同理，底帽操作是用闭操作的结果减去原图就得到被闭操作填充的谷底部分，这一部分对应于图像中较暗的部分，也叫黑色底帽。黑帽运算的结果突出了比原图轮廓周围区域更暗的区域，所以黑帽运算用来分离比邻近点暗一些的斑块。</p><h4 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/u012851419/article/details/78026596">参考一</a></p><p> <a href="https://blog.csdn.net/weixin_41929524/article/details/81187173">参考二</a></p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><blockquote><p>code1.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;1.jpg&#x27;</span>;</span><br><span class="line">img = imread(path);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;原图&#x27;</span>)</span><br><span class="line">imshow(img);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 膨胀：这里对灰度图腐蚀，其他类型图像同理</span></span><br><span class="line">gray = rgb2gray(img);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;灰度图&#x27;</span>)</span><br><span class="line">imshow(gray);</span><br><span class="line"></span><br><span class="line">[m,n] = <span class="built_in">size</span>(gray);</span><br><span class="line">pz = gray; <span class="comment">% 提前预分配，优化速度</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span> : n<span class="number">-1</span></span><br><span class="line">        <span class="comment">% con是选了3*3大小的卷积区域，然后腐蚀</span></span><br><span class="line">        con = gray(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        <span class="comment">% 一次max求每列最大，二次是整体最大</span></span><br><span class="line">        pz(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">max</span>(<span class="built_in">max</span>(con));</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">imshow(pz);</span><br></pre></td></tr></table></figure><blockquote><p>code2.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;1.jpg&#x27;</span>;</span><br><span class="line">img = imread(path);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;原图&#x27;</span>)</span><br><span class="line">imshow(img);</span><br><span class="line"></span><br><span class="line"><span class="comment">% ----------对--灰--度--图--腐--蚀---------</span></span><br><span class="line"><span class="comment">% gray = rgb2gray(img);</span></span><br><span class="line"><span class="comment">% figure(&#x27;name&#x27;, &#x27;灰度图&#x27;)</span></span><br><span class="line"><span class="comment">% imshow(gray);</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">% [m,n] = size(gray);</span></span><br><span class="line"><span class="comment">% fs = gray; % 提前预分配，优化速度</span></span><br><span class="line"><span class="comment">% for i = 2 : m-1</span></span><br><span class="line"><span class="comment">%     for j = 2 : n-1</span></span><br><span class="line"><span class="comment">%         % con是选了3*3大小的卷积区域，然后腐蚀</span></span><br><span class="line"><span class="comment">%         con = gray(i-1:i+1, j-1:j+1);</span></span><br><span class="line"><span class="comment">%         fs(i,j) = min(min(con));</span></span><br><span class="line"><span class="comment">%         </span></span><br><span class="line"><span class="comment">%     end</span></span><br><span class="line"><span class="comment">% end</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">% figure(&#x27;name&#x27;, &#x27;fs&#x27;);</span></span><br><span class="line"><span class="comment">% imshow(fs);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%------------对--彩--色--图-------------</span></span><br><span class="line">r = img(:, :, <span class="number">1</span>);</span><br><span class="line">g = img(:, :, <span class="number">2</span>);</span><br><span class="line">b = img(:, :, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">[m, n] = <span class="built_in">size</span>(r);</span><br><span class="line"></span><br><span class="line">r_out = r;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span> : n<span class="number">-1</span></span><br><span class="line">        con = r(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        r_out(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">min</span>(<span class="built_in">min</span>(con));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">g_out = g;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span> : n<span class="number">-1</span></span><br><span class="line">        con = g(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        g_out(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">min</span>(<span class="built_in">min</span>(con));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">b_out = b;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span> : n<span class="number">-1</span></span><br><span class="line">        con = b(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        b_out(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">min</span>(<span class="built_in">min</span>(con));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">out = <span class="built_in">cat</span>(<span class="number">3</span>, r_out, g_out, b_out);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;fs_color&#x27;</span>);</span><br><span class="line">imshow(out);</span><br></pre></td></tr></table></figure><blockquote><p>code3.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;1.jpg&#x27;</span>;</span><br><span class="line">img = imread(path);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;原图&#x27;</span>)</span><br><span class="line">imshow(img);</span><br><span class="line"></span><br><span class="line"><span class="comment">% ----开--运--算------</span></span><br><span class="line">gray = rgb2gray(img);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;灰度图&#x27;</span>)</span><br><span class="line">imshow(gray);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 先腐蚀</span></span><br><span class="line">[m,n] = <span class="built_in">size</span>(gray);</span><br><span class="line"></span><br><span class="line">fs = gray; </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span> : n<span class="number">-1</span></span><br><span class="line">        con = gray(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        fs(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">min</span>(<span class="built_in">min</span>(con));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 后膨胀</span></span><br><span class="line"></span><br><span class="line">pz = fs;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : m<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span> : n<span class="number">-1</span></span><br><span class="line">        con = fs(<span class="built_in">i</span><span class="number">-1</span>:<span class="built_in">i</span>+<span class="number">1</span>, <span class="built_in">j</span><span class="number">-1</span>:<span class="built_in">j</span>+<span class="number">1</span>);</span><br><span class="line">        pz(<span class="built_in">i</span>,<span class="built_in">j</span>) = <span class="built_in">max</span>(<span class="built_in">max</span>(con));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">open_img = pz;</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;open_img&#x27;</span>);</span><br><span class="line">imshow(open_img);</span><br><span class="line"></span><br><span class="line"><span class="comment">% ------顶--帽:找出多膨胀的那一块亮度--------</span></span><br><span class="line"><span class="comment">% 原图-开运算的图</span></span><br><span class="line">top_hat = gray - open_img;</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;top_hat&#x27;</span>);</span><br><span class="line">imshow(top_hat);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 备注： 由上面代码变换顺序做一下微调整，便可以得到闭运算、黑帽</span></span><br></pre></td></tr></table></figure><h2 id="直方图均衡化"><a href="#直方图均衡化" class="headerlink" title="直方图均衡化"></a>直方图均衡化</h2><h3 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>当图像直方图完全均匀分布的时候，此时图像的熵是最大的（随机变量每个值的概率都相同时，概率最大），图像对比度是最大的。直方图均衡化就是让图像的像素值所组成的直方图均匀分布，达到提高亮度的作用。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">code.m 是用灰度图实现</span><br><span class="line"></span><br><span class="line">code_color.m 是彩色图</span><br><span class="line"></span><br><span class="line">coloraverage.m 是对code_color.m 的写法改进</span><br></pre></td></tr></table></figure><h4 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h4><blockquote><p> <a href="https://blog.csdn.net/weixin_39830846/article/details/88706557">彩色图像的直方图均衡化，用到了函数，这个不错</a></p><p><a href="https://blog.csdn.net/Charlotte_android/article/details/80977958">直方图的原理</a></p></blockquote><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><blockquote><p>code.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 读图</span></span><br><span class="line">img = imread(<span class="string">&#x27;1.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%灰度图处理</span></span><br><span class="line">gray = rgb2gray(img);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;original gray&#x27;</span>);</span><br><span class="line">imshow(gray);</span><br><span class="line"></span><br><span class="line"><span class="comment">%读取灰度图 及直方图</span></span><br><span class="line">[R,C]=<span class="built_in">size</span>(gray);</span><br><span class="line"><span class="comment">% figure(2);</span></span><br><span class="line"><span class="comment">% imhist(I);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%统计灰度</span></span><br><span class="line">s=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        s(<span class="number">1</span>,gray(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>)=s(<span class="number">1</span>,gray(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%算概率</span></span><br><span class="line">p=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">256</span></span><br><span class="line">    p(<span class="built_in">i</span>)=s(<span class="built_in">i</span>)/(R*C*<span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%累计直方图</span></span><br><span class="line">c=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line">c(<span class="number">1</span>)=p(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">256</span></span><br><span class="line">    c(<span class="built_in">i</span>)=c(<span class="built_in">i</span><span class="number">-1</span>)+p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%取整</span></span><br><span class="line"><span class="comment">% c = uint8(255.*c+0.5);</span></span><br><span class="line">c= <span class="built_in">round</span>(<span class="number">255.</span>*c);</span><br><span class="line"><span class="comment">%  均衡</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        gray(<span class="built_in">i</span>,<span class="built_in">j</span>)=c(gray(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%8 输出直方图均衡化后的图像</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;out_hisq&#x27;</span>);</span><br><span class="line">imshow(gray);</span><br><span class="line"><span class="comment">% figure(4);</span></span><br><span class="line"><span class="comment">% imhist(I);</span></span><br></pre></td></tr></table></figure><blockquote><p>code_color.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 读图</span></span><br><span class="line">img = imread(<span class="string">&#x27;1.jpg&#x27;</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;original image&#x27;</span>);</span><br><span class="line">imshow(img);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">12</span>);</span><br><span class="line">imshow(histeq(img, <span class="number">256</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">%彩图处理</span></span><br><span class="line">r = img(:, :, <span class="number">1</span>);</span><br><span class="line">g = img(:, :, <span class="number">2</span>);</span><br><span class="line">b = img(:, :, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 获得图像的尺寸大小 </span></span><br><span class="line">[R, C]=<span class="built_in">size</span>(r);</span><br><span class="line"></span><br><span class="line"><span class="comment">% ----分--图--层--处--理------</span></span><br><span class="line"><span class="comment">% ----r----</span></span><br><span class="line">r_out = r;</span><br><span class="line">s = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        s(<span class="number">1</span>, r_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>)=s(<span class="number">1</span>, r_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%算概率</span></span><br><span class="line">p = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">256</span></span><br><span class="line">    p(<span class="built_in">i</span>)=s(<span class="built_in">i</span>)/(R*C*<span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%累计直方图</span></span><br><span class="line">c=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line">c(<span class="number">1</span>)=p(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">256</span></span><br><span class="line">    c(<span class="built_in">i</span>)=c(<span class="built_in">i</span><span class="number">-1</span>)+p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%取整</span></span><br><span class="line"><span class="comment">% c = uint8(255.*c+0.5);</span></span><br><span class="line">c= <span class="built_in">round</span>(<span class="number">255.</span>*c);</span><br><span class="line"><span class="comment">%  均衡</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        r_out(<span class="built_in">i</span>,<span class="built_in">j</span>)=c(r_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% -----g-------</span></span><br><span class="line">g_out = g;</span><br><span class="line">s=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        s(<span class="number">1</span>, g_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>) = s(<span class="number">1</span>, g_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%算概率</span></span><br><span class="line">p=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">256</span></span><br><span class="line">    p(<span class="built_in">i</span>)=s(<span class="built_in">i</span>)/(R*C*<span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%累计直方图</span></span><br><span class="line">c=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line">c(<span class="number">1</span>)=p(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">256</span></span><br><span class="line">    c(<span class="built_in">i</span>)=c(<span class="built_in">i</span><span class="number">-1</span>)+p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%取整</span></span><br><span class="line"><span class="comment">% c = uint8(255.*c+0.5);</span></span><br><span class="line">c= <span class="built_in">round</span>(<span class="number">255.</span>*c);</span><br><span class="line"><span class="comment">%  均衡</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        g_out(<span class="built_in">i</span>,<span class="built_in">j</span>) = c(g_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% -----b-------</span></span><br><span class="line">b_out = b;</span><br><span class="line">s=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:C</span><br><span class="line">        s(<span class="number">1</span>, b_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>) = s(<span class="number">1</span>, b_out(<span class="built_in">i</span>,<span class="built_in">j</span>) + <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%算概率</span></span><br><span class="line">p=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">256</span></span><br><span class="line">    p(<span class="built_in">i</span>)=s(<span class="built_in">i</span>)/(R*C*<span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%累计直方图</span></span><br><span class="line">c=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line">c(<span class="number">1</span>)=p(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="number">256</span></span><br><span class="line">    c(<span class="built_in">i</span>)=c(<span class="built_in">i</span><span class="number">-1</span>)+p(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">%取整</span></span><br><span class="line"><span class="comment">% c = uint8(255.*c+0.5);</span></span><br><span class="line">c= <span class="built_in">round</span>(<span class="number">255.</span>*c);</span><br><span class="line"><span class="comment">%  均衡</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:C</span><br><span class="line">        b_out(<span class="built_in">i</span>,<span class="built_in">j</span>) = c(b_out(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">out = <span class="built_in">cat</span>(<span class="number">3</span>, r_out, g_out, b_out);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出直方图均衡化后的图像</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;out_hisq&#x27;</span>);</span><br><span class="line">imshow(out);</span><br></pre></td></tr></table></figure><blockquote><p>coloraverage.m</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%主函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">coloraverage</span><span class="params">()</span></span></span><br><span class="line">I=imread(<span class="string">&#x27;1.jpg&#x27;</span>);</span><br><span class="line">imshow(I);</span><br><span class="line">I1=I(:,:,<span class="number">1</span>);<span class="comment">%提取红色分量</span></span><br><span class="line">I2=I(:,:,<span class="number">2</span>);<span class="comment">%提取绿色分量</span></span><br><span class="line">I3=I(:,:,<span class="number">3</span>);<span class="comment">%提取蓝色分量</span></span><br><span class="line">I1=histogram(I1);   <span class="comment">%构造的函数</span></span><br><span class="line">I2=histogram(I2);</span><br><span class="line">I3=histogram(I3);</span><br><span class="line">c=<span class="built_in">cat</span>(<span class="number">3</span>,I1,I2,I3);  <span class="comment">%cat用于构造多维数组</span></span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>);imshow(I);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>);imshow(c);</span><br><span class="line"></span><br><span class="line"><span class="comment">%调用的（直方图均衡化）构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">d</span>=<span class="title">histogram</span><span class="params">(I)</span>%构造<span class="title">histogram</span>函数</span></span><br><span class="line">J=I;</span><br><span class="line">[m,n]=<span class="built_in">size</span>(I);      <span class="comment">%确定矩阵大小</span></span><br><span class="line">area=m*n;</span><br><span class="line">a=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);     <span class="comment">%产生1*256的零矩阵a,用来存放原始图像各个灰度值的个数</span></span><br><span class="line">b=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m           <span class="comment">%记录各个灰度值的个数</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">        d=I(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>;   <span class="comment">%获取(i,j)位置的灰度值(注意：灰度值为0-255，对应矩阵的1-256）</span></span><br><span class="line">        a(<span class="number">1</span>,d)=a(<span class="number">1</span>,d)+<span class="number">1</span>;    <span class="comment">%矩阵a上对应灰度值的计数+1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">256</span>         <span class="comment">%均衡化</span></span><br><span class="line">    sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="built_in">i</span></span><br><span class="line">        sum=sum+a(<span class="number">1</span>,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    b(<span class="number">1</span>,<span class="built_in">i</span>)=sum*<span class="number">255</span>/area;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:m           <span class="comment">%用均衡化后的数据代替原位置的数据</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:n</span><br><span class="line">        d=J(<span class="built_in">i</span>,<span class="built_in">j</span>)+<span class="number">1</span>;</span><br><span class="line">        J(<span class="built_in">i</span>,<span class="built_in">j</span>)=b(<span class="number">1</span>,d);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">d=J;</span><br></pre></td></tr></table></figure><blockquote><p>整理参考来源：</p><p>1、<a href="https://ghh3809.github.io/category/#MATLAB">grammar</a></p><p>2、书：数字图像处理，朱虹等著</p><p>3、知乎/CSDN等网友的博客贴</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇内容是我用matlab学习图像处理的记录&lt;/p&gt;
&lt;p&gt;Q:how to improve my coding force level&lt;/p&gt;
&lt;p&gt;A:我会找个教程/文档例子，把代码逐行敲一遍，感觉就像是我自己写的一样，一旦完成，我会从头重写一遍，添加注释，并根据自己的用例修改它。&lt;/p&gt;</summary>
    
    
    
    <category term="编程 matlab" scheme="lider7214.cn/categories/%E7%BC%96%E7%A8%8B-matlab/"/>
    
    
    <category term="coding matlab与图像处理" scheme="lider7214.cn/tags/coding-matlab%E4%B8%8E%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>从工程测量的课程学习到几何直观记录</title>
    <link href="lider7214.cn/2020/11/08/027%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E5%B7%A5%E7%A8%8B%E6%B5%8B%E9%87%8F/"/>
    <id>lider7214.cn/2020/11/08/027%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E5%B7%A5%E7%A8%8B%E6%B5%8B%E9%87%8F/</id>
    <published>2020-11-08T13:40:13.124Z</published>
    <updated>2020-11-09T06:43:20.045Z</updated>
    
    <content type="html"><![CDATA[<p>测量的核心是找“点”，确定一个点到确定一组点，最终完成工程目标。</p><a id="more"></a><h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><h2 id="测量学"><a href="#测量学" class="headerlink" title="测量学"></a>测量学</h2><p>1、测绘学下属研究的一个分支</p><p>2、贯穿工程建设：可研阶段/施工阶段/竣工阶段/运行阶段</p><h2 id="水准面"><a href="#水准面" class="headerlink" title="水准面"></a>水准面</h2><p>1、将地球数学模型化而设置的概念，具有意义的是大地水准面。（之所以是水准，是因为地球71%是海洋面。</p><p>2、我国在青岛设验潮站测量大地水准面</p><h2 id="地球面"><a href="#地球面" class="headerlink" title="地球面"></a>地球面</h2><p>1、整体假设为旋转椭球面，但局部研究时采取的是参考椭球体</p><p>2、参考椭球体下将地球局部可看作球体，故有R=6371m</p><h2 id="测量要素"><a href="#测量要素" class="headerlink" title="测量要素"></a>测量要素</h2><p>距离、角度、高程</p><blockquote><p>水平面代替水准面的限度：<br>距离限制在10km范围内，高程要考虑地球曲率的影响</p></blockquote><h2 id="测量实施原则"><a href="#测量实施原则" class="headerlink" title="测量实施原则"></a>测量实施原则</h2><p>整体、控制到局部、碎部</p><h1 id="误差"><a href="#误差" class="headerlink" title="误差"></a>误差</h1><h2 id="研究对象"><a href="#研究对象" class="headerlink" title="研究对象"></a>研究对象</h2><p>针对偶然误差</p><h2 id="衡量标准"><a href="#衡量标准" class="headerlink" title="衡量标准"></a>衡量标准</h2><p>1、标准差</p><p>2、中误差</p><p>3、相对误差</p><h2 id="误差传播"><a href="#误差传播" class="headerlink" title="误差传播"></a>误差传播</h2><p>通过各自观测值的误差和观测值对应的导数（“误差传播权重”）的乘积来计算函数整体的误差。</p><h2 id="平差"><a href="#平差" class="headerlink" title="平差"></a>平差</h2><h3 id="等精度"><a href="#等精度" class="headerlink" title="等精度"></a>等精度</h3><p>算数平均值代入中误差求平差</p><h3 id="不等精度"><a href="#不等精度" class="headerlink" title="不等精度"></a>不等精度</h3><p>1、根据可靠程度分配权，求得各个观测值对应的权重，用加权平均值来求平差</p><p>2、权重分配方案：<br>根据中误差：平方反比</p><p>根据测回数：正比</p><p>根据测站数：一次反比</p><p>根据测量长度：一次反比</p><blockquote><p>权重计算技巧：在除法时一般会取各自观测度的最大公因数处理数据为整数，方便计算。</p></blockquote><h1 id="水准测量"><a href="#水准测量" class="headerlink" title="水准测量"></a>水准测量</h1><h2 id="水准测量原理"><a href="#水准测量原理" class="headerlink" title="水准测量原理"></a>水准测量原理</h2><blockquote><p>Hb=Ha+(a-b) </p></blockquote><p>用后视尺读数推算前视尺读数</p><h2 id="水准测量的一般方法和要求"><a href="#水准测量的一般方法和要求" class="headerlink" title="水准测量的一般方法和要求"></a>水准测量的一般方法和要求</h2><p>1、实施：</p><p>直接水准测量;</p><p>设置高程转点、放尺垫测</p><p>2、高程传递</p><p>hb=ha+[h]</p><p>3、水准测量表格</p><blockquote><p>Hb=Ha+(a-b) </p></blockquote><p>第一步：观测得数据a b</p><p>第二步：求高差</p><p>第三步：推算高程</p><p>第四步：计算校核，前三步数据校核</p><p>4、测量校核</p><p>（1）测站校核</p><p>（2）路线校核</p><p>取国标为基准衡量校核</p><p>分析法:</p><p>1） 计算理论高程差[h]</p><p>2） 测量实际高程差[h]测</p><p>3） 比较得出闭合差 Δh</p><p>具体对应路线：<br>(核心分析式子：hb = ha + [h])</p><p>闭合水准</p><blockquote><p>[h] = 0</p><p>[h]测</p><p>Δh = [h]测-[h] = [h]测</p></blockquote><p>附和水准</p><blockquote><p>[h] = hb - ha</p><p>[h]测 </p><p>Δh = [h]测-（hb-ha）</p></blockquote><p>支水准</p><blockquote><p>通过往返测算数求和计算闭合差</p></blockquote><p><strong>精度要求</strong></p><p>按照路线长度：±40*（L）^(1/2)</p><p>按照测站数： ±10*（L）^（1/2）</p><p>若不能满足精度要求，则需要返工</p><p>5、水准路线闭合差调整和高程计算</p><p>对满足精度的闭合差按照长度或者测站数比例分配到原来的高程差上，然后求出调正后的高程。</p><h2 id="水准测量误差及其消减"><a href="#水准测量误差及其消减" class="headerlink" title="水准测量误差及其消减"></a>水准测量误差及其消减</h2><p>1、仪器误差</p><p>仪器校正后的参与误差/对光误差/水准尺误差</p><p>2、观测误差</p><p>整平误差/视差影响/照准误差/读数误差/水准尺倾斜影响</p><p>3、外界条件的影响</p><p>仪器升降/尺垫下沉/地球曲率/大气折光/温度</p><h2 id="水准仪结构和使用"><a href="#水准仪结构和使用" class="headerlink" title="水准仪结构和使用"></a>水准仪结构和使用</h2><ul><li>关键结构：</li></ul><p>望远镜/圆水准器/水准管</p><ul><li>水准测量器具：</li></ul><p>水准仪/水准尺/三脚架/尺垫</p><ul><li>水准仪的使用：<br>（一次完整的高程差测量）</li></ul><p><strong>1、安置仪器；<br>2、粗略整平；<br>3、瞄准目标A（先外粗瞄，后内粗瞄）；<br>4、消除视差；<br>5、精平；<br>6、读数a；<br>7、瞄准目标B；<br>4、消除视差；<br>5、精平；<br>6、读数b。</strong></p><h2 id="水准仪的检验校正"><a href="#水准仪的检验校正" class="headerlink" title="水准仪的检验校正"></a>水准仪的检验校正</h2><p>步骤： 检验是否满足精度要求-&gt;校正-&gt;再次检验</p><p>检验三个指标：</p><blockquote><p>指标一、圆水准管轴平行于仪器竖轴：望远镜转180度，看转后圆水准管气泡是否仍在中心</p></blockquote><blockquote><p>指标二、十字横丝垂直于仪器竖轴：找一个点水平左右转，看是否在一条线上</p></blockquote><blockquote><p>指标三、视准轴平行于水准管轴：1 平坦地面找个两个点，水准仪放中间测出两点高程，得到高程差（测三次且波动小于3mm，取平均值）h真 2、水准仪移到任意一个点外侧，测出高程，得高程差h2 h2-h真在3mm外就需要校正</p></blockquote><p>校正：</p><blockquote><p>指标一：脚螺丝和校正螺丝分别校正一半</p></blockquote><blockquote><p>指标二：拧埋头螺丝</p></blockquote><blockquote><p>指标三：算出h真+h（靠近水准仪一侧的）为远离水准仪一侧的校正后读数，然后调正微倾螺旋到计算的数字上，再转动校正螺旋使得水准管的气泡居中</p></blockquote><h1 id="角度测量"><a href="#角度测量" class="headerlink" title="角度测量"></a>角度测量</h1><h2 id="水平角测量"><a href="#水平角测量" class="headerlink" title="水平角测量"></a>水平角测量</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>测站O，目标点A、B，OA、OB夹角测量沿着铅垂方向投影到水平面测得水平角AOB</p><p>关键点：整平（度盘水平）和对中（O点对应度盘中心）</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>测回法：两个目标之间夹角<br>1 盘左测上半，盘右逆时针下半测回，<br>上下测回误差小于36’’，各测回误差小于24’’</p><p>2 起始读数变换值：180/n</p><p>全圆测回法：三个或三个以上目标夹角</p><p>一、数据测量与核实</p><p>1 测半测回归零差； （验证小于18’’）</p><p>2 2C 变化范围；</p><p>3 平均读数；</p><p>二、开始计算角值</p><p>4 起始方向值；</p><p>5 归零方向值；（验证各测回误差小于24’’）；</p><p>6 平均方向值get；</p><p>7 出角值</p><h2 id="竖直角测量"><a href="#竖直角测量" class="headerlink" title="竖直角测量"></a>竖直角测量</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>测竖直平面内目标方向与水平方向的夹角<br>（仰+、俯-）</p><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><p>1、竖直指标线标定竖盘读数，盘左标定为90、盘右270；</p><p>2、竖直角用大的读数-小的；</p><p>3、竖盘指标差：x = （α左 - α右）/2<br>α正 = （α左 + α右）/2；</p><p>4、观测步骤：</p><p>对中整平；指标水准管；算左；转算右；可选若干测回测竖直角</p><h2 id="角度测量的误差分析"><a href="#角度测量的误差分析" class="headerlink" title="角度测量的误差分析"></a>角度测量的误差分析</h2><h3 id="仪器误差"><a href="#仪器误差" class="headerlink" title="仪器误差"></a>仪器误差</h3><p>仪器制造；<br>仪器校正不完善</p><h3 id="观测误差"><a href="#观测误差" class="headerlink" title="观测误差"></a>观测误差</h3><p>对中误差；<br>整平误差；<br>目标偏心误差；<br>照准误差；<br>读数误差</p><h3 id="外界条件影响"><a href="#外界条件影响" class="headerlink" title="外界条件影响"></a>外界条件影响</h3><p>温度、大风、大气折光、大气透明度、地面等</p><h2 id="经纬仪的认识与使用"><a href="#经纬仪的认识与使用" class="headerlink" title="经纬仪的认识与使用"></a>经纬仪的认识与使用</h2><p>1、DJ6表示中误差±6</p><p>2、构造：</p><p>照准部：望远镜、横轴、竖直度盘、竖直指标水准管、读数显微镜、照准部水准管、竖轴</p><p>水平度盘：水平度盘、方向经纬仪</p><p>基座</p><p>3、读数：看大刻度线粗读，再估读秒，按6的倍数估读。</p><h2 id="经纬仪的检验校正"><a href="#经纬仪的检验校正" class="headerlink" title="经纬仪的检验校正"></a>经纬仪的检验校正</h2><p>主要轴线：<br>仪器竖轴</p><p>仪器横轴</p><p>照准部水准管轴</p><p>望远镜视准轴</p><ul><li>水平角检校：</li></ul><p>照准部水准管轴垂直于竖轴</p><p>十字丝竖丝垂直于横轴 </p><p>视准轴垂直于横轴</p><p>横轴垂直于竖轴</p><ul><li>竖直角检验：</li></ul><p>竖盘指标水准管轴垂直于竖盘读数指标线</p><h1 id="距离测量"><a href="#距离测量" class="headerlink" title="距离测量"></a>距离测量</h1><h2 id="直线定向"><a href="#直线定向" class="headerlink" title="直线定向"></a>直线定向</h2><p>1、直线定向的依据——标准方向</p><p>子午线（真子午线、磁子午线）：有收敛角，不便计算</p><p>坐标纵轴：便于计算</p><p>2、直线方向的表示方法</p><p>方位角：一端的北端顺时针转至与直线重合所经过的角度，<br>每个标准方向对应一个方位角，</p><blockquote><p>真子午线–&gt;真方位角,磁子午线–&gt;磁方位角，坐标纵轴–&gt;坐标方位角</p></blockquote><p>正方位角：直线前进方向起始端处的夹角<br>反方位角：直线前进方向终端</p><p>3、坐标方位角：<br>把标准方向设为坐标纵轴的方位角</p><p>坐标方位角的推算：<br>用上一个起始方位角和当前方位角推算当前水平角</p><p>关系相差180，左角+、右角-（左右角按照前进方向判断）</p><p>4、坐标正反算</p><p>坐标正算：由一点坐标和夹角距离求另外一点坐标；<br>方法：用三角函数计算增量，之后由A正算求B；</p><p>坐标反算：已知两点反求距离和夹角<br>方法：距离用勾股定理/用增量和夹角三角函数</p><p>5、罗盘仪</p><h2 id="距离丈量"><a href="#距离丈量" class="headerlink" title="距离丈量"></a>距离丈量</h2><p>1、工具<br>直接丈量：钢卷尺、皮尺</p><p>视距（间接）测量：经纬仪、水准仪</p><p>光电测距：全站仪、测距仪</p><p>2、一般方法</p><p>平坦地面丈量：整尺倍数+余长</p><p>倾斜地面丈量：分段平量或用三角函数由倾斜距离计算得到</p><p>精密方法</p><p>钢尺尺长、温度、倾斜改正</p><p>步骤：定线（经纬仪）-&gt;量距-&gt;测高差（水准仪）</p><h2 id="视距测量"><a href="#视距测量" class="headerlink" title="视距测量"></a>视距测量</h2><p>同时测定距离和高差</p><p>水平时，<br>距离=KL 高程=测点高-视距尺读数</p><p>倾斜时，<br>距离=klcos（2）α<br>高差=Dtgα+水平时的高差</p><h2 id="红外和全站"><a href="#红外和全站" class="headerlink" title="红外和全站"></a>红外和全站</h2><p>光电：距离和时间的关系</p><p>全站：自动的</p><h1 id="平面、高程控制测量"><a href="#平面、高程控制测量" class="headerlink" title="平面、高程控制测量"></a>平面、高程控制测量</h1><h2 id="平面"><a href="#平面" class="headerlink" title="[平面]"></a>[平面]</h2><p>1、测量原则：先整体后局部，先控制后碎部</p><p>2、平面控制是测定控制点平面位置（x，y）<br>高程控制测量是控制点高程（H）</p><p>3、控制方法：<br>三角测量（布设三角网）<br>导线测量（布设导线网）<br>卫星和惯性大地测量</p><p>4、国家平面控制网主要采用三角测量法进行布设，在西部地形复杂地区采用精密导线测量</p><p>该网有四个等级，一等精度最高。</p><p>5、对于小测区，要进一步加密控制点。<br>直接供地形测图——图根控制点-&gt;图根控制网<br>图根控制网不能满足要求——引测站点</p><h3 id="导线测量"><a href="#导线测量" class="headerlink" title="导线测量"></a>导线测量</h3><p>1、布设形式：</p><p>闭合导线、附和导线、支导线</p><p>2、导线测量的外业工作</p><p>（1）查勘选点：<br>三个良好、三个便于</p><p>（2）导线边长测定：钢尺、光电测距、视距测量</p><p>（3）角度观测：一般观测左角，闭合导线按照逆时针方向编号（此时左角为闭合导线中内角）</p><p>（4）联系测量：导线与高一级控制点连接取得坐标和方位角的起算数据</p><p>3、内业计算</p><p>（1）准备：<br>外业记录的检查——计算是否正确、各项误差是否在限差之内<br>绘制导线略图（可视化：点号、角度、边长/已知坐标和方位角）</p><p>关于闭合导线：检查内角和条件和坐标条件</p><p>（2）角度闭合差计算和调整</p><p>闭合差=[β]-（n-2）*180</p><p>（允许值±60或40 * n^(1/2)）</p><p>改正：每个角度=原来的角度-闭合差/n</p><p>（3）方位角推算<br>闭合导线逆时针推算，最后回到更高一级的控制点比较</p><p>（4）坐标增量计算及调整</p><p>坐标闭合差和边长闭合差<br>精度不够要返工</p><p>坐标增量改正：按照边长比例进行分配</p><p>（5）导线点坐标计算<br>由已知点计算出来</p><ul><li>附和导线与闭合导线计算的不同之处：</li></ul><p>始方位角、终方位角求解</p><p>导线转折角<strong>闭合差</strong>的计算</p><p>坐标增量<strong>闭合差</strong>的计算</p><h3 id="小三角测量"><a href="#小三角测量" class="headerlink" title="小三角测量"></a>小三角测量</h3><p>1、外业</p><p>（1）踏勘选点</p><p>（2）基线测量</p><p>（3）角度观测：全圆测回法</p><p>（4）起始边定向（引高一级的控制点或者用罗盘仪测起始方向的磁方位角）</p><p>2、内业</p><p>（1）准备工作</p><p>（2）内角平差</p><p>（3）基线闭合差的计算和调整</p><p>（4）边长计算</p><p>（5）三角锁各点坐标计算</p><h2 id="高程"><a href="#高程" class="headerlink" title="[高程]"></a>[高程]</h2><p>用水准测量的方法</p><p>等级有一二三四等水准网</p><p>现在的高程基准：1985年国家高程基准<br>黄海平均海水面作为高程零点</p><h3 id="三、四等水准测量"><a href="#三、四等水准测量" class="headerlink" title="三、四等水准测量"></a>三、四等水准测量</h3><p>1、指标要求</p><p>2、观测方法</p><p>（1）双面水准尺</p><p>（2）测站工作</p><p>（3）计算和校核<br>视距计算–过两关</p><p>高差计算–过三关</p><p>校核计算</p><p>3、注意事项</p><p>迁站要求：</p><p>K常数</p><p>观测顺序</p><p>高差闭合差的调整</p><h3 id="三角高程测量"><a href="#三角高程测量" class="headerlink" title="三角高程测量"></a>三角高程测量</h3><p>光电测距三角高程测量</p><h1 id="从控制到碎部"><a href="#从控制到碎部" class="headerlink" title="从控制到碎部"></a>从控制到碎部</h1><h2 id="地形图"><a href="#地形图" class="headerlink" title="地形图"></a>地形图</h2><p>1、地物/地貌/地形<br>–&gt;地形图</p><p>2、平面图</p><p>3、比例尺</p><p>（1）分类：大比例尺 工程设计用<br>中比例尺 工程规划用<br>小比例尺 基础图</p><p>（2）比例尺精度<br>地形图上0.1mm所代表的实地长度，称为比例尺的精度<br>（后面的数字除以1k）</p><p>（3）地物地貌的表示方法</p><p>（4）等高线特性</p><p>（5）典型地貌</p><h1 id="施工放样"><a href="#施工放样" class="headerlink" title="施工放样"></a>施工放样</h1><p>1、施工控制网：</p><p>（1）平面控制网</p><p>基本网</p><p>定线网</p><p>（2）高程控制网</p><p>基本网</p><p>临时性作业水准点</p><p>2、放样：距离、水平角、高程</p><p>直线长度的放样</p><p>钢尺测设直线长度</p><p>测距仪测设长度</p><p>水平角的放样</p><p>高程放样</p><p>3、测设放样点平面位置的基本方法</p><p>（1）直角坐标法</p><p><strong>（2）极坐标法</strong></p><p>（3）角度交会法</p><p>（4）距离交会法</p><h2 id="圆曲线测设"><a href="#圆曲线测设" class="headerlink" title="圆曲线测设"></a>圆曲线测设</h2><p>1、圆曲线测设三主点<br>起点、中点、终点</p><p>2、测设思路：</p><p>（1）主点测设</p><p>要素计算</p><p>主点测设步骤</p><p>（2）细部点测设</p><p>主点桩号计算</p><p>细部点桩号确定</p><p>细部点测设的两种方法：<br>直角坐标法<br>偏角法</p><p>细部点测设步骤</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;测量的核心是找“点”，确定一个点到确定一组点，最终完成工程目标。&lt;/p&gt;</summary>
    
    
    
    <category term="理论 工程技术" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="工程测量" scheme="lider7214.cn/tags/%E5%B7%A5%E7%A8%8B%E6%B5%8B%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>管理学</title>
    <link href="lider7214.cn/2020/11/08/018%20%E7%AE%A1%E7%90%86%E5%AD%A6%E6%80%BB%E7%BB%93/"/>
    <id>lider7214.cn/2020/11/08/018%20%E7%AE%A1%E7%90%86%E5%AD%A6%E6%80%BB%E7%BB%93/</id>
    <published>2020-11-08T13:40:13.115Z</published>
    <updated>2020-12-03T10:58:12.326Z</updated>
    
    <content type="html"><![CDATA[<p>学完一门知识，最终能留下什么，应该是对这一门课的认知体系，或者说，学习完课程后脑海里的认知模型。随着时间的流逝，记忆越来越模糊，体系却仍然有，而我想在每次学习之后趁热打铁记录一下我的感悟，在未来回看的时候也可以更新、加深理解。</p><a id="more"></a><blockquote><p>进度： 2020/5/30 管理学认知</p></blockquote><h2 id="管理学-大二下"><a href="#管理学-大二下" class="headerlink" title="管理学 大二下"></a>管理学 大二下</h2><p>学完了管理学，跟着书中世界体会了从古典理论到当代管理学的变迁精彩，刷新了自己的认知。大概理一理接下来说的话，一、什么是管理；二、我的管理学记忆学习模型；三、对未来的思考。</p><p>在学习之前，我最初的认知就是管理学的职能在于资源调度。现代管理学本质就是对已有的资源研究其规律，最后更好地去调用这些资源服务需求。这里的资源有人力资源和物质资源。</p><p>带着这样的认知，我去学习管理学，第一次触动我的名词是决策二字。这给了我深深的启迪，让我对管理学的认知由静态转变到了动态。过去，我的大脑里只有管理贫瘠的二字，最多加上资源。这些内容像是一张静态的画，缺少活力。然后，从决策开始，我更新了管理的认知。我们面对的管理，不再是过去等待分配的资源，而是在时代汹涌潮流中随时变化的动态机遇，再加上后续理念和方法的学习，我认知了如下的管理：</p><p>所谓管理，是在所处的动态环境下对一系列资源的重构、利用、引导的事件集合。<br>在我看来，它的内核是一个个动态的事件脚本，每一个情境下是不同的整合，我们不仅学习脚本运转的共性，我们也考虑脚本的个性。</p><p>再来说说管理认知模型，粗浅的看了人体解剖，于是在学习的过程，我就把管理知识和人体对应了。 不严谨地说，人，先骨架，然后血肉填充，此时静态；之后神经控之，化静为动，是为三层成人。而以组织结构（制度、层级）为骨架，人与资源等填充于骨架之间，而后控制体系（领导、控制、创新）使之流淌，是为管理。</p><p>最后，说说展望，在学习过程中有一个问题，我印象很深刻，管理是科学还是艺术呢？ 好的回答是从管理理念上来说，它是一门科学；从管理的实践活动看，管理学是行为的艺术。也因此，我想说，在未来的路上，知行合一，让知识不仅仅躺在那里作为科学观赏，而思考知识如何服务于我个人乃至我之外，发挥管理作为一种艺术的美妙。</p><blockquote><p>草草写于2020/5/30，希望后续有机会把文字内容更加完善。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;学完一门知识，最终能留下什么，应该是对这一门课的认知体系，或者说，学习完课程后脑海里的认知模型。随着时间的流逝，记忆越来越模糊，体系却仍然有，而我想在每次学习之后趁热打铁记录一下我的感悟，在未来回看的时候也可以更新、加深理解。&lt;/p&gt;</summary>
    
    
    
    <category term="理论 经济管理" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>我的摄影的学习之旅</title>
    <link href="lider7214.cn/2020/11/08/014%20%E6%91%84%E5%BD%B1%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <id>lider7214.cn/2020/11/08/014%20%E6%91%84%E5%BD%B1%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</id>
    <published>2020-11-08T13:40:13.111Z</published>
    <updated>2020-11-09T06:37:34.512Z</updated>
    
    <content type="html"><![CDATA[<p>摄影是一次全新的生命体验</p><p><strong>Life is Changed by Photography</strong></p><a id="more"></a><h1 id="了解手机摄影、像素、光圈"><a href="#了解手机摄影、像素、光圈" class="headerlink" title="了解手机摄影、像素、光圈"></a>了解手机摄影、像素、光圈</h1><h2 id="像素"><a href="#像素" class="headerlink" title="像素"></a>像素</h2><p>1、长乘以宽=手机像素点</p><p>2、计算图片打印出来最大显示尺寸：像素长（宽）/每英寸可以打印的像素点</p><p>衡量指标：DPI下的尺寸</p><h2 id="光圈"><a href="#光圈" class="headerlink" title="光圈"></a>光圈</h2><p>1、焦距</p><p>广角镜头，67°，焦距28mm</p><p>长焦镜头，3°，焦距800mm<br>：3°角长焦镜头</p><p>2、变焦：焦距发生改变</p><p>3、光圈<br>f/1.8 f/1.9 f/2.0 …</p><p>大光圈：光线的捕捉</p><h1 id="感光元件尺寸"><a href="#感光元件尺寸" class="headerlink" title="感光元件尺寸"></a>感光元件尺寸</h1><p>手机硬件的感光，画质</p><p>画质从来不会影响评判一个摄影作品的好坏。</p><h1 id="了解构图"><a href="#了解构图" class="headerlink" title="了解构图"></a>了解构图</h1><h2 id="机位"><a href="#机位" class="headerlink" title="机位"></a>机位</h2><p>不同的走动，<strong>站到一个恰到好处的位置</strong>，找出合适的点，表达想要的元素</p><h2 id="视点"><a href="#视点" class="headerlink" title="视点"></a>视点</h2><blockquote><p>“不要从一个正常人的视角来看世界，这样的画面拍出来的和别人看到的没有什么不同，毫无新鲜感可言”<br>：根据情况，记录性质的力求还原</p></blockquote><p>视点：</p><p>站在高处：俯瞰</p><p>站在低处：小的物体被放大 极致的构图视角，代入镜头</p><h2 id="层次"><a href="#层次" class="headerlink" title="层次"></a>层次</h2><p>不同的景深，多个层次：近中远，一般风光摄影最少拉出三个层次感</p><p>近中远使得画面感、大小对比出现了。</p><p>层次感有时候会讲述更多的故事，加深画面的故事感</p><h2 id="简化构图画面"><a href="#简化构图画面" class="headerlink" title="简化构图画面"></a>简化构图画面</h2><h3 id="小景深"><a href="#小景深" class="headerlink" title="小景深"></a>小景深</h3><p>手机的大光圈自动使得背景模糊</p><p>剪影或模糊使得对象不在是一个具体的对象，而是一类物体的代表</p><h3 id="剪影"><a href="#剪影" class="headerlink" title="剪影"></a>剪影</h3><p>轮廓，舍去会得到更多</p><p>优秀的剪影是典型的轮廓可以传达出想要的信息</p><p>考虑哪些线条该要，哪些线条不该要</p><h3 id="纯色背景"><a href="#纯色背景" class="headerlink" title="纯色背景"></a>纯色背景</h3><p>仰头拍摄，蓝色天空就是背景</p><p>华灯初上，最佳拍夜景</p><p>包住要拍摄的东西</p><h3 id="留白"><a href="#留白" class="headerlink" title="留白"></a>留白</h3><p>画留三分白，生气随之发</p><p>大量的留白会有更多的想象空间</p><h1 id="构图进阶：质感和对比的多种表现方法"><a href="#构图进阶：质感和对比的多种表现方法" class="headerlink" title="构图进阶：质感和对比的多种表现方法"></a>构图进阶：质感和对比的多种表现方法</h1><blockquote><p>构图：基于平面或立体的选择为表达的物体加入对比、框架、质感等手段给人视觉的满足甚至惊喜。</p></blockquote><h2 id="立体透视"><a href="#立体透视" class="headerlink" title="立体透视"></a>立体透视</h2><p>立体感要领：拍出近大远小的冲击</p><p>对应的是平面感：正对面垂直拍摄</p><p>不要让画面在立体和平面之间摇摆，这样线条的乱聚使得画面有一种歪了的感觉——要么完全立体感，要么完全平面化</p><p>合理地利用想象摄像头与所摄物体之间的空间关系来构图</p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><h3 id="大小对比"><a href="#大小对比" class="headerlink" title="大小对比"></a>大小对比</h3><p>宏大照片的表达：画面中进入熟悉的小事物烘托主题的表达</p><p>小场景生活细节的表达：用相对大的熟悉的东西来表达“未知”拍摄的对象的小</p><h3 id="动静对比"><a href="#动静对比" class="headerlink" title="动静对比"></a>动静对比</h3><p>委婉地表达想要说的东西：说建筑时不正面表达建筑，通过水</p><p>说水时，不正面看水——含蓄 动态的水与静止的周边</p><p><strong>人物动感的姿态与远处静止</strong>的对比：不稳定的人物姿态能体现出动感<br>一些人像中女子活力、青春便是通过不稳定的动作表现，因为不稳定的动作会表现出上一刻和下一秒的动作，这赋予照片想象的动感</p><h3 id="明暗对比"><a href="#明暗对比" class="headerlink" title="明暗对比"></a>明暗对比</h3><p>需要光线的条件</p><p>明暗对比：黑白分明，画面会显得很有力量，很有精神</p><h3 id="虚实对比"><a href="#虚实对比" class="headerlink" title="虚实对比"></a>虚实对比</h3><p>虚与实：表达出抽象与具象，梦幻感</p><p>模糊表达虚，清楚表达实</p><p>远景是虚的，近景是实的，表达漂亮的画面</p><h2 id="质感"><a href="#质感" class="headerlink" title="质感"></a>质感</h2><p>表达物体的软硬、粗糙程度</p><p>方法：用侧光，针对拍摄的平面物体而言，光线射进来的夹角越小，质感越明显</p><p>利用好光，侧光、平面化画面</p><p>立体感：夸张的质感</p><h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><h3 id="中央"><a href="#中央" class="headerlink" title="中央"></a>中央</h3><p>庄重、霸气、神圣感</p><p>安静、稳定</p><p>简洁的构图</p><h3 id="对称"><a href="#对称" class="headerlink" title="对称"></a>对称</h3><p>合适的位置</p><p>对称中的不对称</p><p>利用平面化构图</p><h3 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h3><p>形状相同、大小类似</p><p>简洁中的细节变化</p><h3 id="突变"><a href="#突变" class="headerlink" title="突变"></a>突变</h3><p>突变是基于重复的，视觉上的惊喜</p><h3 id="框架构图"><a href="#框架构图" class="headerlink" title="框架构图"></a>框架构图</h3><p>平面中圈出的画面</p><h1 id="手机的平面构图"><a href="#手机的平面构图" class="headerlink" title="手机的平面构图"></a>手机的平面构图</h1><h2 id="点"><a href="#点" class="headerlink" title="点"></a>点</h2><p>数量<br>数不清的点，规律的归属，画面的表达</p><p>位置<br>点在正中央，稳定感</p><p>点在偏下处，重、稳定</p><p>点在上处，轻、飘</p><p>分量感<br>一个点与多个点的对比，突出一个点的分量</p><h2 id="线"><a href="#线" class="headerlink" title="线"></a>线</h2><h3 id="直线"><a href="#直线" class="headerlink" title="直线"></a>直线</h3><p>稳定的情感</p><p>约束</p><p>“矛盾本身是趣味的来源”</p><h3 id="斜线"><a href="#斜线" class="headerlink" title="斜线"></a>斜线</h3><p>大量的斜线，运动感、速度感</p><p>甚至不适，用其他线条的构图和明暗的光线的应用去改善</p><p>在拍摄地平线的时候，不要通过倾斜手机去找斜线，应该是通过透视、画面本身的寻找去拍摄出斜线</p><h3 id="折线"><a href="#折线" class="headerlink" title="折线"></a>折线</h3><p>美感</p><p>画面不烦乱，设置一个主体作为前景以及留白</p><h3 id="弧线"><a href="#弧线" class="headerlink" title="弧线"></a>弧线</h3><p>柔软</p><h3 id="曲线"><a href="#曲线" class="headerlink" title="曲线"></a>曲线</h3><p>基于弧线</p><p>曲线让直线更直，直线让曲线更弯曲</p><p>明暗交替的曲线</p><p>建筑物里的曲线使得内容更有生命力</p><h3 id="黄金分割线"><a href="#黄金分割线" class="headerlink" title="黄金分割线"></a>黄金分割线</h3><p>1：0.618/三分线：横竖三分</p><p>将内容靠在三分线处</p><h3 id="引导线"><a href="#引导线" class="headerlink" title="引导线"></a>引导线</h3><p>一条或者多条贯穿画面的线条，引导观察者看向所表达的内容</p><p>指向目标，近大远小</p><p>线条的引导感</p><p>构图原则都是组合使用的</p><h3 id="放射线"><a href="#放射线" class="headerlink" title="放射线"></a>放射线</h3><p>一个点放射</p><p>找到平行线，用准广角站在平行线的一头或另一头就可以有射线汇聚的感觉+近大远小</p><p>从近处往远处考虑的构图感</p><h2 id="面"><a href="#面" class="headerlink" title="面"></a>面</h2><h3 id="圆形"><a href="#圆形" class="headerlink" title="圆形"></a>圆形</h3><blockquote><p>向这些形状靠拢是美的</p></blockquote><p>让大脑少思考，简洁的线条舒服</p><h3 id="三角形"><a href="#三角形" class="headerlink" title="三角形"></a>三角形</h3><p>留意观察无形的三角形</p><h3 id="梯形"><a href="#梯形" class="headerlink" title="梯形"></a>梯形</h3><p>捕捉</p><h3 id="方形"><a href="#方形" class="headerlink" title="方形"></a>方形</h3><p>旋转-&gt;菱形</p><h2 id="色彩"><a href="#色彩" class="headerlink" title="色彩"></a>色彩</h2><h3 id="互补色"><a href="#互补色" class="headerlink" title="互补色"></a>互补色</h3><p>跳跃的色彩搭配感觉</p><h3 id="橙黄绿"><a href="#橙黄绿" class="headerlink" title="橙黄绿"></a>橙黄绿</h3><p>明艳的色彩感</p><h3 id="黄绿"><a href="#黄绿" class="headerlink" title="黄绿"></a>黄绿</h3><p>舒适和谐</p><h3 id="各种绿色"><a href="#各种绿色" class="headerlink" title="各种绿色"></a>各种绿色</h3><p>小清新</p><h3 id="黑白-一点红"><a href="#黑白-一点红" class="headerlink" title="黑白+一点红"></a>黑白+一点红</h3><p>国墨的感觉</p><h3 id="逆光的色彩"><a href="#逆光的色彩" class="headerlink" title="逆光的色彩"></a>逆光的色彩</h3><p>摄影感最强，轮廓</p><p>侧逆光，质感</p><h3 id="散射光"><a href="#散射光" class="headerlink" title="散射光"></a>散射光</h3><p>柔美，真实</p><p>拍女孩</p><p>镜头足够近</p><p>散射光并不激烈，平平淡淡像生活一样</p><h1 id="拍摄软件：前期-amp-后期"><a href="#拍摄软件：前期-amp-后期" class="headerlink" title="拍摄软件：前期&amp;后期"></a>拍摄软件：前期&amp;后期</h1><h2 id="前期："><a href="#前期：" class="headerlink" title="前期："></a>前期：</h2><p>按点对焦，小太阳曝光补偿——很重要</p><p>手机自带软件/应用商店软件：procam，slowshutter慢速快门摄影软件（iPhone）</p><p>手机一般4：3构图</p><h2 id="后期："><a href="#后期：" class="headerlink" title="后期："></a>后期：</h2><h3 id="VSCOcam-高效照片处理软件。模拟胶片色彩效果"><a href="#VSCOcam-高效照片处理软件。模拟胶片色彩效果" class="headerlink" title="VSCOcam 高效照片处理软件。模拟胶片色彩效果"></a>VSCOcam 高效照片处理软件。模拟胶片色彩效果</h3><h3 id="snapseed"><a href="#snapseed" class="headerlink" title="snapseed"></a><strong>snapseed</strong></h3><h4 id="1、调整图片："><a href="#1、调整图片：" class="headerlink" title="1、调整图片："></a>1、调整图片：</h4><p>上下切换调整内容：</p><ul><li>亮度，可以调出直方图</li><li>对比度</li><li>饱和度：饱和度尽量降，不要升过艳</li><li>氛围：对环境光的调整，模糊</li><li>暖色调：色温</li></ul><p>左右滑动调每个内容的大小</p><h4 id="2、突出细节："><a href="#2、突出细节：" class="headerlink" title="2、突出细节："></a>2、突出细节：</h4><ul><li><p>锐化，对线条的调整</p></li><li><p>结构</p></li></ul><h4 id="3、裁剪旋转等功能"><a href="#3、裁剪旋转等功能" class="headerlink" title="3、裁剪旋转等功能"></a>3、裁剪旋转等功能</h4><h4 id="4、局部调整"><a href="#4、局部调整" class="headerlink" title="4、局部调整"></a>4、局部调整</h4><p>加号定好点位–&gt;双指缩放确定影响的范围–&gt;左右移动确定大小，上下移动确定调整内容：对比度、饱和度等</p><h3 id="Union"><a href="#Union" class="headerlink" title="Union"></a>Union</h3><p>制作双重曝光效果的照片</p><h3 id="Levitagram"><a href="#Levitagram" class="headerlink" title="Levitagram"></a>Levitagram</h3><p>制作悬浮照片的后期软件</p><h3 id="Living-Planet"><a href="#Living-Planet" class="headerlink" title="Living Planet"></a>Living Planet</h3><p>制作小星球</p><p>常用的不要超过5个，摄影熟练，少使用</p><h2 id="社交软件"><a href="#社交软件" class="headerlink" title="社交软件"></a>社交软件</h2><h3 id="Instagram"><a href="#Instagram" class="headerlink" title="Instagram"></a>Instagram</h3><p>国际摄影社交，及快速滤镜修片软件</p><h3 id="500px"><a href="#500px" class="headerlink" title="500px"></a>500px</h3><p>国际摄影交流及照片出售社区</p><h1 id="特技、理念"><a href="#特技、理念" class="headerlink" title="特技、理念"></a>特技、理念</h1><h2 id="特技"><a href="#特技" class="headerlink" title="特技"></a>特技</h2><p>1、附加镜头或支架等<br>微距的手机附加镜头</p><p>鱼眼镜头：180</p><p>sony lens</p><p>2、虚焦<br>近处手指辅助</p><p>3、光斑晕染<br>光线</p><p>4、水滴微距<br>小水滴倒挂在镜头拍</p><p>微小的物体的精彩</p><p>5、分身术</p><p>利用全景模式多次扫描人</p><p>有趣的玩法</p><p>6、甩手拍<br>旋转的效果</p><p>7、晃动光涂鸦<br>冲着颜色鲜艳的物体甩动手机</p><p>对频闪的物体拍，梦幻的感觉</p><h2 id="理念"><a href="#理念" class="headerlink" title="理念"></a>理念</h2><h3 id="法无定法"><a href="#法无定法" class="headerlink" title="法无定法"></a>法无定法</h3><h3 id="无后期，不摄影"><a href="#无后期，不摄影" class="headerlink" title="无后期，不摄影"></a>无后期，不摄影</h3><p>不违背现实的情况下，后期使得照片更接近现实</p><h3 id="镜随心转"><a href="#镜随心转" class="headerlink" title="镜随心转"></a>镜随心转</h3><p>照片体现的是拍照者的情感</p><p>“你看到的世界反映你内心的状态”</p><h3 id="摄影私属"><a href="#摄影私属" class="headerlink" title="摄影私属"></a>摄影私属</h3><p>艺术是个人的表达，寻找自己的路</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摄影是一次全新的生命体验&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Life is Changed by Photography&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="生活 阅读" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="摄影" scheme="lider7214.cn/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>线性代数学习与提升</title>
    <link href="lider7214.cn/2020/11/08/013%20%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    <id>lider7214.cn/2020/11/08/013%20%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</id>
    <published>2020-11-08T13:40:13.110Z</published>
    <updated>2020-11-09T06:37:01.571Z</updated>
    
    <content type="html"><![CDATA[<p>线性代数 —— 用形象的几何感知和逻辑的计算方法去解决实际工程中的问题</p><p>更新中…</p><p>Part 1 理解性文章（在总结之后写）</p><p>Part 2 不同渠道的线代学习总结 。。。ing</p><p>Part 3 参考资料</p><a id="more"></a><h1 id="向量-vectors"><a href="#向量-vectors" class="headerlink" title="向量 vectors"></a>向量 vectors</h1><p>线性代数是一门语言，需要从语言的角度理解其中的变换，我们所学习的有几何直观层面的解释和计算方法的应用，几何更重要、计算次之，二者结合起来应用到各个领域解决实际问题。</p><h2 id="What-exactly-a-vector-is"><a href="#What-exactly-a-vector-is" class="headerlink" title="What exactly a vector is"></a>What exactly a vector is</h2><h3 id="向量的表示"><a href="#向量的表示" class="headerlink" title="向量的表示"></a>向量的表示</h3><blockquote><p>物理专业： 箭头<br>数学专业：vector<br>计算机专业：矩阵，ordered list of numbers</p></blockquote><h3 id="向量在坐标系"><a href="#向量在坐标系" class="headerlink" title="向量在坐标系"></a>向量在坐标系</h3><p>vector coordinates</p><h2 id="向量加法和数乘-vector-addition-and-multiplication-by-numbers"><a href="#向量加法和数乘-vector-addition-and-multiplication-by-numbers" class="headerlink" title="向量加法和数乘 vector addition and multiplication by numbers"></a>向量加法和数乘 vector addition and multiplication by numbers</h2><p>i and j are the basis vectors of two scaled vectors<br>坐标是对（i,j）的拉伸</p><h1 id="linear-combination-of-v-and-w线性组合、张成的空间与基"><a href="#linear-combination-of-v-and-w线性组合、张成的空间与基" class="headerlink" title="linear combination of v and w线性组合、张成的空间与基"></a>linear combination of <strong>v</strong> and <strong>w</strong>线性组合、张成的空间与基</h1><h2 id="linear-combination"><a href="#linear-combination" class="headerlink" title="linear combination"></a>linear combination</h2><p>multiplication = scaling</p><h2 id="span"><a href="#span" class="headerlink" title="span"></a>span</h2><p>linearly independent</p><p>linearly dependent</p><h2 id="basis"><a href="#basis" class="headerlink" title="basis"></a>basis</h2><h1 id="linear-transformations-矩阵与线性变换"><a href="#linear-transformations-矩阵与线性变换" class="headerlink" title="linear transformations 矩阵与线性变换"></a>linear transformations 矩阵与线性变换</h1><h1 id="Composition-矩阵乘法与线性变换的复合"><a href="#Composition-矩阵乘法与线性变换的复合" class="headerlink" title="Composition 矩阵乘法与线性变换的复合"></a>Composition 矩阵乘法与线性变换的复合</h1><h1 id="3-D-dimension-三维空间的线性变换"><a href="#3-D-dimension-三维空间的线性变换" class="headerlink" title="3-D dimension 三维空间的线性变换"></a>3-D dimension 三维空间的线性变换</h1><h1 id="The-determinant-行列式"><a href="#The-determinant-行列式" class="headerlink" title="The determinant 行列式"></a>The determinant 行列式</h1><h1 id="linear-system-of-equations，Inverse-matrices、columns-and-null-space-线性方程组，逆矩阵、列空间与零空间"><a href="#linear-system-of-equations，Inverse-matrices、columns-and-null-space-线性方程组，逆矩阵、列空间与零空间" class="headerlink" title="linear system of equations，Inverse matrices、columns and null space 线性方程组，逆矩阵、列空间与零空间"></a>linear system of equations，Inverse matrices、columns and null space 线性方程组，逆矩阵、列空间与零空间</h1><h1 id="特征值与特征向量"><a href="#特征值与特征向量" class="headerlink" title="特征值与特征向量"></a>特征值与特征向量</h1><h1 id="referance-参考资料"><a href="#referance-参考资料" class="headerlink" title="referance 参考资料"></a>referance 参考资料</h1><p><a href="https://www.bilibili.com/video/BV1ys411472E">1 直观理解线代的视频</a></p><p>2 书籍：线性代数及其应用 第五版 美 David C.Lay</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;线性代数 —— 用形象的几何感知和逻辑的计算方法去解决实际工程中的问题&lt;/p&gt;
&lt;p&gt;更新中…&lt;/p&gt;
&lt;p&gt;Part 1 理解性文章（在总结之后写）&lt;/p&gt;
&lt;p&gt;Part 2 不同渠道的线代学习总结 。。。ing&lt;/p&gt;
&lt;p&gt;Part 3 参考资料&lt;/p&gt;</summary>
    
    
    
    <category term="理论 工程技术" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="线性代数" scheme="lider7214.cn/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>如何学习</title>
    <link href="lider7214.cn/2020/11/08/012%20%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%8E%A2%E7%B4%A2/"/>
    <id>lider7214.cn/2020/11/08/012%20%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%8E%A2%E7%B4%A2/</id>
    <published>2020-11-08T13:40:13.108Z</published>
    <updated>2020-11-09T06:35:59.042Z</updated>
    
    <content type="html"><![CDATA[<p>思考高效率学习法，生活也是学习修行的一部分。</p><a id="more"></a><blockquote><p>时间线更新： 2020/5/17 创建文章</p></blockquote><h1 id="打磨自己的学习规律，变得优秀"><a href="#打磨自己的学习规律，变得优秀" class="headerlink" title="打磨自己的学习规律，变得优秀"></a>打磨自己的学习规律，变得优秀</h1><h2 id="状态最重要"><a href="#状态最重要" class="headerlink" title="状态最重要"></a>状态最重要</h2><p>“组织纪律”，有一个积极的备考状态，随时准备着的感觉！</p><h2 id="成绩-时间-效率"><a href="#成绩-时间-效率" class="headerlink" title="成绩=时间*效率"></a>成绩=时间*效率</h2><h3 id="for-时间："><a href="#for-时间：" class="headerlink" title="for 时间："></a>for 时间：</h3><p>（1）每天要写一个<strong>To-do List</strong>，把要做的事情一个个写下来，<br>1）先做难的事情；<br>2）尤其要把琐事写在清单上，清空大脑。趁休息的时候或者缝隙时间把琐事消灭。<br>3）安排成2–3小时的板块，每个板块之间一定要休息</p><p>（休息：学习科目的转换；<br>运动，仰卧起坐或俯卧撑；<br>看窗外的风景；<br>吃好吃的；<br>打盹儿15-20分钟）</p><p>（2）生活方式</p><p>1）每天的运动时间：健康规律的饮食和必需的睡眠时间</p><p>2）通过<strong>流程化</strong>提高生产效率，制定长短适宜的任务计划</p><p>3）弹性学习：平时规律，考前突击，互补随机应变。</p><h3 id="for-效率："><a href="#for-效率：" class="headerlink" title="for 效率："></a>for 效率：</h3><p>（1）高效的记忆法<br>（根据实际投入实际灵活合并步骤）<br>1：看第一遍理解大体内容；<br>2：看第二遍归纳总结，理清逻辑关系画出重点；<br>3：看第三遍想象脑子里有一个文档，将内容输进去；<br>“时间充裕123分开执行，时间紧张123一遍过”<br>4：回忆；<br>5：检查，将脑子里的书和实际的内容印证；<br>6：重复背诵，一次一个部分，直到完成计划；<br>7：回忆（当天学习内容）<br>8：承上启下，联系今天的和之前的学习内容；<br>9：检查，每天快速脑子过一遍昨天背的内容，空隙时间（等公交/睡觉前/洗漱等等）</p><p>P.S.<br>1） 将学习内容按照逻辑关系分解，详细、有条理&gt;&gt;然后开始背诵，先背<strong>框架后填充细节</strong>；<br>2）加入感官、图片等联想帮助记忆；<br>3）记忆知识和知识的整理归纳必须独立完成，可这些内容的前后阶段可以适当与老师、同学、网络等沟通；</p><p>（2）我为什么要这样做？</p><p>提高效率的最好办法是找到动力，可以设置自己的短期长期<strong>奖励机制</strong>；</p><p>计划非常重要： 好的规划事半功倍</p><p>（3）开始之前的准备</p><p>杜绝电子产品的干扰；</p><p>安静的学习氛围；（可以有帮助学习的音乐）</p><p>舒服的桌面（不让自己分心）；</p><p>穿舒服的衣服；</p><p>如果在公共场所学习，东西一定要拿够；</p><p>洗澡洗头，<strong>全身舒服来全神贯注投入</strong>。</p><h2 id="高效应试"><a href="#高效应试" class="headerlink" title="高效应试"></a>高效应试</h2><h3 id="针对性"><a href="#针对性" class="headerlink" title="针对性"></a>针对性</h3><p>（1）考试复习，先尽最大可能了解出题老师、考试范围和考试形式，多做针对性的思考；</p><p>（2）地毯式复习：仔细复习每一个知识点，一个不落下过一遍知识点；</p><p>（3）之后针对重点复习，根据以往考试猜题、巩固复习等等</p><p>P.S. 关于练习题的意义：做题是用来测试你记住了多少内容，在题目中的知识是没有组织的碎片，少量可以拼接，多了会混乱。所以，题海战术是建立在地毯式学习的基础上为查漏补缺提升自我的人准备。</p><p>而在学习的每一阶段要洞察到自己的能力所在，采取合适的策略方有事倍功半之效。</p><h3 id="just-do-it"><a href="#just-do-it" class="headerlink" title="just do it"></a>just do it</h3><p>纸上得来终觉浅，绝知此事要躬行。</p><p>自己亲身体会才能明白其中细节的发力点和如何进行，别人给的是方向的指引。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;思考高效率学习法，生活也是学习修行的一部分。&lt;/p&gt;</summary>
    
    
    
    <category term="生活 阅读" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="学习方法" scheme="lider7214.cn/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>身体训练思考手册</title>
    <link href="lider7214.cn/2020/11/08/010%20%E8%BA%AB%E4%BD%93%E8%AE%AD%E7%BB%83%E6%80%9D%E8%80%83%E6%89%8B%E5%86%8C/"/>
    <id>lider7214.cn/2020/11/08/010%20%E8%BA%AB%E4%BD%93%E8%AE%AD%E7%BB%83%E6%80%9D%E8%80%83%E6%89%8B%E5%86%8C/</id>
    <published>2020-11-08T13:40:13.106Z</published>
    <updated>2020-11-09T06:31:57.850Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;身体是一切的根本，在我看来，训练身体包括意识心理和体能两方面的锻炼。二者相辅相成，共同发展成就一个健康的个体。</p><a id="more"></a><blockquote><p>时间线更新： 2020/5/17 力量耐力训练体系/拉伸/热身</p></blockquote><p>意识心理今天暂且不说，目前学习重心在体能锻炼的理论模块：</p><h3 id="一、总计划20周，四个阶段"><a href="#一、总计划20周，四个阶段" class="headerlink" title="一、总计划20周，四个阶段"></a>一、总计划20周，四个阶段</h3><p>目前是第一阶段计划开展为期八周的力量耐力训练</p><h3 id="二、训练包含四大块：拉伸、热身、关节力量训练和体能动作训练，其中拉伸包括静态和动态拉伸。流程如下：静态拉伸-–-gt-慢跑热身-–-gt-关节力量训练-–-gt-动态拉伸或体能动作训练。"><a href="#二、训练包含四大块：拉伸、热身、关节力量训练和体能动作训练，其中拉伸包括静态和动态拉伸。流程如下：静态拉伸-–-gt-慢跑热身-–-gt-关节力量训练-–-gt-动态拉伸或体能动作训练。" class="headerlink" title="二、训练包含四大块：拉伸、热身、关节力量训练和体能动作训练，其中拉伸包括静态和动态拉伸。流程如下：静态拉伸 –&gt; 慢跑热身 –&gt; 关节力量训练 –&gt; 动态拉伸或体能动作训练。"></a>二、训练包含四大块：拉伸、热身、关节力量训练和体能动作训练，其中拉伸包括静态和动态拉伸。流程如下：静态拉伸 –&gt; 慢跑热身 –&gt; 关节力量训练 –&gt; 动态拉伸或体能动作训练。</h3><h3 id="三、拉伸学习："><a href="#三、拉伸学习：" class="headerlink" title="三、拉伸学习："></a>三、拉伸学习：</h3><p>指静态拉伸，有13块内容，总结一个口诀：</p><p>胸背棘，三角肱，小臂腹。臀腘髂，股腓鱼。（采用谐音记忆法）</p><p>躯干上部7个动作，下部6个。<br>胸部肌肉/背阔肌/竖棘肌/三角肌中后束/三角肌前束和肱二头肌/小臂肌肉群/腹部肌肉群；臀大肌/腘肌/髂肌/股四头肌/腓肠肌/比目鱼肌</p><p>另外再提一句，在自学健身理论时，多了解一些解剖学的知识，对意念的观想动作的学习有极大好处。</p><h3 id="四、慢跑学习："><a href="#四、慢跑学习：" class="headerlink" title="四、慢跑学习："></a>四、慢跑学习：</h3><p>慢跑是个技术活，需要知道呼吸、手臂、身体上部、膝盖、脚掌、大腿每个地方应该起到的作用，以及整体的协调自然。</p><p>要领如下：<br>身体直立微前倾，<br>双眼平视前下方，<br>双手夹直向前摆，<br>膝前顶，（小）腿下摆，<br>全脚掌着地。<br>鼻为主口为辅，自然顺畅为原则。</p><h3 id="五、基础体能计划"><a href="#五、基础体能计划" class="headerlink" title="五、基础体能计划"></a>五、基础体能计划</h3><p>前八周训练表<br>|周一|心肌耐力|稳定性+肌耐力|<br>|周二|       |           |<br>|周三|心肌耐力|稳定性+肌耐力|<br>|周四|        |            |<br>|周五|心肌耐力|技术动作|</p><h4 id="1、心肌耐力"><a href="#1、心肌耐力" class="headerlink" title="1、心肌耐力"></a>1、心肌耐力</h4><h4 id="2、肌耐力"><a href="#2、肌耐力" class="headerlink" title="2、肌耐力"></a>2、肌耐力</h4><p>动作组合1：猫爬+平地金刚+侧猴子</p><p>动作组合2：挂墙走+大俯卧撑+小俯卧撑+V字肩外展</p><p>动作组合3：单腿深蹲+单腿剪蹲+脚尖跳</p><h4 id="3、技术动作"><a href="#3、技术动作" class="headerlink" title="3、技术动作"></a>3、技术动作</h4><p>顶点+猫挂+下墙+猴跳</p><p>下台+侧跃+懒人跳</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;身体是一切的根本，在我看来，训练身体包括意识心理和体能两方面的锻炼。二者相辅相成，共同发展成就一个健康的个体。&lt;/p&gt;</summary>
    
    
    
    <category term="生活 阅读" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="体能锻炼" scheme="lider7214.cn/tags/%E4%BD%93%E8%83%BD%E9%94%BB%E7%82%BC/"/>
    
  </entry>
  
  <entry>
    <title>应用统计学</title>
    <link href="lider7214.cn/2020/11/08/040%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E5%BA%94%E7%94%A8%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    <id>lider7214.cn/2020/11/08/040%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E5%BA%94%E7%94%A8%E7%BB%9F%E8%AE%A1%E5%AD%A6/</id>
    <published>2020-11-08T13:40:13.092Z</published>
    <updated>2020-11-09T06:47:12.966Z</updated>
    
    <content type="html"><![CDATA[<p>统天下，计未来。</p><p>工程建设中的科学管理法，涉及资料的整合、利用等</p><a id="more"></a><h1 id="第一章-统计、数据和计算机"><a href="#第一章-统计、数据和计算机" class="headerlink" title="第一章 统计、数据和计算机"></a>第一章 统计、数据和计算机</h1><blockquote><p>统计思维总有一天会像读与写一样成为一个有效率公民必备的能力。<br> —— H.G.Wells</p></blockquote><h2 id="1-统计及其领域"><a href="#1-统计及其领域" class="headerlink" title="1 统计及其领域"></a>1 统计及其领域</h2><h3 id="1-1-统计研究什么"><a href="#1-1-统计研究什么" class="headerlink" title="1.1 统计研究什么"></a>1.1 统计研究什么</h3><p>统计研究的是来自各个领域的数据，提供的是一套通用于所有科学领域的获取数据、分析数据并从中得出结论的原则和方法。</p><h3 id="1-2-统计的应用"><a href="#1-2-统计的应用" class="headerlink" title="1.2 统计的应用"></a>1.2 统计的应用</h3><p>数据分析真正的目的是从数据中找出结论，从数据中寻找启发，而不是寻找支持，真正的数据分析事先是没有结论的，通过对数据的分析才得出结论。</p><h2 id="2-怎样获得统计数据"><a href="#2-怎样获得统计数据" class="headerlink" title="2 怎样获得统计数据"></a>2 怎样获得统计数据</h2><h3 id="2-1-变量与数据"><a href="#2-1-变量与数据" class="headerlink" title="2.1 变量与数据"></a>2.1 变量与数据</h3><p>变量：观察到的事件可能的结果<br>数据： 把观察到的数据记录下来就是数据</p><p><strong>数值变量（定量变量）:用数字记录观察其结果，记录下来的结果叫做数值型数据或者定量数据</strong></p><p><strong>取值为事物的属性或者类别，以及区间值的变量称为类别变量，也叫做属性变量/定性变量/分类变量，记录下来的数据叫做类别数据，也称为定性数据或属性数据或分类数据</strong></p><blockquote><p>类别变量按照取值情况分为3种：二值类别变量，顺序值类别变量和名义值类别变量。</p></blockquote><h3 id="2-2-数据的来源"><a href="#2-2-数据的来源" class="headerlink" title="2.2 数据的来源"></a>2.2 数据的来源</h3><p>从那里获得数据呢：</p><p>1） 已有的数据：公开出版报道的，管理部门的，网络资源等等</p><p>2）亲自调查：概率抽样，有<br>简单随机抽样</p><p>分层抽样</p><p>系统抽样</p><p>整群抽样</p><h2 id="3-统计与计算机"><a href="#3-统计与计算机" class="headerlink" title="3 统计与计算机"></a>3 统计与计算机</h2><p>SAS statistical Analysis System</p><p><strong>SPSS</strong> Statistical Product and Service Solutions</p><p>Eviews</p><p>S-PLUS</p><p>MINITAB</p><p><strong>Excel</strong></p><h1 id="第二章-用图表展示数据"><a href="#第二章-用图表展示数据" class="headerlink" title="第二章 用图表展示数据"></a>第二章 用图表展示数据</h1><blockquote><p>图没有说谎，是说谎者在画图。</p></blockquote><h1 id="第三章-用统计量描述数据"><a href="#第三章-用统计量描述数据" class="headerlink" title="第三章 用统计量描述数据"></a>第三章 用统计量描述数据</h1><blockquote><p>一些人使用统计就像喝醉酒的人使用街灯柱——支撑的功能多于照明。</p></blockquote><h1 id="第四章-概率分布"><a href="#第四章-概率分布" class="headerlink" title="第四章 概率分布"></a>第四章 概率分布</h1><blockquote><p>数学定律不能百分之百确切地用在现实生活里；能百分之百确切地用数学定律描述的，就不是现实生活。</p></blockquote><h1 id="第五章-参数估计"><a href="#第五章-参数估计" class="headerlink" title="第五章 参数估计"></a>第五章 参数估计</h1><blockquote><p>不像其他学科，统计从来不打算使自己完美无缺，统计意味着你永远不需要确定无疑。</p></blockquote><p>用一小部分单位指标去估计总体的参数：点估计和区间估计</p><h2 id="点估计法"><a href="#点估计法" class="headerlink" title="点估计法"></a>点估计法</h2><h3 id="矩估计"><a href="#矩估计" class="headerlink" title="矩估计"></a>矩估计</h3><p>样本矩反映总体矩（样本矩依据概率收敛于总体矩）</p><h3 id="顺序统计量法"><a href="#顺序统计量法" class="headerlink" title="顺序统计量法"></a>顺序统计量法</h3><p>将正态分布样本由大到小排列，用样本中位数估计总体数学期望，用极差估计总体标准差</p><p>一般适用于正态总体或总体呈现连续且分布密度对称时</p><h3 id="最大似然法"><a href="#最大似然法" class="headerlink" title="最大似然法"></a>最大似然法</h3><p>已知总体分布特征，利用样本通过迭代的方法估计这一特征的参数，直到估计出来的参数与总体数据特征吻合</p><h3 id="衡量估计量的优劣"><a href="#衡量估计量的优劣" class="headerlink" title="衡量估计量的优劣"></a>衡量估计量的优劣</h3><p>（1）无偏性<br>期望和方差<br>（2）有效性<br>方差小者更有效<br>（3）一致性<br>极限的概念</p><h2 id="区间估计"><a href="#区间估计" class="headerlink" title="区间估计"></a>区间估计</h2><p>解决问题：构造并分析出未知参数在与样本有关的区间的概率<br>随机区间通过双侧百分位数确定</p><p>上述的概率又叫做置信度</p><p>分类：</p><p>（1）估计正态总体的平均值</p><p>a：方差已知，正态分布<br>b：方差未知，t分布</p><p>（2）估计正态总体方差的置信区间</p><p>卡方分布</p><p>（3）比较两正态总体</p><h2 id="确定样本容量n"><a href="#确定样本容量n" class="headerlink" title="确定样本容量n"></a>确定样本容量n</h2><p>确定能满足精度的最小样本容量</p><h1 id="第六章-假设检验"><a href="#第六章-假设检验" class="headerlink" title="第六章 假设检验"></a>第六章 假设检验</h1><blockquote><p>…正如一个法庭宣告某一判决为“无罪”而不为“清白”，统计检验的结论也应为“不拒绝”而不为“接受”。</p></blockquote><h1 id="第七章-类别分析"><a href="#第七章-类别分析" class="headerlink" title="第七章 类别分析"></a>第七章 类别分析</h1><blockquote><p>我们是无知的，所以让我们学习吧！</p></blockquote><h1 id="第八章-相关与回归分析"><a href="#第八章-相关与回归分析" class="headerlink" title="第八章 相关与回归分析"></a>第八章 相关与回归分析</h1><blockquote><p>好的模型选择可遵循一个称为奥克姆剃刀（Occam’s Razor）的基本原理：最好的科学模型往往最简单，且能解释所观察到的事实。</p></blockquote><h1 id="第九章-时间序列预测"><a href="#第九章-时间序列预测" class="headerlink" title="第九章 时间序列预测"></a>第九章 时间序列预测</h1><blockquote><p>未来是不可预测的，不管人们掌握多少信息，都不可能存在能做出正确决策的系统方法。</p></blockquote><h1 id="第十章-指数"><a href="#第十章-指数" class="headerlink" title="第十章 指数"></a>第十章 指数</h1><blockquote><p>数字不会说谎，但说谎的人会想出办法。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;统天下，计未来。&lt;/p&gt;
&lt;p&gt;工程建设中的科学管理法，涉及资料的整合、利用等&lt;/p&gt;</summary>
    
    
    
    <category term="理论 工程技术" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="数学 概率论与数理统计" scheme="lider7214.cn/tags/%E6%95%B0%E5%AD%A6-%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>房屋建筑学</title>
    <link href="lider7214.cn/2020/11/08/039%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E6%88%BF%E5%B1%8B%E5%BB%BA%E7%AD%91%E5%AD%A6/"/>
    <id>lider7214.cn/2020/11/08/039%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E6%88%BF%E5%B1%8B%E5%BB%BA%E7%AD%91%E5%AD%A6/</id>
    <published>2020-11-08T13:40:13.090Z</published>
    <updated>2020-11-09T06:46:16.617Z</updated>
    
    <content type="html"><![CDATA[<p>在我看来，房屋建筑学就是工程管理中工程二字的概论课，其对工程技术的应用做了一个整体的描述。</p><a id="more"></a><h1 id="建筑设计"><a href="#建筑设计" class="headerlink" title="建筑设计"></a>建筑设计</h1><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="建筑发展概况"><a href="#建筑发展概况" class="headerlink" title="建筑发展概况"></a>建筑发展概况</h3><p>国外建筑发展概况</p><p>中国古建筑发展状况</p><p>中国近现代建筑发展概况</p><h3 id="建筑的构成要素与建筑方针"><a href="#建筑的构成要素与建筑方针" class="headerlink" title="建筑的构成要素与建筑方针"></a>建筑的构成要素与建筑方针</h3><p>建筑的构成要素</p><p>建筑方针</p><h3 id="建筑的分类和分级"><a href="#建筑的分类和分级" class="headerlink" title="建筑的分类和分级"></a>建筑的分类和分级</h3><p>建筑的分类</p><p>民用建筑使用年限与耐火等级</p><h3 id="建筑设计的内容和程序"><a href="#建筑设计的内容和程序" class="headerlink" title="建筑设计的内容和程序"></a>建筑设计的内容和程序</h3><p>建筑设计的内容</p><p>建筑设计的程序</p><h3 id="建筑设计的要求和依据"><a href="#建筑设计的要求和依据" class="headerlink" title="建筑设计的要求和依据"></a>建筑设计的要求和依据</h3><p>建筑设计的要求</p><p>建筑设计的依据：使用功能/自然条件/建筑设计标准、规范、规程/建筑模数</p><p>结构与建筑的关系概述</p><h3 id="结构与建筑的关系概述"><a href="#结构与建筑的关系概述" class="headerlink" title="结构与建筑的关系概述"></a>结构与建筑的关系概述</h3><h2 id="建筑总平面设计"><a href="#建筑总平面设计" class="headerlink" title="建筑总平面设计"></a>建筑总平面设计</h2><h3 id="建筑总平面设计的内容及要求"><a href="#建筑总平面设计的内容及要求" class="headerlink" title="建筑总平面设计的内容及要求"></a>建筑总平面设计的内容及要求</h3><p>建筑总平面设计的内容</p><p>建筑总平面设计的基本要求</p><p>建筑总平面设计与城市规划的关系</p><h3 id="建筑总平面设计的基本原理"><a href="#建筑总平面设计的基本原理" class="headerlink" title="建筑总平面设计的基本原理"></a>建筑总平面设计的基本原理</h3><p>使用功能要求</p><p>建设地区的条件要求</p><p>建筑的组合安排：<br>建筑体形与用地的关系<br>建筑朝向<br>建筑间距<br>布置方式<br>建筑群体的艺术处理</p><h3 id="道路交通及绿化布置"><a href="#道路交通及绿化布置" class="headerlink" title="道路交通及绿化布置"></a>道路交通及绿化布置</h3><p>道路布置：<br>道路布置的基本要求<br>场地道路的组织</p><p>场地停车系统的组织</p><p>绿地的基本形式</p><p>绿地的规模</p><h2 id="建筑平面设计"><a href="#建筑平面设计" class="headerlink" title="建筑平面设计"></a>建筑平面设计</h2><h3 id="建筑的空间组成与平面设计的任务"><a href="#建筑的空间组成与平面设计的任务" class="headerlink" title="建筑的空间组成与平面设计的任务"></a>建筑的空间组成与平面设计的任务</h3><p>建筑的空间组成</p><p>建筑平面设计的任务</p><h3 id="主要使用房间平面设计"><a href="#主要使用房间平面设计" class="headerlink" title="主要使用房间平面设计"></a>主要使用房间平面设计</h3><p>房间面积的确定</p><p>房间平面形状的确定</p><p>房间大小尺寸的确定</p><p>房间中门的设置</p><p>房间中窗的设置</p><h3 id="辅助使用房间平面设计"><a href="#辅助使用房间平面设计" class="headerlink" title="辅助使用房间平面设计"></a>辅助使用房间平面设计</h3><p>厕所</p><p>浴室、盥洗室</p><p>厨房</p><h3 id="交通联系空间平面设计"><a href="#交通联系空间平面设计" class="headerlink" title="交通联系空间平面设计"></a>交通联系空间平面设计</h3><p>走廊</p><p>楼梯</p><p>电梯</p><p>门厅</p><h3 id="建筑平面组合设计"><a href="#建筑平面组合设计" class="headerlink" title="建筑平面组合设计"></a>建筑平面组合设计</h3><p>影响平面组合设计的因素：<br>使用功能，结构类型，设备管线，建筑造型</p><p>平面组合形式<br>：走廊式组合<br>套间式组合<br>大厅式组合<br>单元式组合<br>混合式组合</p><h2 id="建筑剖面设计"><a href="#建筑剖面设计" class="headerlink" title="建筑剖面设计"></a>建筑剖面设计</h2><h3 id="房间的剖面形状"><a href="#房间的剖面形状" class="headerlink" title="房间的剖面形状"></a>房间的剖面形状</h3><p>房间的使用要求<br>：视线、音质</p><p>建筑结构、材料及施工要求</p><p>室内采光和通风要求</p><h3 id="房屋各部分高度的确定"><a href="#房屋各部分高度的确定" class="headerlink" title="房屋各部分高度的确定"></a>房屋各部分高度的确定</h3><p>净高和层高<br>：房间的使用性质及家具设备的要求、<br>采光和通风要求、<br>结构层高度及其构造方式的要求、<br>建筑经济性要求、<br>室内空间比例要求</p><p>窗台高度</p><p>室内外地面高差</p><p>门厅高度处理</p><p>建筑高度</p><h3 id="房屋层数的确定"><a href="#房屋层数的确定" class="headerlink" title="房屋层数的确定"></a>房屋层数的确定</h3><p>使用要求</p><p>基地环境和城市规划要求</p><p>建筑结构、材料和施工要求</p><p>建筑防火要求</p><p>建筑经济性要求</p><h3 id="建筑空间的剖面组合与利用"><a href="#建筑空间的剖面组合与利用" class="headerlink" title="建筑空间的剖面组合与利用"></a>建筑空间的剖面组合与利用</h3><p>建筑空间的剖面组合原则</p><p>剖面组合规律</p><p>建筑空间的利用</p><h2 id="建筑体型和立面设计"><a href="#建筑体型和立面设计" class="headerlink" title="建筑体型和立面设计"></a>建筑体型和立面设计</h2><h3 id="建筑体型和立面设计要求"><a href="#建筑体型和立面设计要求" class="headerlink" title="建筑体型和立面设计要求"></a>建筑体型和立面设计要求</h3><h3 id="建筑构图原理要点"><a href="#建筑构图原理要点" class="headerlink" title="建筑构图原理要点"></a>建筑构图原理要点</h3><p>简单的几何形体求统一</p><p>主从分明，重点突出</p><p>均衡与稳定</p><p>对比与微差</p><p>韵律与节奏</p><p>比例与尺度</p><h3 id="建筑体型设计"><a href="#建筑体型设计" class="headerlink" title="建筑体型设计"></a>建筑体型设计</h3><p>体型组合主要类型</p><p>体型转折与转角处理</p><p>体型的联系与交接</p><h3 id="建筑立面设计"><a href="#建筑立面设计" class="headerlink" title="建筑立面设计"></a>建筑立面设计</h3><h2 id="工业建筑设计"><a href="#工业建筑设计" class="headerlink" title="工业建筑设计"></a>工业建筑设计</h2><h2 id="多层建筑工业设计"><a href="#多层建筑工业设计" class="headerlink" title="多层建筑工业设计"></a>多层建筑工业设计</h2><h1 id="建筑构造"><a href="#建筑构造" class="headerlink" title="建筑构造"></a>建筑构造</h1><h2 id="建筑构造概述"><a href="#建筑构造概述" class="headerlink" title="建筑构造概述"></a>建筑构造概述</h2><h3 id="建筑构造的研究对象与方法"><a href="#建筑构造的研究对象与方法" class="headerlink" title="建筑构造的研究对象与方法"></a>建筑构造的研究对象与方法</h3><h3 id="建筑物的组成构件"><a href="#建筑物的组成构件" class="headerlink" title="建筑物的组成构件"></a>建筑物的组成构件</h3><p>基础<br>墙<br>楼地层<br>屋顶<br>楼梯<br>门与窗</p><h3 id="影响建筑构造的因素"><a href="#影响建筑构造的因素" class="headerlink" title="影响建筑构造的因素"></a>影响建筑构造的因素</h3><p>自然因素和人为因素的影响</p><p>荷载和地震的影响</p><p>物质技术条件的影响</p><p>经济条件的影响</p><h3 id="建筑构造设计原则"><a href="#建筑构造设计原则" class="headerlink" title="建筑构造设计原则"></a>建筑构造设计原则</h3><h2 id="建筑物理环境基础"><a href="#建筑物理环境基础" class="headerlink" title="建筑物理环境基础"></a>建筑物理环境基础</h2><h3 id="建筑热环境"><a href="#建筑热环境" class="headerlink" title="建筑热环境"></a>建筑热环境</h3><p>热环境基础</p><p>保温设计</p><p>防热设计</p><p>太阳能在建筑中应用</p><h3 id="建筑光环境"><a href="#建筑光环境" class="headerlink" title="建筑光环境"></a>建筑光环境</h3><p>采光设计标准</p><p>采光设计</p><p>采光窗口面积的确定</p><h3 id="建筑声环境"><a href="#建筑声环境" class="headerlink" title="建筑声环境"></a>建筑声环境</h3><p>建筑吸声</p><p>噪声控制</p><p>室内音质设计</p><h3 id="建筑空气质量"><a href="#建筑空气质量" class="headerlink" title="建筑空气质量"></a>建筑空气质量</h3><h3 id="绿色建筑概论"><a href="#绿色建筑概论" class="headerlink" title="绿色建筑概论"></a>绿色建筑概论</h3><h2 id="基础与地下室"><a href="#基础与地下室" class="headerlink" title="基础与地下室"></a>基础与地下室</h2><h3 id="地基与基础"><a href="#地基与基础" class="headerlink" title="地基与基础"></a>地基与基础</h3><p>天然地基与人工地基</p><p>基础的埋置深度</p><h3 id="基础的设计要求"><a href="#基础的设计要求" class="headerlink" title="基础的设计要求"></a>基础的设计要求</h3><h3 id="基础的类型"><a href="#基础的类型" class="headerlink" title="基础的类型"></a>基础的类型</h3><p>按基础类型</p><p>按基础的材料及受力来划分</p><p>按基础的深浅划分</p><h3 id="地下室防水构造"><a href="#地下室防水构造" class="headerlink" title="地下室防水构造"></a>地下室防水构造</h3><p>地下室防水等级和设防要求</p><p>地下室的防水措施</p><h2 id="墙体"><a href="#墙体" class="headerlink" title="墙体"></a>墙体</h2><h3 id="墙体概述"><a href="#墙体概述" class="headerlink" title="墙体概述"></a>墙体概述</h3><p>作用</p><p>类型</p><p>设计要求</p><h3 id="砌体墙"><a href="#砌体墙" class="headerlink" title="砌体墙"></a>砌体墙</h3><p>砖墙</p><p>砌块墙</p><h3 id="幕墙"><a href="#幕墙" class="headerlink" title="幕墙"></a>幕墙</h3><h3 id="隔墙与隔断"><a href="#隔墙与隔断" class="headerlink" title="隔墙与隔断"></a>隔墙与隔断</h3><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><h2 id="楼层与地坪"><a href="#楼层与地坪" class="headerlink" title="楼层与地坪"></a>楼层与地坪</h2><h3 id="楼层板构造"><a href="#楼层板构造" class="headerlink" title="楼层板构造"></a>楼层板构造</h3><p>概述<br>钢筋混凝土楼板</p><h3 id="地坪构造"><a href="#地坪构造" class="headerlink" title="地坪构造"></a>地坪构造</h3><p>地坪的组成</p><p>地坪的设计要求</p><p>地坪的类型</p><h3 id="楼地面防水构造"><a href="#楼地面防水构造" class="headerlink" title="楼地面防水构造"></a>楼地面防水构造</h3><h3 id="阳台与雨篷"><a href="#阳台与雨篷" class="headerlink" title="阳台与雨篷"></a>阳台与雨篷</h3><p>阳台</p><p>雨篷</p><h2 id="楼梯与电梯"><a href="#楼梯与电梯" class="headerlink" title="楼梯与电梯"></a>楼梯与电梯</h2><h3 id="楼梯的组成和尺度"><a href="#楼梯的组成和尺度" class="headerlink" title="楼梯的组成和尺度"></a>楼梯的组成和尺度</h3><p>组成</p><p>尺度</p><h3 id="钢筋混凝土楼梯构造"><a href="#钢筋混凝土楼梯构造" class="headerlink" title="钢筋混凝土楼梯构造"></a>钢筋混凝土楼梯构造</h3><p>现浇</p><p>预制</p><p>楼梯的细部构造</p><h3 id="台阶与坡道构造"><a href="#台阶与坡道构造" class="headerlink" title="台阶与坡道构造"></a>台阶与坡道构造</h3><p>台阶</p><p>坡道</p><h3 id="电梯与自动楼梯"><a href="#电梯与自动楼梯" class="headerlink" title="电梯与自动楼梯"></a>电梯与自动楼梯</h3><h3 id="无障碍设计简介"><a href="#无障碍设计简介" class="headerlink" title="无障碍设计简介"></a>无障碍设计简介</h3><h2 id="屋顶"><a href="#屋顶" class="headerlink" title="屋顶"></a>屋顶</h2><h3 id="平屋顶"><a href="#平屋顶" class="headerlink" title="平屋顶"></a>平屋顶</h3><h3 id="屋面防水构造"><a href="#屋面防水构造" class="headerlink" title="屋面防水构造"></a>屋面防水构造</h3><p>防水等级和设防要求</p><p>刚性防水屋面</p><p>卷材防水屋面</p><p>涂膜防水屋面</p><h3 id="屋面保温构造"><a href="#屋面保温构造" class="headerlink" title="屋面保温构造"></a>屋面保温构造</h3><h3 id="屋面隔热构造"><a href="#屋面隔热构造" class="headerlink" title="屋面隔热构造"></a>屋面隔热构造</h3><h3 id="坡屋顶"><a href="#坡屋顶" class="headerlink" title="坡屋顶"></a>坡屋顶</h3><h2 id="门与窗"><a href="#门与窗" class="headerlink" title="门与窗"></a>门与窗</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h3 id="铝合金及塑钢门窗"><a href="#铝合金及塑钢门窗" class="headerlink" title="铝合金及塑钢门窗"></a>铝合金及塑钢门窗</h3><h3 id="木门的构造"><a href="#木门的构造" class="headerlink" title="木门的构造"></a>木门的构造</h3><h3 id="特殊门窗"><a href="#特殊门窗" class="headerlink" title="特殊门窗"></a>特殊门窗</h3><h3 id="建筑遮阳"><a href="#建筑遮阳" class="headerlink" title="建筑遮阳"></a>建筑遮阳</h3><h2 id="变形缝"><a href="#变形缝" class="headerlink" title="变形缝"></a>变形缝</h2><h3 id="伸缩缝的设置条件及要求"><a href="#伸缩缝的设置条件及要求" class="headerlink" title="伸缩缝的设置条件及要求"></a>伸缩缝的设置条件及要求</h3><h3 id="沉降缝的设置条件及要求"><a href="#沉降缝的设置条件及要求" class="headerlink" title="沉降缝的设置条件及要求"></a>沉降缝的设置条件及要求</h3><h3 id="防震缝的设置条件及要求"><a href="#防震缝的设置条件及要求" class="headerlink" title="防震缝的设置条件及要求"></a>防震缝的设置条件及要求</h3><h3 id="变形缝处的结构处理"><a href="#变形缝处的结构处理" class="headerlink" title="变形缝处的结构处理"></a>变形缝处的结构处理</h3><h3 id="变形缝的盖缝构造"><a href="#变形缝的盖缝构造" class="headerlink" title="变形缝的盖缝构造"></a>变形缝的盖缝构造</h3><p>墙体变形缝构造</p><p>楼地板变形缝构造</p><p>屋顶变形缝构造</p><h2 id="建筑饰面"><a href="#建筑饰面" class="headerlink" title="建筑饰面"></a>建筑饰面</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><h3 id="墙体饰面"><a href="#墙体饰面" class="headerlink" title="墙体饰面"></a>墙体饰面</h3><h3 id="楼地面饰面"><a href="#楼地面饰面" class="headerlink" title="楼地面饰面"></a>楼地面饰面</h3><h3 id="顶棚饰面"><a href="#顶棚饰面" class="headerlink" title="顶棚饰面"></a>顶棚饰面</h3><h2 id="建筑隔声"><a href="#建筑隔声" class="headerlink" title="建筑隔声"></a>建筑隔声</h2><h3 id="墙体隔声构造"><a href="#墙体隔声构造" class="headerlink" title="墙体隔声构造"></a>墙体隔声构造</h3><h3 id="楼板隔声构造"><a href="#楼板隔声构造" class="headerlink" title="楼板隔声构造"></a>楼板隔声构造</h3><h3 id="顶棚吸声构造"><a href="#顶棚吸声构造" class="headerlink" title="顶棚吸声构造"></a>顶棚吸声构造</h3><h3 id="门窗隔声构造"><a href="#门窗隔声构造" class="headerlink" title="门窗隔声构造"></a>门窗隔声构造</h3><h2 id="民用建筑工业化"><a href="#民用建筑工业化" class="headerlink" title="民用建筑工业化"></a>民用建筑工业化</h2><h2 id="工业建筑构造"><a href="#工业建筑构造" class="headerlink" title="工业建筑构造"></a>工业建筑构造</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;在我看来，房屋建筑学就是工程管理中工程二字的概论课，其对工程技术的应用做了一个整体的描述。&lt;/p&gt;</summary>
    
    
    
    <category term="理论 工程技术" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="土木" scheme="lider7214.cn/tags/%E5%9C%9F%E6%9C%A8/"/>
    
  </entry>
  
  <entry>
    <title>毛泽东思想和中国特色社会主义概论</title>
    <link href="lider7214.cn/2020/11/08/%E6%AF%9B%E6%A6%82%E6%80%BB%E7%BB%93/"/>
    <id>lider7214.cn/2020/11/08/%E6%AF%9B%E6%A6%82%E6%80%BB%E7%BB%93/</id>
    <published>2020-11-08T13:40:13.089Z</published>
    <updated>2020-11-09T06:45:29.565Z</updated>
    
    <content type="html"><![CDATA[<p>思想指南与前进路上的信条</p><a id="more"></a><h1 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><p>新民主主义革命理论<br>1、三大法宝：</p><p>基本特点、基本武器：统一战线、武装斗争<br>英勇战士：（党的建设）党组织</p><p>习近平新时代中国特色社会主义思想及其历史地位</p><p>2、中国特色社会主义：主题，根本成就</p><p>中国特色社会主义道路：必由之路<br>中国特色社会主义理论体系：正确理论<br>中国特色社会主义制度：根本制度保障<br>中国特色社会主义文化：精神力量</p><p>道路自信、理论自信、制度自信、文化自信<br>不走老路 坚持定力</p><p>“五位一体”总体布局</p><p>3、“三去一降一补”<br>供给侧结构改革<br>问题：产能过剩、楼市库存大、债务高企<br>解决方案：去产能、去库存、去杠杆、降成本、补短板</p><p>4、总体国家安全观</p><p>国家安全体系：<br>宗旨：坚持国家利益至上，以人民安全为宗旨</p><p>根本：政治安全<br>基础：经济安全<br>保障：军事、文化、社会安全<br>依托：促进国际安全</p><p>中国特色国家安全道路</p><p>5、协商民主<br>一种重要民主形式</p><p>中国共产党领导，人民内部各方面开展广泛协商<br>围绕改革开放发展稳定重大问题和涉及群众利益的实际问题<br>决策之前和决策实施</p><p>中国特色社会主义特有的形式和独特优势</p><p>中国特色大国外交</p><p>6、构建人类命运共同体思想的基本内涵<br>一个科学完整、内涵丰富、意义深远的思想体系<br>核心：建设持久和平、普遍安全、共同繁荣、开放包容、清洁美丽的世界</p><p>7、新时代中国共产党的历史使命<br>统揽伟大斗争、伟大工程、伟大事业、伟大梦想<br>建成社会主义现代化强国（全面建成小康社会的基础上）<br>实现中国民族伟大复兴的中国梦</p><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p>社会主义建设道路初步探索的理论成果</p><p>1、中国特色社会主义建设改革开放前后两个时期的关系:</p><p>（1）互相联系又有区别，本质是我们党领导人民进行社会主义建设的实践探索<br>（2）前者为后者积累了经验并准备了条件；后者是对前者的坚持、改革、发展<br>（3）对前者，<br>要坚持实事求是的思想路线，<br>分清主流和支流，<br>坚持真理，<br>修正错误，<br>发扬经验，<br>吸取教训，<br>在这个基础上把党和人民事业继续推向前进</p><p>科学发展观</p><p>2、科学发展观“以人为本”的核心思想与西方人本主义、中国民本思想的本质区别：</p><p>中国民本思想，君本位，维护封建统治而驭民治民</p><p>西方人本主义，以个人为本位，为资产阶级取得和维护统治地位服务</p><p>科学发展观，以人为本 坚持人民的利益高于一切，实现好、维护好发展好最广大人民的根本利益</p><p>习近平新时代中国特色社会主义思想及其历史地位</p><p>3、“八个明确”和“十四个坚持”之间的相互关系：</p><p>八个明确： 指导思想层面的表述/怎么看/回答问题：新时代坚持和发展什么样的中国特色社会主义<br>十四个坚持：行动纲领层面的表述/怎么办/回答问题：新时代怎样坚持和发展中国特色社会主义<br>习近平新时代中国特色社会主义思想理论与实践的统一</p><p>坚持和发展中国特色社会主义的总任务</p><p>4、认识总任务：</p><p>总任务是建成社会主义 现代化 强国<br>实现复兴<br>在全面建成小康的基础上<br>分两步走：富强民主文明和谐美丽<br>中国梦是形象表达</p><p>“五位一体总布局”</p><p>5、创新、协调、绿色、开放、共享五大发展理念的内在关系：</p><p>1相互贯通、相互促进，具有内在联系的集合体</p><p>2解决xxx的问题：<br>创新——发展动力<br>协调——发展不平衡<br>绿色——人与自然和谐<br>开放——发展内外联动<br>共享——社会公平正义</p><p>3从整体上<br>把握新发展理念，<br>提高统筹贯彻新发展理念的能力和水平<br>推动建设现代化经济体系</p><p>6、如何新时代坚持中国特色社会主义政治发展道路：</p><p>认识到——<br>道路是必然结果（历史逻辑、理论逻辑、实践逻辑）/必然要求（坚持党的本质属性、践行党的根本宗旨）</p><p>以更大的力度、更实的措施发展社会主义民主<br>坚持 党的领导、人民当家做主、依法治国 有机统一<br>坚持正确政治方向，保持政治定力<br>坚持从国情出发、从实际出发<br>把握过去的经验积累现实的问题<br>增强信心、决心</p><p>7、意识形态工作领导权：</p><p>坚持马克思主义指导地位<br>构建中国特色哲学社会科学<br>坚持正确的舆论导向<br>建设好网络空间<br>落实好意识形态工作责任制</p><p>四个全面战略布局：</p><p>8、为什么推进国家治理体系必须解决好价值问题：</p><p>是：重要途径——社会系统得以正常运转、社会秩序得以有效维护<br>重要方面——国家治理体系和治理能力<br>为：关系社会和谐稳定、国家长治久安<br>做：<br>培育价值体系、价值观<br>构建价值体系（中国特色 民族特性 时代特征）<br>抢占价值体系制高点</p><h1 id="论述题"><a href="#论述题" class="headerlink" title="论述题"></a>论述题</h1><p>1、如何形成人与自然发展新格局：</p><p>要坚持节约资源和保护环境的基本国策，为人民创造良好的生产生活环境，形成人与自然发展新格局<br>（1）把节约资源放在首位<br>狠抓节能减排降低消耗/水资源节约利用/矿产资源节约利用/土地资源节约利用<br>（2）坚持保护优先，自然恢复为主</p><p>（3）推进绿色发展、循环发展、低碳发展<br>（4）形成节约资源和保护环境的空间格局、产业结构、生产方式、生活方式</p><p>2、准确把握国家治理的关键和根本：</p><p>《中共中央关于<br>坚持和完善中国特色社会主义制度、推进国家治理体系和治理能力现代化若干重大问题的决定》<br>始终坚持党的集中统一领导<br>完善坚持党的领导的体制机制</p><p>四个全面战略布局</p><p>3、全面小康是全面发展的小康</p><p>全面：发展的平衡性、协调性、可持续性/小康：发展水平<br>（1）覆盖的 领域 要全面，五位一体全面进步的小康<br>（2）覆盖的 人口 要全面，是惠及全体人民的小康<br>（3）覆盖的 区域 要全面，是城乡共同发展的小康<br>（4）要实事求是，因地制宜</p><p>4、为什么说党的领导是中国特色社会主义最本质的特征：</p><p>（1）由科学社会主义的理论逻辑所决定，坚持无产阶级政党的领导<br>是无产阶级革命和社会主义建设取得胜利的根本保证<br>（2）历史逻辑所决定，中国共产党是中国特色社会主义事业的开创者、推动者、引领者<br>（3）实践逻辑决定，实现复兴、关键在党。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;思想指南与前进路上的信条&lt;/p&gt;</summary>
    
    
    
    <category term="理论 工程技术" scheme="lider7214.cn/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="政治" scheme="lider7214.cn/tags/%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>生活的修行</title>
    <link href="lider7214.cn/2020/11/08/034%20%E7%94%9F%E6%B4%BB%E7%9A%84%E4%BF%AE%E8%A1%8C/"/>
    <id>lider7214.cn/2020/11/08/034%20%E7%94%9F%E6%B4%BB%E7%9A%84%E4%BF%AE%E8%A1%8C/</id>
    <published>2020-11-08T13:40:13.085Z</published>
    <updated>2020-11-09T06:44:36.613Z</updated>
    
    <content type="html"><![CDATA[<p>做生活的加法和减法</p><a id="more"></a><p>今天来到了学校，开始做搬校区的准备。</p><p>在我看来，搬迁某种意义有对自我过去的审视，更详细来说，搬迁中的整理，整理这一过程便是如划电影般过完自己这一阶段的印记。</p><p>整理本身，便是在做一种加减法，以前的东西与未来的东西在这一刻交替，这些东西何去何从，这往往由一个人的性格、未来所要追求的东西决定。而对于我，审视过去的自己，发现往往习惯于给自己不断地套上枷锁，从开始便为自己设置障碍，这注定让自己的结果事与愿违。所以，我慢慢在这个过程中思考，思考得失与取舍，思考自己前后言行的一致性，同时也信奉一条准则“如无必要 ，勿增实体。”</p><p>从今天的整理向外思考，过去自己的东西利用率高吗？买到的东西是否合理？有最大化去挖掘东西的效益吗？看着不断舍弃的东西，心里也有了计较，也深知：生活本身就是一场修行，与其把学习和生活分开讲，不如把学习作为生活的一部分。在生活中修行，亦是一种修行。</p><p>永远不会有一条固定的准则会教人如何去处理一件事，而更多的是从准则中学习汲取教训，不断苦练内功，扎实自己基础以便在未来复杂的局面里得到更好的成果，一步步完成自己想要的东西。</p><p>最后，希望自己在未来学习上摆正心态，好好应对，努力再努力。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;做生活的加法和减法&lt;/p&gt;</summary>
    
    
    
    <category term="生活 阅读" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="日常随笔" scheme="lider7214.cn/tags/%E6%97%A5%E5%B8%B8%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>发展观</title>
    <link href="lider7214.cn/2020/11/08/032%20%E6%9C%AA%E6%9D%A5%E5%8F%91%E5%B1%95%E8%A7%82/"/>
    <id>lider7214.cn/2020/11/08/032%20%E6%9C%AA%E6%9D%A5%E5%8F%91%E5%B1%95%E8%A7%82/</id>
    <published>2020-11-08T13:40:13.084Z</published>
    <updated>2020-11-09T06:44:15.689Z</updated>
    
    <content type="html"><![CDATA[<p><strong>对个人来说，要担心的不是人工智能抢饭碗的事情，更多应该担心自己的知识和能力储备不够，被别人抢饭碗的问题。</strong></p><p><strong>人类的能力也一定会适应社会的新变化。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;对个人来说，要担心的不是人工智能抢饭碗的事情，更多应该担心自己的知识和能力储备不够，被别人抢饭碗的问题。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人类的能力也一定会适应社会的新变化。&lt;/strong&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="生活 阅读" scheme="lider7214.cn/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="观点" scheme="lider7214.cn/tags/%E8%A7%82%E7%82%B9/"/>
    
  </entry>
  
</feed>
