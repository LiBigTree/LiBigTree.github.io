{"pages":[{"title":"about","text":"Welcome to Lider’s Blog!","link":"/about/index.html"}],"posts":[{"title":"四月中旬的自我反省","text":"结了几门课，意识到状态的闲散，规划规划好好干 一、想要完成或者继续打磨的事情1、前段时间精力集中点主要还是在课外——python的学习上，画了思维导图，了解了一些相关方面的学习内容，开始学习数据分析的第三方库，然后刷慕课的题，为项目做点积累。2、最近专业内课程进度越来越快，渐渐有些吃力了，要提前开始总结工程测量学、建筑材料、经济学基础、管理学、工程力学、结构力学、概论、英语这八门课的知识体系，前几门还要进行针对性的习题训练。3、数学知识在后置学习越来越显得重要了，需要复习加强高等数学、线性代数、概率论与数理统计的内容。4、锻炼身体核心力量，掌控身体、轻盈自在是多么美妙的事情啊。从腹肌开始、练习倒立引体向上、瑜伽（重拾之前练习过的）。5、发掘了听歌的兴趣，听到好听的歌曲就想要唱出来，陆陆续续学了几个月感觉始终不得要领，缺乏实践肯定是其中一环，网上找一个老师指点一节课，试一试效果，寻求一哈突破。6、重拾摄影理论，不断照相记录生活的风景，这倒没啥需要刻意的，就是之前遇到过一个手机摄影的理论课，有些遗憾没听完，在B站重新搜索了一个课程当作段子慢慢听~7、想要读两本书~ 围城、圆圈正义二、规划写在前头：我发现以我的性格专心把一件事干到底不容易，就会到了后面越来越懈怠，但总得有个收尾检验的标志，所以这次我打算交叉学习，佛系设定，每一个目标给个时间点，预警线，中间自由发挥。[2020/4/14-2020/4/30]1、工程测量学 周五小测试，这三天要干完概念 ！4.172、不时地过一过专业ppt——建筑材料、经济学基础 ！4.223、工程力学 ！4.304、歌理论摄影 广场每天早上搞一搞5、python数据分析刷题随缘 计算机知识得多翻OneNote6、下午锻炼7、想读书的时候读书 四月加油啊！","link":"/2020/04/15/005%20%E5%9B%9B%E6%9C%88%E4%B8%AD%E6%97%AC%E8%87%AA%E7%9C%81/"},{"title":"四月 --&gt; 五月","text":"纸上得来终觉浅，绝知此事要躬行。 &emsp;&emsp;四月中旬，深感自身状态不佳，反省之后略微调整，开始找到学习与生活的状态点，在本月的末尾写这样一篇文章来记录这一个月感悟，同时为下一个月学习做打算。 &emsp;&emsp;不可逃避的一点，学习危机仍然存在，许多课程要用时间一点点填补，甚至会因为精力的原因不得不简化或者放弃一些内容的学习，这是常态，习惯了，也明白了“但行好事，莫问前程”。 &emsp;&emsp;压力之下，努力前行，在四月这一个月来，网课是生活的主旋律，闲暇时也会思念学校时候的人和学校时候的生活，有时候感觉自己内心的节奏太快了，其实生活无所谓快慢的，全凭自己的心意。中学时期曾学过一个概念——“移情”。现在竟觉得我与世界之间，便是“移情”。所谓以我观物，物皆具我之色彩，大抵如此。所以，我努力着让自己静下来，安静地享受、品味生活，观察自己因为行色匆匆而错过的景色。 &emsp;&emsp;水到渠成，这是一个多么美妙的词啊。要是世界一切都能如愿，水到了，顺其自然地有了想要的结果，那无疑是人生的幸事了。我想，我要认准计算机这条路走下去。不给小时候的梦想留下遗憾。越来越追求一种自由的感受——我所感观到的自由。在规则的约束里，认真竭力、小心翼翼地呵护自己想要维护的美好，并快乐地为之努力付出。 &emsp;&emsp;四月回首，琐事絮烦，就说一个——构建了总的思维导图和一系列大大小小的学科思维导图，关于本科专业和自学的计算机专业： &emsp;&emsp;许多预计要完成的课程，没能如愿完成：测量学、建筑材料和经济学。五月，前半段时间应该也是在家学习，就继续计划，朝着四月定好的方向努力。 &emsp;&emsp;最后，一句话送给自己，“努力终不会被辜负，叩问自己，为了心中的愿景，加油” 2020/4/30 于家中","link":"/2020/05/31/006%20%E5%9B%9B%E6%9C%88%E6%80%BB%E7%BB%93%E5%92%8C%E4%BA%94%E6%9C%88%E8%AE%A1%E5%88%92/"},{"title":"五月中旬","text":"伟大事业都始于梦想，基于创新，成于实干。 ——习近平 做研究的目标就是拿着放大镜，把一个本来看不清晰的东西看清楚，说清楚。","link":"/2020/05/15/007%20%E4%BA%94%E6%9C%88%E4%B8%AD%E6%97%AC/"},{"title":"身体训练思考手册","text":"&emsp;&emsp;身体是一切的根本，在我看来，训练身体包括意识心理和体能两方面的锻炼。二者相辅相成，共同发展成就一个健康的个体。 时间线更新： 2020/5/17 力量耐力训练体系/拉伸/热身 意识心理今天暂且不说，目前学习重心在体能锻炼的理论模块： 一、总计划20周，四个阶段目前是第一阶段计划开展为期八周的力量耐力训练 二、训练包含四大块：拉伸、热身、关节力量训练和体能动作训练，其中拉伸包括静态和动态拉伸。流程如下：静态拉伸 –&gt; 慢跑热身 –&gt; 关节力量训练 –&gt; 动态拉伸或体能动作训练。三、拉伸学习：指静态拉伸，有13块内容，总结一个口诀： 胸背棘，三角肱，小臂腹。臀腘髂，股腓鱼。（采用谐音记忆法） 躯干上部7个动作，下部6个。胸部肌肉/背阔肌/竖棘肌/三角肌中后束/三角肌前束和肱二头肌/小臂肌肉群/腹部肌肉群；臀大肌/腘肌/髂肌/股四头肌/腓肠肌/比目鱼肌 另外再提一句，在自学健身理论时，多了解一些解剖学的知识，对意念的观想动作的学习有极大好处。 四、慢跑学习：慢跑是个技术活，需要知道呼吸、手臂、身体上部、膝盖、脚掌、大腿每个地方应该起到的作用，以及整体的协调自然。 要领如下：身体直立微前倾，双眼平视前下方，双手夹直向前摆，膝前顶，（小）腿下摆，全脚掌着地。鼻为主口为辅，自然顺畅为原则。 五、基础体能计划前八周训练表|周一|心肌耐力|稳定性+肌耐力||周二| | ||周三|心肌耐力|稳定性+肌耐力||周四| | ||周五|心肌耐力|技术动作| 1、心肌耐力2、肌耐力动作组合1：猫爬+平地金刚+侧猴子 动作组合2：挂墙走+大俯卧撑+小俯卧撑+V字肩外展 动作组合3：单腿深蹲+单腿剪蹲+脚尖跳 3、技术动作顶点+猫挂+下墙+猴跳 下台+侧跃+懒人跳","link":"/2020/11/08/010%20%E8%BA%AB%E4%BD%93%E8%AE%AD%E7%BB%83%E6%80%9D%E8%80%83%E6%89%8B%E5%86%8C/"},{"title":"如何学习","text":"思考高效率学习法，生活也是学习修行的一部分。 时间线更新： 2020/5/17 创建文章 打磨自己的学习规律，变得优秀状态最重要“组织纪律”，有一个积极的备考状态，随时准备着的感觉！ 成绩=时间*效率for 时间：（1）每天要写一个To-do List，把要做的事情一个个写下来，1）先做难的事情；2）尤其要把琐事写在清单上，清空大脑。趁休息的时候或者缝隙时间把琐事消灭。3）安排成2–3小时的板块，每个板块之间一定要休息 （休息：学习科目的转换；运动，仰卧起坐或俯卧撑；看窗外的风景；吃好吃的；打盹儿15-20分钟） （2）生活方式 1）每天的运动时间：健康规律的饮食和必需的睡眠时间 2）通过流程化提高生产效率，制定长短适宜的任务计划 3）弹性学习：平时规律，考前突击，互补随机应变。 for 效率：（1）高效的记忆法（根据实际投入实际灵活合并步骤）1：看第一遍理解大体内容；2：看第二遍归纳总结，理清逻辑关系画出重点；3：看第三遍想象脑子里有一个文档，将内容输进去；“时间充裕123分开执行，时间紧张123一遍过”4：回忆；5：检查，将脑子里的书和实际的内容印证；6：重复背诵，一次一个部分，直到完成计划；7：回忆（当天学习内容）8：承上启下，联系今天的和之前的学习内容；9：检查，每天快速脑子过一遍昨天背的内容，空隙时间（等公交/睡觉前/洗漱等等） P.S.1） 将学习内容按照逻辑关系分解，详细、有条理&gt;&gt;然后开始背诵，先背框架后填充细节；2）加入感官、图片等联想帮助记忆；3）记忆知识和知识的整理归纳必须独立完成，可这些内容的前后阶段可以适当与老师、同学、网络等沟通； （2）我为什么要这样做？ 提高效率的最好办法是找到动力，可以设置自己的短期长期奖励机制； 计划非常重要： 好的规划事半功倍 （3）开始之前的准备 杜绝电子产品的干扰； 安静的学习氛围；（可以有帮助学习的音乐） 舒服的桌面（不让自己分心）； 穿舒服的衣服； 如果在公共场所学习，东西一定要拿够； 洗澡洗头，全身舒服来全神贯注投入。 高效应试针对性（1）考试复习，先尽最大可能了解出题老师、考试范围和考试形式，多做针对性的思考； （2）地毯式复习：仔细复习每一个知识点，一个不落下过一遍知识点； （3）之后针对重点复习，根据以往考试猜题、巩固复习等等 P.S. 关于练习题的意义：做题是用来测试你记住了多少内容，在题目中的知识是没有组织的碎片，少量可以拼接，多了会混乱。所以，题海战术是建立在地毯式学习的基础上为查漏补缺提升自我的人准备。 而在学习的每一阶段要洞察到自己的能力所在，采取合适的策略方有事倍功半之效。 just do it纸上得来终觉浅，绝知此事要躬行。 自己亲身体会才能明白其中细节的发力点和如何进行，别人给的是方向的指引。","link":"/2020/11/08/012%20%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%8E%A2%E7%B4%A2/"},{"title":"线性代数学习与提升","text":"线性代数 —— 用形象的几何感知和逻辑的计算方法去解决实际工程中的问题 更新中… Part 1 理解性文章（在总结之后写） Part 2 不同渠道的线代学习总结 。。。ing Part 3 参考资料 向量 vectors线性代数是一门语言，需要从语言的角度理解其中的变换，我们所学习的有几何直观层面的解释和计算方法的应用，几何更重要、计算次之，二者结合起来应用到各个领域解决实际问题。 What exactly a vector is向量的表示 物理专业： 箭头数学专业：vector计算机专业：矩阵，ordered list of numbers 向量在坐标系vector coordinates 向量加法和数乘 vector addition and multiplication by numbersi and j are the basis vectors of two scaled vectors坐标是对（i,j）的拉伸 linear combination of v and w线性组合、张成的空间与基linear combinationmultiplication = scaling spanlinearly independent linearly dependent basislinear transformations 矩阵与线性变换Composition 矩阵乘法与线性变换的复合3-D dimension 三维空间的线性变换The determinant 行列式linear system of equations，Inverse matrices、columns and null space 线性方程组，逆矩阵、列空间与零空间特征值与特征向量referance 参考资料1 直观理解线代的视频 2 书籍：线性代数及其应用 第五版 美 David C.Lay","link":"/2020/11/08/013%20%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"},{"title":"五月总结与六月计划","text":"2020年五月，回顾这半年来在家的心路成长历程，不禁有些唏嘘。在五月底，简单地写点总结和对未来的期望，希望自己能守住本心，依循真我，顺其自然、水到渠成地得偿所愿。 时间真快，一晃在家从一月带到了五月底。认识、发现、满足自我，我想，这不仅仅发生在过去、现在，而在未来也会是一直进行下去的循环。我在其中迷茫、思考、徘徊、成长，为片刻的得失或喜或悲，细细想来，不失为一种成长中的精彩。 五月，课程大多到了尾声。开始思考每一门课的收尾，完成了如下内容：1、学习简谱乐理知识，为未来唱歌精进做铺垫。2、健身理论探索，制定体能训练计划。3、规划本学期课程复习方案，目前完成了管理学的复习，进入结构力学和建筑材料的学习。4、摄影，拍了很多渣图，发现生活真美；联系一些故友，收获良多。 六月：1、完成所有本学期的专业课复习2、录一首歌3、跑50公里以上4、开展课外项目的研究（计划书什么的 月照千峰为一人，孤独中成长！","link":"/2020/05/31/017%20%E4%BA%94%E6%9C%88%E6%80%BB%E7%BB%93%E4%B8%8E%E5%85%AD%E6%9C%88%E8%AE%A1%E5%88%92/"},{"title":"我的摄影的学习之旅","text":"摄影是一次全新的生命体验 Life is Changed by Photography 了解手机摄影、像素、光圈像素1、长乘以宽=手机像素点 2、计算图片打印出来最大显示尺寸：像素长（宽）/每英寸可以打印的像素点 衡量指标：DPI下的尺寸 光圈1、焦距 广角镜头，67°，焦距28mm 长焦镜头，3°，焦距800mm：3°角长焦镜头 2、变焦：焦距发生改变 3、光圈f/1.8 f/1.9 f/2.0 … 大光圈：光线的捕捉 感光元件尺寸手机硬件的感光，画质 画质从来不会影响评判一个摄影作品的好坏。 了解构图机位不同的走动，站到一个恰到好处的位置，找出合适的点，表达想要的元素 视点 “不要从一个正常人的视角来看世界，这样的画面拍出来的和别人看到的没有什么不同，毫无新鲜感可言”：根据情况，记录性质的力求还原 视点： 站在高处：俯瞰 站在低处：小的物体被放大 极致的构图视角，代入镜头 层次不同的景深，多个层次：近中远，一般风光摄影最少拉出三个层次感 近中远使得画面感、大小对比出现了。 层次感有时候会讲述更多的故事，加深画面的故事感 简化构图画面小景深手机的大光圈自动使得背景模糊 剪影或模糊使得对象不在是一个具体的对象，而是一类物体的代表 剪影轮廓，舍去会得到更多 优秀的剪影是典型的轮廓可以传达出想要的信息 考虑哪些线条该要，哪些线条不该要 纯色背景仰头拍摄，蓝色天空就是背景 华灯初上，最佳拍夜景 包住要拍摄的东西 留白画留三分白，生气随之发 大量的留白会有更多的想象空间 构图进阶：质感和对比的多种表现方法 构图：基于平面或立体的选择为表达的物体加入对比、框架、质感等手段给人视觉的满足甚至惊喜。 立体透视立体感要领：拍出近大远小的冲击 对应的是平面感：正对面垂直拍摄 不要让画面在立体和平面之间摇摆，这样线条的乱聚使得画面有一种歪了的感觉——要么完全立体感，要么完全平面化 合理地利用想象摄像头与所摄物体之间的空间关系来构图 对比大小对比宏大照片的表达：画面中进入熟悉的小事物烘托主题的表达 小场景生活细节的表达：用相对大的熟悉的东西来表达“未知”拍摄的对象的小 动静对比委婉地表达想要说的东西：说建筑时不正面表达建筑，通过水 说水时，不正面看水——含蓄 动态的水与静止的周边 人物动感的姿态与远处静止的对比：不稳定的人物姿态能体现出动感一些人像中女子活力、青春便是通过不稳定的动作表现，因为不稳定的动作会表现出上一刻和下一秒的动作，这赋予照片想象的动感 明暗对比需要光线的条件 明暗对比：黑白分明，画面会显得很有力量，很有精神 虚实对比虚与实：表达出抽象与具象，梦幻感 模糊表达虚，清楚表达实 远景是虚的，近景是实的，表达漂亮的画面 质感表达物体的软硬、粗糙程度 方法：用侧光，针对拍摄的平面物体而言，光线射进来的夹角越小，质感越明显 利用好光，侧光、平面化画面 立体感：夸张的质感 形式中央庄重、霸气、神圣感 安静、稳定 简洁的构图 对称合适的位置 对称中的不对称 利用平面化构图 重复形状相同、大小类似 简洁中的细节变化 突变突变是基于重复的，视觉上的惊喜 框架构图平面中圈出的画面 手机的平面构图点数量数不清的点，规律的归属，画面的表达 位置点在正中央，稳定感 点在偏下处，重、稳定 点在上处，轻、飘 分量感一个点与多个点的对比，突出一个点的分量 线直线稳定的情感 约束 “矛盾本身是趣味的来源” 斜线大量的斜线，运动感、速度感 甚至不适，用其他线条的构图和明暗的光线的应用去改善 在拍摄地平线的时候，不要通过倾斜手机去找斜线，应该是通过透视、画面本身的寻找去拍摄出斜线 折线美感 画面不烦乱，设置一个主体作为前景以及留白 弧线柔软 曲线基于弧线 曲线让直线更直，直线让曲线更弯曲 明暗交替的曲线 建筑物里的曲线使得内容更有生命力 黄金分割线1：0.618/三分线：横竖三分 将内容靠在三分线处 引导线一条或者多条贯穿画面的线条，引导观察者看向所表达的内容 指向目标，近大远小 线条的引导感 构图原则都是组合使用的 放射线一个点放射 找到平行线，用准广角站在平行线的一头或另一头就可以有射线汇聚的感觉+近大远小 从近处往远处考虑的构图感 面圆形 向这些形状靠拢是美的 让大脑少思考，简洁的线条舒服 三角形留意观察无形的三角形 梯形捕捉 方形旋转-&gt;菱形 色彩互补色跳跃的色彩搭配感觉 橙黄绿明艳的色彩感 黄绿舒适和谐 各种绿色小清新 黑白+一点红国墨的感觉 逆光的色彩摄影感最强，轮廓 侧逆光，质感 散射光柔美，真实 拍女孩 镜头足够近 散射光并不激烈，平平淡淡像生活一样 拍摄软件：前期&amp;后期前期：按点对焦，小太阳曝光补偿——很重要 手机自带软件/应用商店软件：procam，slowshutter慢速快门摄影软件（iPhone） 手机一般4：3构图 后期：VSCOcam 高效照片处理软件。模拟胶片色彩效果snapseed1、调整图片：上下切换调整内容： 亮度，可以调出直方图 对比度 饱和度：饱和度尽量降，不要升过艳 氛围：对环境光的调整，模糊 暖色调：色温 左右滑动调每个内容的大小 2、突出细节： 锐化，对线条的调整 结构 3、裁剪旋转等功能4、局部调整加号定好点位–&gt;双指缩放确定影响的范围–&gt;左右移动确定大小，上下移动确定调整内容：对比度、饱和度等 Union制作双重曝光效果的照片 Levitagram制作悬浮照片的后期软件 Living Planet制作小星球 常用的不要超过5个，摄影熟练，少使用 社交软件Instagram国际摄影社交，及快速滤镜修片软件 500px国际摄影交流及照片出售社区 特技、理念特技1、附加镜头或支架等微距的手机附加镜头 鱼眼镜头：180 sony lens 2、虚焦近处手指辅助 3、光斑晕染光线 4、水滴微距小水滴倒挂在镜头拍 微小的物体的精彩 5、分身术 利用全景模式多次扫描人 有趣的玩法 6、甩手拍旋转的效果 7、晃动光涂鸦冲着颜色鲜艳的物体甩动手机 对频闪的物体拍，梦幻的感觉 理念法无定法无后期，不摄影不违背现实的情况下，后期使得照片更接近现实 镜随心转照片体现的是拍照者的情感 “你看到的世界反映你内心的状态” 摄影私属艺术是个人的表达，寻找自己的路","link":"/2020/11/08/014%20%E6%91%84%E5%BD%B1%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"},{"title":"管理学","text":"学完一门知识，最终能留下什么，应该是对这一门课的认知体系，或者说，学习完课程后脑海里的认知模型。随着时间的流逝，记忆越来越模糊，体系却仍然有，而我想在每次学习之后趁热打铁记录一下我的感悟，在未来回看的时候也可以更新、加深理解。 进度： 2020/5/30 管理学认知 管理学 大二下学完了管理学，跟着书中世界体会了从古典理论到当代管理学的变迁精彩，刷新了自己的认知。大概理一理接下来说的话，一、什么是管理；二、我的管理学记忆学习模型；三、对未来的思考。 在学习之前，我最初的认知就是管理学的职能在于资源调度。现代管理学本质就是对已有的资源研究其规律，最后更好地去调用这些资源服务需求。这里的资源有人力资源和物质资源。 带着这样的认知，我去学习管理学，第一次触动我的名词是决策二字。这给了我深深的启迪，让我对管理学的认知由静态转变到了动态。过去，我的大脑里只有管理贫瘠的二字，最多加上资源。这些内容像是一张静态的画，缺少活力。然后，从决策开始，我更新了管理的认知。我们面对的管理，不再是过去等待分配的资源，而是在时代汹涌潮流中随时变化的动态机遇，再加上后续理念和方法的学习，我认知了如下的管理： 所谓管理，是在所处的动态环境下对一系列资源的重构、利用、引导的事件集合。在我看来，它的内核是一个个动态的事件脚本，每一个情境下是不同的整合，我们不仅学习脚本运转的共性，我们也考虑脚本的个性。 再来说说管理认知模型，粗浅的看了人体解剖，于是在学习的过程，我就把管理知识和人体对应了。 不严谨地说，人，先骨架，然后血肉填充，此时静态；之后神经控之，化静为动，是为三层成人。而以组织结构（制度、层级）为骨架，人与资源等填充于骨架之间，而后控制体系（领导、控制、创新）使之流淌，是为管理。 最后，说说展望，在学习过程中有一个问题，我印象很深刻，管理是科学还是艺术呢？ 好的回答是从管理理念上来说，它是一门科学；从管理的实践活动看，管理学是行为的艺术。也因此，我想说，在未来的路上，知行合一，让知识不仅仅躺在那里作为科学观赏，而思考知识如何服务于我个人乃至我之外，发挥管理作为一种艺术的美妙。 草草写于2020/5/30，希望后续有机会把文字内容更加完善。","link":"/2020/11/08/018%20%E7%AE%A1%E7%90%86%E5%AD%A6%E6%80%BB%E7%BB%93/"},{"title":"六月，艰难困苦，玉汝于成","text":"意识到自己的普通，不是像天才一般——效率奇高，学习轻松，又有着无比的自制力和专注力。所以，更应该老实地从简单做起，一点点磨练自己，踏踏实实达到努力够得着的程度。 六月的核心是考试，考试给一学期的学习加上发条，在这短短的一段时日里将内容融汇贯通，打磨自己的学习能力。过程是辛苦的，但也是值得的。 接下来，看书看知识–&gt;练习测试–&gt;消化–&gt;再看书,往复循环，将内容推进。经济学：生产-政府-GDP-失业-通货膨胀，作业习题建筑材料：水泥-水泥混凝土，作业工程测量：作业习题，点位测量-控制测量-误差-圆弧，习题集结构力学：计算自由度-梁-刚架-拱-结构-位移，作业土力学：土的物理性质-土的三性-应用，习题集管理学：回顾习题 英语、概率论暂定 还有许多天坑，内容很多啊，生命不息，奋斗不止！","link":"/2020/06/15/019%20%E5%85%AD%E6%9C%88%E4%B8%AD%E6%97%AC/"},{"title":"写在年中","text":"&emsp;上半年结束，下半年开始。 &emsp;其实，我对自己的工作一直不满意，在短期内我看不到成效，我想着把事情做到尽善尽美，可经过一段时间，热情被冲刷得所剩无几，于是许多想法也就不了了之了。所以，在看过了我上半年的博客痕迹、简单地想了想我的需求，借着这个写年中总结的机会，内查自身，希望对接下来的成长起到作用。 &emsp;上半年的主旋律是学习，期间许多想法冒头可也没成啥气候。第一个是唱歌，找到了一个唱歌的教程开始学习，学了一堆理论，发现还是原来的样子，身体还是不听使唤发不出美妙的声音。然后，去淘宝找老师指点，一层理论之下还有一层，我需要更多的理论，并不全是，我需要更多的有效练习，节奏感、气息对于我来说就是摆在前头的两座大山。于是，我热情变低了，到现在几乎微不可察，现在想着安排上把唱歌爱好重新拾起来，但是要换一种模式，一种轻松简单、不对自己那么严苛、简单的模式。 &emsp;第二个便是课外学习与课内学习之间的矛盾冲突。说实话，我都不知道自己忙忙碌碌抓住了重点没有，一顿学习之后留在脑子里核心的东西是什么，在这之前，我没有思考过，但这一刻之后，我要去思考学习之后的留存，我要去体会把握大篇内容中核心最亮的那一点，我要赋予我的学习灵魂，不再是形式，而是一种顺其自然的状态。回到具体内容，三个大方面，工程、管理、计算机。工程是建筑材料、测量学、结构力学、土力学等等学科交织的体系；管理包括有经济学、管理学、法律等等学科对社会人文的认知；计算机是以python语言展开的数据分析学习、软件认知等等比较浅层的自学之路。 &emsp;除此之外，上半年还尝试健身、做饭、摄影等等乱七八糟的事情，也都是浅尝辄止。突然发现数据时代的一个弊端——信息容量太多，不断探索的东西很多，很容易“乱花渐欲迷人眼”，需要足够的定力和足够的智慧去追求自己真正想要的东西并坚持出一个结果。 &emsp;总结自己一直以来的学习拖沓，就是把事情一开始想的太大，战线拉的太长，这样一来，许多东西便是无用功。而且，认清自己的学习能力和时长极限很重要，不要强迫，找到一个很好的平衡点，然后做好自己，提高自己，“临渊羡鱼，不如退而结网”，别被别人的节奏打乱。 &emsp;如此，基于上面的思考，规划下自己的未来。&emsp;1、“近具体，远战略”，未来博客的旋律的从一个很小的点写自己想写的东西，不求大而全，只求有自己独到的体会。然后把之前挖的坑改了，重新填好，填自己当初想要表达的观点。 &emsp;2、围绕语音陪伴软件系统的开发、设计等等，就从答辩内容梳理开始，也把宣传视频再剪辑出来。 &emsp;3、把最想学的计算机基础扎实了，提取数学的核心内容，利用日常安排的零星时间学习英语。 &emsp;4、实践学到的数据分析、数据管理内容。 &emsp;5、另外，计划写一本短篇小说，关于废土——人类文明的高光，科技、情感等交杂。 &emsp;6、再度拾起之前一直磨蹭的剪视频、摄影、平面设计、唱歌等，去尝试做一些作品。 &emsp;7、跑步跑步跑步！ &emsp;8、专业课程：给工程测量、结构力学、土力学、房屋建筑学一个了解。 &emsp;2020还是有很多要去努力的东西，更具体的内容还看未来自己如何去充实这些框架的细节了。 ——2020/7/1 于榆林家中","link":"/2020/07/01/020%20%E5%B9%B4%E4%B8%AD%E5%8F%8A%E5%89%8D%E8%B7%AF/"},{"title":"八月梳理","text":"铭刻时间，成为一种习惯。 回首再看年中总结，事情做了一小点，好多还没有实施。七月这就结束了，路走的磕磕盼盼不尽意极了。 项目很一般，没做出成绩，实力还是其他？还是有焦虑在里面。 七月，学校的学期收尾、尝试打工、学习新知识。八月，继续进行。 延迟满足，着眼于未来，积淀！ action.","link":"/2020/08/01/022%20%E5%85%AB%E6%9C%88/"},{"title":"但将行好事，莫要问前程","text":"找到自己的路，然后坚持走下去。 卷，计算机太卷了。 排除能力不够的人，还是有大把强者同台竞争。 未雨绸缪，风物长宜放眼量。 积累的知识和锻炼的思维是原料，积累足够的原料经过实践的燃烧有了能力。能力越强，你能掌握的资源和话语权就越多。 依然遵循暑假的基础，一步一步向前，不着急。 七月，首先完成学校的作业给自学一个自由的空间；然后从计算机导论开始，理论和实践并进，数学和代码（数据结构/C）。 将项目开发放在八月。 还有很多的事情要做，剪辑一个视频、探索兴趣技能等等等，还有在博客里写干货，冲冲冲！","link":"/2020/07/14/021%20%E4%B8%83%E6%9C%88%E4%B8%AD%E6%97%AC%20%E4%BD%86%E8%A1%8C%E5%A5%BD%E4%BA%8B%EF%BC%8C%E8%8E%AB%E9%97%AE%E5%89%8D%E7%A8%8B/"},{"title":"从工程测量的课程学习到几何直观记录","text":"测量的核心是找“点”，确定一个点到确定一组点，最终完成工程目标。 绪论测量学1、测绘学下属研究的一个分支 2、贯穿工程建设：可研阶段/施工阶段/竣工阶段/运行阶段 水准面1、将地球数学模型化而设置的概念，具有意义的是大地水准面。（之所以是水准，是因为地球71%是海洋面。 2、我国在青岛设验潮站测量大地水准面 地球面1、整体假设为旋转椭球面，但局部研究时采取的是参考椭球体 2、参考椭球体下将地球局部可看作球体，故有R=6371m 测量要素距离、角度、高程 水平面代替水准面的限度：距离限制在10km范围内，高程要考虑地球曲率的影响 测量实施原则整体、控制到局部、碎部 误差研究对象针对偶然误差 衡量标准1、标准差 2、中误差 3、相对误差 误差传播通过各自观测值的误差和观测值对应的导数（“误差传播权重”）的乘积来计算函数整体的误差。 平差等精度算数平均值代入中误差求平差 不等精度1、根据可靠程度分配权，求得各个观测值对应的权重，用加权平均值来求平差 2、权重分配方案：根据中误差：平方反比 根据测回数：正比 根据测站数：一次反比 根据测量长度：一次反比 权重计算技巧：在除法时一般会取各自观测度的最大公因数处理数据为整数，方便计算。 水准测量水准测量原理 Hb=Ha+(a-b) 用后视尺读数推算前视尺读数 水准测量的一般方法和要求1、实施： 直接水准测量; 设置高程转点、放尺垫测 2、高程传递 hb=ha+[h] 3、水准测量表格 Hb=Ha+(a-b) 第一步：观测得数据a b 第二步：求高差 第三步：推算高程 第四步：计算校核，前三步数据校核 4、测量校核 （1）测站校核 （2）路线校核 取国标为基准衡量校核 分析法: 1） 计算理论高程差[h] 2） 测量实际高程差[h]测 3） 比较得出闭合差 Δh 具体对应路线：(核心分析式子：hb = ha + [h]) 闭合水准 [h] = 0 [h]测 Δh = [h]测-[h] = [h]测 附和水准 [h] = hb - ha [h]测 Δh = [h]测-（hb-ha） 支水准 通过往返测算数求和计算闭合差 精度要求 按照路线长度：±40*（L）^(1/2) 按照测站数： ±10*（L）^（1/2） 若不能满足精度要求，则需要返工 5、水准路线闭合差调整和高程计算 对满足精度的闭合差按照长度或者测站数比例分配到原来的高程差上，然后求出调正后的高程。 水准测量误差及其消减1、仪器误差 仪器校正后的参与误差/对光误差/水准尺误差 2、观测误差 整平误差/视差影响/照准误差/读数误差/水准尺倾斜影响 3、外界条件的影响 仪器升降/尺垫下沉/地球曲率/大气折光/温度 水准仪结构和使用 关键结构： 望远镜/圆水准器/水准管 水准测量器具： 水准仪/水准尺/三脚架/尺垫 水准仪的使用：（一次完整的高程差测量） 1、安置仪器；2、粗略整平；3、瞄准目标A（先外粗瞄，后内粗瞄）；4、消除视差；5、精平；6、读数a；7、瞄准目标B；4、消除视差；5、精平；6、读数b。 水准仪的检验校正步骤： 检验是否满足精度要求-&gt;校正-&gt;再次检验 检验三个指标： 指标一、圆水准管轴平行于仪器竖轴：望远镜转180度，看转后圆水准管气泡是否仍在中心 指标二、十字横丝垂直于仪器竖轴：找一个点水平左右转，看是否在一条线上 指标三、视准轴平行于水准管轴：1 平坦地面找个两个点，水准仪放中间测出两点高程，得到高程差（测三次且波动小于3mm，取平均值）h真 2、水准仪移到任意一个点外侧，测出高程，得高程差h2 h2-h真在3mm外就需要校正 校正： 指标一：脚螺丝和校正螺丝分别校正一半 指标二：拧埋头螺丝 指标三：算出h真+h（靠近水准仪一侧的）为远离水准仪一侧的校正后读数，然后调正微倾螺旋到计算的数字上，再转动校正螺旋使得水准管的气泡居中 角度测量水平角测量原理测站O，目标点A、B，OA、OB夹角测量沿着铅垂方向投影到水平面测得水平角AOB 关键点：整平（度盘水平）和对中（O点对应度盘中心） 方法测回法：两个目标之间夹角1 盘左测上半，盘右逆时针下半测回，上下测回误差小于36’’，各测回误差小于24’’ 2 起始读数变换值：180/n 全圆测回法：三个或三个以上目标夹角 一、数据测量与核实 1 测半测回归零差； （验证小于18’’） 2 2C 变化范围； 3 平均读数； 二、开始计算角值 4 起始方向值； 5 归零方向值；（验证各测回误差小于24’’）； 6 平均方向值get； 7 出角值 竖直角测量原理测竖直平面内目标方向与水平方向的夹角（仰+、俯-） 方法1、竖直指标线标定竖盘读数，盘左标定为90、盘右270； 2、竖直角用大的读数-小的； 3、竖盘指标差：x = （α左 - α右）/2α正 = （α左 + α右）/2； 4、观测步骤： 对中整平；指标水准管；算左；转算右；可选若干测回测竖直角 角度测量的误差分析仪器误差仪器制造；仪器校正不完善 观测误差对中误差；整平误差；目标偏心误差；照准误差；读数误差 外界条件影响温度、大风、大气折光、大气透明度、地面等 经纬仪的认识与使用1、DJ6表示中误差±6 2、构造： 照准部：望远镜、横轴、竖直度盘、竖直指标水准管、读数显微镜、照准部水准管、竖轴 水平度盘：水平度盘、方向经纬仪 基座 3、读数：看大刻度线粗读，再估读秒，按6的倍数估读。 经纬仪的检验校正主要轴线：仪器竖轴 仪器横轴 照准部水准管轴 望远镜视准轴 水平角检校： 照准部水准管轴垂直于竖轴 十字丝竖丝垂直于横轴 视准轴垂直于横轴 横轴垂直于竖轴 竖直角检验： 竖盘指标水准管轴垂直于竖盘读数指标线 距离测量直线定向1、直线定向的依据——标准方向 子午线（真子午线、磁子午线）：有收敛角，不便计算 坐标纵轴：便于计算 2、直线方向的表示方法 方位角：一端的北端顺时针转至与直线重合所经过的角度，每个标准方向对应一个方位角， 真子午线–&gt;真方位角,磁子午线–&gt;磁方位角，坐标纵轴–&gt;坐标方位角 正方位角：直线前进方向起始端处的夹角反方位角：直线前进方向终端 3、坐标方位角：把标准方向设为坐标纵轴的方位角 坐标方位角的推算：用上一个起始方位角和当前方位角推算当前水平角 关系相差180，左角+、右角-（左右角按照前进方向判断） 4、坐标正反算 坐标正算：由一点坐标和夹角距离求另外一点坐标；方法：用三角函数计算增量，之后由A正算求B； 坐标反算：已知两点反求距离和夹角方法：距离用勾股定理/用增量和夹角三角函数 5、罗盘仪 距离丈量1、工具直接丈量：钢卷尺、皮尺 视距（间接）测量：经纬仪、水准仪 光电测距：全站仪、测距仪 2、一般方法 平坦地面丈量：整尺倍数+余长 倾斜地面丈量：分段平量或用三角函数由倾斜距离计算得到 精密方法 钢尺尺长、温度、倾斜改正 步骤：定线（经纬仪）-&gt;量距-&gt;测高差（水准仪） 视距测量同时测定距离和高差 水平时，距离=KL 高程=测点高-视距尺读数 倾斜时，距离=klcos（2）α高差=Dtgα+水平时的高差 红外和全站光电：距离和时间的关系 全站：自动的 平面、高程控制测量[平面]1、测量原则：先整体后局部，先控制后碎部 2、平面控制是测定控制点平面位置（x，y）高程控制测量是控制点高程（H） 3、控制方法：三角测量（布设三角网）导线测量（布设导线网）卫星和惯性大地测量 4、国家平面控制网主要采用三角测量法进行布设，在西部地形复杂地区采用精密导线测量 该网有四个等级，一等精度最高。 5、对于小测区，要进一步加密控制点。直接供地形测图——图根控制点-&gt;图根控制网图根控制网不能满足要求——引测站点 导线测量1、布设形式： 闭合导线、附和导线、支导线 2、导线测量的外业工作 （1）查勘选点：三个良好、三个便于 （2）导线边长测定：钢尺、光电测距、视距测量 （3）角度观测：一般观测左角，闭合导线按照逆时针方向编号（此时左角为闭合导线中内角） （4）联系测量：导线与高一级控制点连接取得坐标和方位角的起算数据 3、内业计算 （1）准备：外业记录的检查——计算是否正确、各项误差是否在限差之内绘制导线略图（可视化：点号、角度、边长/已知坐标和方位角） 关于闭合导线：检查内角和条件和坐标条件 （2）角度闭合差计算和调整 闭合差=[β]-（n-2）*180 （允许值±60或40 * n^(1/2)） 改正：每个角度=原来的角度-闭合差/n （3）方位角推算闭合导线逆时针推算，最后回到更高一级的控制点比较 （4）坐标增量计算及调整 坐标闭合差和边长闭合差精度不够要返工 坐标增量改正：按照边长比例进行分配 （5）导线点坐标计算由已知点计算出来 附和导线与闭合导线计算的不同之处： 始方位角、终方位角求解 导线转折角闭合差的计算 坐标增量闭合差的计算 小三角测量1、外业 （1）踏勘选点 （2）基线测量 （3）角度观测：全圆测回法 （4）起始边定向（引高一级的控制点或者用罗盘仪测起始方向的磁方位角） 2、内业 （1）准备工作 （2）内角平差 （3）基线闭合差的计算和调整 （4）边长计算 （5）三角锁各点坐标计算 [高程]用水准测量的方法 等级有一二三四等水准网 现在的高程基准：1985年国家高程基准黄海平均海水面作为高程零点 三、四等水准测量1、指标要求 2、观测方法 （1）双面水准尺 （2）测站工作 （3）计算和校核视距计算–过两关 高差计算–过三关 校核计算 3、注意事项 迁站要求： K常数 观测顺序 高差闭合差的调整 三角高程测量光电测距三角高程测量 从控制到碎部地形图1、地物/地貌/地形–&gt;地形图 2、平面图 3、比例尺 （1）分类：大比例尺 工程设计用中比例尺 工程规划用小比例尺 基础图 （2）比例尺精度地形图上0.1mm所代表的实地长度，称为比例尺的精度（后面的数字除以1k） （3）地物地貌的表示方法 （4）等高线特性 （5）典型地貌 施工放样1、施工控制网： （1）平面控制网 基本网 定线网 （2）高程控制网 基本网 临时性作业水准点 2、放样：距离、水平角、高程 直线长度的放样 钢尺测设直线长度 测距仪测设长度 水平角的放样 高程放样 3、测设放样点平面位置的基本方法 （1）直角坐标法 （2）极坐标法 （3）角度交会法 （4）距离交会法 圆曲线测设1、圆曲线测设三主点起点、中点、终点 2、测设思路： （1）主点测设 要素计算 主点测设步骤 （2）细部点测设 主点桩号计算 细部点桩号确定 细部点测设的两种方法：直角坐标法偏角法 细部点测设步骤","link":"/2020/11/08/027%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E5%B7%A5%E7%A8%8B%E6%B5%8B%E9%87%8F/"},{"title":"八月中，立秋已过","text":"八月中规划 最大的成果是心态上的调整，八月初的焦躁到如今的沉下心来努力思考，经历这样一个过程，也发现自己不同方面的进步。 总结生活学习方向：【学习】1、完成了社会实践的数据分析和后期总结、解决方案的模拟生成； 2、开始对过往专业学习课程总结，并逐渐写出一些文档； 3、规划出更合理的学习路线，自学的方向更加清晰； 4、开始五指科学打字的习惯 【生活】 1、每天引体向上五组锻炼； 2、规划并实施个人养护（秋季）：着装、鞋袜、养护细节、日用品采购 3、和几个好友快乐玩耍 接下来：1、安定入学生活，搬宿舍、联系朋友等 2、准备开学几门考试的复习 3、继续坚持锻炼，腹肌和双力臂","link":"/2020/08/15/030%20%E5%85%AB%E6%9C%88%E4%B8%AD%E6%97%AC/"},{"title":"031 做社会调研的反思总结","text":"前期的准备工作往往是最长的，但考虑的越多，后期进行的就越顺利。 前期收集资料 focus Group 提炼观点 明确目的 中期设计问卷，试样分析 问卷回收与改进 问卷正式发放与回收 后期数据整理与分析 解决方案设计与成型","link":"/2020/11/08/031%20%E7%A4%BE%E4%BC%9A%E5%AE%9E%E8%B7%B5%E7%9A%84%E6%B5%81%E7%A8%8B/"},{"title":"发展观","text":"对个人来说，要担心的不是人工智能抢饭碗的事情，更多应该担心自己的知识和能力储备不够，被别人抢饭碗的问题。 人类的能力也一定会适应社会的新变化。","link":"/2020/11/08/032%20%E6%9C%AA%E6%9D%A5%E5%8F%91%E5%B1%95%E8%A7%82/"},{"title":"生活的修行","text":"做生活的加法和减法 今天来到了学校，开始做搬校区的准备。 在我看来，搬迁某种意义有对自我过去的审视，更详细来说，搬迁中的整理，整理这一过程便是如划电影般过完自己这一阶段的印记。 整理本身，便是在做一种加减法，以前的东西与未来的东西在这一刻交替，这些东西何去何从，这往往由一个人的性格、未来所要追求的东西决定。而对于我，审视过去的自己，发现往往习惯于给自己不断地套上枷锁，从开始便为自己设置障碍，这注定让自己的结果事与愿违。所以，我慢慢在这个过程中思考，思考得失与取舍，思考自己前后言行的一致性，同时也信奉一条准则“如无必要 ，勿增实体。” 从今天的整理向外思考，过去自己的东西利用率高吗？买到的东西是否合理？有最大化去挖掘东西的效益吗？看着不断舍弃的东西，心里也有了计较，也深知：生活本身就是一场修行，与其把学习和生活分开讲，不如把学习作为生活的一部分。在生活中修行，亦是一种修行。 永远不会有一条固定的准则会教人如何去处理一件事，而更多的是从准则中学习汲取教训，不断苦练内功，扎实自己基础以便在未来复杂的局面里得到更好的成果，一步步完成自己想要的东西。 最后，希望自己在未来学习上摆正心态，好好应对，努力再努力。","link":"/2020/11/08/034%20%E7%94%9F%E6%B4%BB%E7%9A%84%E4%BF%AE%E8%A1%8C/"},{"title":"八月底总结和九月计划","text":"开学 八月，开学前准备，搬宿舍、收拾东西。很多担心的问题一部分没有发生，一部分随着时间的推移、到了发生的时候却轻轻地就过去了。 对中旬的内容总结一下： 度过了一部分考试，还有房屋建筑学、工程测量、军事理论和土力学。 锻炼身体的次数明显比之前低了，开学琐碎的事情太多。 搬校区之后的生活稳定的比较好，目前比较满意，也渐渐安定下来专心向学习了。 对九月的自己，去做更多的事情： 整合启动项目 完成之前考试的收尾，计划出新学期的课内课外学习内容 学习哑铃健身，养成锻炼的习惯 cheers up！","link":"/2020/08/31/037%20%E5%85%AB%E6%9C%88%E5%BA%95%E6%80%BB%E7%BB%93%E5%92%8C%E4%B9%9D%E6%9C%88%E8%AE%A1%E5%88%92/"},{"title":"房屋建筑学","text":"在我看来，房屋建筑学就是工程管理中工程二字的概论课，其对工程技术的应用做了一个整体的描述。 建筑设计绪论建筑发展概况国外建筑发展概况 中国古建筑发展状况 中国近现代建筑发展概况 建筑的构成要素与建筑方针建筑的构成要素 建筑方针 建筑的分类和分级建筑的分类 民用建筑使用年限与耐火等级 建筑设计的内容和程序建筑设计的内容 建筑设计的程序 建筑设计的要求和依据建筑设计的要求 建筑设计的依据：使用功能/自然条件/建筑设计标准、规范、规程/建筑模数 结构与建筑的关系概述 结构与建筑的关系概述建筑总平面设计建筑总平面设计的内容及要求建筑总平面设计的内容 建筑总平面设计的基本要求 建筑总平面设计与城市规划的关系 建筑总平面设计的基本原理使用功能要求 建设地区的条件要求 建筑的组合安排：建筑体形与用地的关系建筑朝向建筑间距布置方式建筑群体的艺术处理 道路交通及绿化布置道路布置：道路布置的基本要求场地道路的组织 场地停车系统的组织 绿地的基本形式 绿地的规模 建筑平面设计建筑的空间组成与平面设计的任务建筑的空间组成 建筑平面设计的任务 主要使用房间平面设计房间面积的确定 房间平面形状的确定 房间大小尺寸的确定 房间中门的设置 房间中窗的设置 辅助使用房间平面设计厕所 浴室、盥洗室 厨房 交通联系空间平面设计走廊 楼梯 电梯 门厅 建筑平面组合设计影响平面组合设计的因素：使用功能，结构类型，设备管线，建筑造型 平面组合形式：走廊式组合套间式组合大厅式组合单元式组合混合式组合 建筑剖面设计房间的剖面形状房间的使用要求：视线、音质 建筑结构、材料及施工要求 室内采光和通风要求 房屋各部分高度的确定净高和层高：房间的使用性质及家具设备的要求、采光和通风要求、结构层高度及其构造方式的要求、建筑经济性要求、室内空间比例要求 窗台高度 室内外地面高差 门厅高度处理 建筑高度 房屋层数的确定使用要求 基地环境和城市规划要求 建筑结构、材料和施工要求 建筑防火要求 建筑经济性要求 建筑空间的剖面组合与利用建筑空间的剖面组合原则 剖面组合规律 建筑空间的利用 建筑体型和立面设计建筑体型和立面设计要求建筑构图原理要点简单的几何形体求统一 主从分明，重点突出 均衡与稳定 对比与微差 韵律与节奏 比例与尺度 建筑体型设计体型组合主要类型 体型转折与转角处理 体型的联系与交接 建筑立面设计工业建筑设计多层建筑工业设计建筑构造建筑构造概述建筑构造的研究对象与方法建筑物的组成构件基础墙楼地层屋顶楼梯门与窗 影响建筑构造的因素自然因素和人为因素的影响 荷载和地震的影响 物质技术条件的影响 经济条件的影响 建筑构造设计原则建筑物理环境基础建筑热环境热环境基础 保温设计 防热设计 太阳能在建筑中应用 建筑光环境采光设计标准 采光设计 采光窗口面积的确定 建筑声环境建筑吸声 噪声控制 室内音质设计 建筑空气质量绿色建筑概论基础与地下室地基与基础天然地基与人工地基 基础的埋置深度 基础的设计要求基础的类型按基础类型 按基础的材料及受力来划分 按基础的深浅划分 地下室防水构造地下室防水等级和设防要求 地下室的防水措施 墙体墙体概述作用 类型 设计要求 砌体墙砖墙 砌块墙 幕墙隔墙与隔断防火墙楼层与地坪楼层板构造概述钢筋混凝土楼板 地坪构造地坪的组成 地坪的设计要求 地坪的类型 楼地面防水构造阳台与雨篷阳台 雨篷 楼梯与电梯楼梯的组成和尺度组成 尺度 钢筋混凝土楼梯构造现浇 预制 楼梯的细部构造 台阶与坡道构造台阶 坡道 电梯与自动楼梯无障碍设计简介屋顶平屋顶屋面防水构造防水等级和设防要求 刚性防水屋面 卷材防水屋面 涂膜防水屋面 屋面保温构造屋面隔热构造坡屋顶门与窗概述铝合金及塑钢门窗木门的构造特殊门窗建筑遮阳变形缝伸缩缝的设置条件及要求沉降缝的设置条件及要求防震缝的设置条件及要求变形缝处的结构处理变形缝的盖缝构造墙体变形缝构造 楼地板变形缝构造 屋顶变形缝构造 建筑饰面概述墙体饰面楼地面饰面顶棚饰面建筑隔声墙体隔声构造楼板隔声构造顶棚吸声构造门窗隔声构造民用建筑工业化工业建筑构造","link":"/2020/11/08/039%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E6%88%BF%E5%B1%8B%E5%BB%BA%E7%AD%91%E5%AD%A6/"},{"title":"应用统计学","text":"统天下，计未来。 工程建设中的科学管理法，涉及资料的整合、利用等 第一章 统计、数据和计算机 统计思维总有一天会像读与写一样成为一个有效率公民必备的能力。 —— H.G.Wells 1 统计及其领域1.1 统计研究什么统计研究的是来自各个领域的数据，提供的是一套通用于所有科学领域的获取数据、分析数据并从中得出结论的原则和方法。 1.2 统计的应用数据分析真正的目的是从数据中找出结论，从数据中寻找启发，而不是寻找支持，真正的数据分析事先是没有结论的，通过对数据的分析才得出结论。 2 怎样获得统计数据2.1 变量与数据变量：观察到的事件可能的结果数据： 把观察到的数据记录下来就是数据 数值变量（定量变量）:用数字记录观察其结果，记录下来的结果叫做数值型数据或者定量数据 取值为事物的属性或者类别，以及区间值的变量称为类别变量，也叫做属性变量/定性变量/分类变量，记录下来的数据叫做类别数据，也称为定性数据或属性数据或分类数据 类别变量按照取值情况分为3种：二值类别变量，顺序值类别变量和名义值类别变量。 2.2 数据的来源从那里获得数据呢： 1） 已有的数据：公开出版报道的，管理部门的，网络资源等等 2）亲自调查：概率抽样，有简单随机抽样 分层抽样 系统抽样 整群抽样 3 统计与计算机SAS statistical Analysis System SPSS Statistical Product and Service Solutions Eviews S-PLUS MINITAB Excel 第二章 用图表展示数据 图没有说谎，是说谎者在画图。 第三章 用统计量描述数据 一些人使用统计就像喝醉酒的人使用街灯柱——支撑的功能多于照明。 第四章 概率分布 数学定律不能百分之百确切地用在现实生活里；能百分之百确切地用数学定律描述的，就不是现实生活。 第五章 参数估计 不像其他学科，统计从来不打算使自己完美无缺，统计意味着你永远不需要确定无疑。 用一小部分单位指标去估计总体的参数：点估计和区间估计 点估计法矩估计样本矩反映总体矩（样本矩依据概率收敛于总体矩） 顺序统计量法将正态分布样本由大到小排列，用样本中位数估计总体数学期望，用极差估计总体标准差 一般适用于正态总体或总体呈现连续且分布密度对称时 最大似然法已知总体分布特征，利用样本通过迭代的方法估计这一特征的参数，直到估计出来的参数与总体数据特征吻合 衡量估计量的优劣（1）无偏性期望和方差（2）有效性方差小者更有效（3）一致性极限的概念 区间估计解决问题：构造并分析出未知参数在与样本有关的区间的概率随机区间通过双侧百分位数确定 上述的概率又叫做置信度 分类： （1）估计正态总体的平均值 a：方差已知，正态分布b：方差未知，t分布 （2）估计正态总体方差的置信区间 卡方分布 （3）比较两正态总体 确定样本容量n确定能满足精度的最小样本容量 第六章 假设检验 …正如一个法庭宣告某一判决为“无罪”而不为“清白”，统计检验的结论也应为“不拒绝”而不为“接受”。 第七章 类别分析 我们是无知的，所以让我们学习吧！ 第八章 相关与回归分析 好的模型选择可遵循一个称为奥克姆剃刀（Occam’s Razor）的基本原理：最好的科学模型往往最简单，且能解释所观察到的事实。 第九章 时间序列预测 未来是不可预测的，不管人们掌握多少信息，都不可能存在能做出正确决策的系统方法。 第十章 指数 数字不会说谎，但说谎的人会想出办法。","link":"/2020/11/08/040%20%5B%E5%B7%A5%E7%A8%8B%E7%AE%A1%E7%90%86%5D%E5%BA%94%E7%94%A8%E7%BB%9F%E8%AE%A1%E5%AD%A6/"},{"title":"九月，开学","text":"九月，2020年下半年 这一个月，在家里思考的学习法与学校生活慢慢经历磨合，体会自己过往过程中从开始到中间不同阶段的心态变化，也看到往日失败的一面，更坦然地开始接受自己的优点与不足。 倘若执拗于一点一滴之中，便会迷失自我在怀疑中失去很多机会，可一味地瞅着大方向，也会有空乏之感。所以，生活和学习的成长便是对二者的均衡。 另外，要求不同结果也会不同，今天亲自对0.99和1.01做了乘法，刚开始的差距仅仅是0.02，可经历过几次变化之后，却如此天差地别，人和人之间的水平何尝不是如此！“完美，追求完美。知识要百分之百的掌握，因为每天缺少一点，某一天再看时你会发现你缺少的东西多的可怕” 大三的专业课程全面铺开，时不我待，继续刻苦奋斗，同时追求生活高品质—— 1、单纯形法梳理 2、会计学复式记账总结——用excel去展现 3、统计学分布学习——概论复习，重点在正态分布 4、高数和线代的题型练习 5、python学习 6、体测体能锻炼和学会唱一首歌 同时对已经完成的工作列表如下： 1、2020春季学期大二下收尾工作——英语、毛概、测量实习 2、社会实践收尾——开启下一阶段的更科学计划 3、体能训练引体20，坚持跑步","link":"/2020/09/30/045%20%E4%B9%9D%E6%9C%88%E6%80%BB%E7%BB%93/"},{"title":"2020年度规划","text":"&emsp;&emsp;站在今天，回忆起昨天，是一个个离散的片段，再举目望向未来，却是一条连绵的线。 ——题记 2020：学习方面1、数学竞赛 2、英语六级和英语口语 3、在python、C、C++之间选出一种合适自己的语言发展，并实现数据结构 4、运筹学体系，建立工程管理大三知识框架 7、计算机组成原理——&gt;二进制、操作系统——&gt;Linux和docker、计算机网络——&gt;通信 8、领导团队开发出语音app v1.0 9、重构博客 生活9、练成双力臂和六块腹肌 10、跑步：运动健康累计300公里 11、理财: 健康的消费链 12、一首歌：先唱拍子、后唱歌词 流利酷酷的美式口语","link":"/2020/02/27/2020%E5%B9%B4%E5%BA%A6%E8%A7%84%E5%88%92/"},{"title":"使用matplotlib绘制单词数量分布条形图","text":"最近在记忆英语单词，想要统计出每个字母下的单词数量多少，然后比对分区，先记少的，再记忆多的，日积月累。 策略：精读+泛记，精多由少到多，泛读由多到少。 于是就决定用python来实现字母数据整理这一步。 主要使用了python的matplotlib中的pylot模块，代码如下： 12345678910111213141516171819202122232425262728293031import matplotlib.pyplot as pltimport matplotlib.font_manager as fmdef number_of_words(): # 绘制图 x_data = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'] y_data = [456, 283, 656, 380, 325, 204, 140, 177, 304, 37, 17, 156, 271, 98, 122, 78, 1, 183, 645, 254, 60, 105, 92, 0, 6, 3] # plt.plot(x_data, y_data, color='red', linewidth=2.0,linestyle='-') plt.bar(x_data, y_data, fc='red') # 选择字体命名 de_font = fm.FontProperties(fname='simfang.ttf') plt.title('背诵单词数量分布', fontproperties=de_font) # 标注数值 for a, b in zip(x_data, y_data): plt.text(a, b, '%.0f' % b, verticalalignment='baseline', horizontalalignment='center') plt.xlabel('字母表', fontproperties=de_font) plt.ylabel('数量', fontproperties=de_font) # 保存画好的图(!先保存后显示) plt.savefig('./words.png') plt.show()if __name__ == '__main__': number_of_words() 总结：在学习拓展库的功能时，不必一次追求大而全，带着目的去学习掌握需要的功能，消化吸收，向外拓展。这次绘图最初使用了折线图，但折线图偏向于反映趋势，并不能很好地展现分布，于是进一步变动有了条形图。绘制出条形图之后，想着再添加一些文字、标注，于是便有了最后的成品。 可以见得，不管多么简单的想法的实现，都是一步步完善的。 附效果图如下：","link":"/2020/12/25/%E4%BD%BF%E7%94%A8matplotlib%E7%BB%98%E5%88%B6%E5%8D%95%E8%AF%8D%E6%95%B0%E9%87%8F%E5%88%86%E5%B8%83%E6%9D%A1%E5%BD%A2%E5%9B%BE/"},{"title":"三月记录","text":"寻找 &emsp;&emsp;我在时光的流逝中寻找自我。 ——题记 &emsp;&emsp;今天是2020年3月31日，三月的最后一天。记得很清楚，是1月10号下午离开学校的，因为疫情爆发，在家里待到现在。 &emsp;&emsp;这一段时间，现在回过头看，像是一副漫长的画卷，描绘着一点一滴复杂起伏的内心跌宕。从放假最初的自己说起，心里踌躇满志，一心是想着做出点事情来证明自己。但是越是这样迫切，反倒越不能沉下心来思考前前后后的得失方向。说真的，浮躁是上学期最大的败笔，回想自己在学校中的一言一行，拘谨与约束是一个阻碍，另一个阻碍便是急于求成。对别人的时候，许多道理都可以明白，可是到了自己，却往往自我怀疑，在摇摆中错失光阴和许多东西。如今看自己，也还缺少一些沉淀，当然比两个月的那个自己好多了。从浮躁中摆脱，是向前行走的必然，多一些思考，多一些坚持与温柔，原则与守候，我想结局绝对不会差。 &emsp;&emsp;说了浮躁，接着说生活。成长好像就是发生在不经意间，这一段时间，在家中自我隔离，真是痛苦、心理变化一出又一出的时光，回忆起来也是伤痛。在伤痛之中，也思考自己，审视自己想要什么，第一个变化就是悦纳自己，我开始接受自己的不完美，我为自己在芸芸众生的渺小而卑微，我经历过无数思考，也仍然会黯然，但悦纳自己之后，这种黯然成为了一种开阔了不少的黯然。所以，接受这个不完美的自己吧，然后，找出不完美去改变自己。就像罗翔老师说的，“我们每个人来到这个世界，都是被迫来到这里，被迫地选择了现在这个剧本，我们被迫在这个剧本里上演并不是我们主动的剧本。可是，尽管被迫选择了这个剧本，我们好好地去上演这个剧本，仍然有许多的精彩在其中”。既然不能选择剧本，那么就在这个剧本中找到自己的精彩，至少改变自己，过去的二十年是活在剧本之下，在往后的日子里活在自己努力追求的精彩里——剧本还是剧本，但我已经不在是我了。 &emsp;&emsp;如何改变自己呢？我是从形象开始的，我想让自己干净而优雅，至少生活上舒服自己，多几份精致。所以，到现在，我也还在探索，也会一直探索下去。头发如何打理、日常中如何维护，胡子的护理，面部的清洁、保湿、水乳、防晒，身体的锻炼，衣服的选择、搭配、品味追求、在生活中的储存管理，个人财产的消费储蓄，兴趣的培养：去学习唱歌，等等。一点点探索，我想要自己变成想要成为的样子。失败是正常的，挫折是必然的，我甚至习惯了走弯路，我想，总有一天，像今天这样，我再看自己，会惊讶，原来你走了这么远。我也一定会记得，会感谢生活，感谢这个时代，感谢除我之外的每个人，他们让一切有了可能。 &emsp;&emsp;打理自己，也不止步于打理自己。我学习python、树莓派、了解计算机，在互联网不断查询，打磨自己，逐步构建本科的学习体系，把我的学习体系归结为工程管理和计算机与人工智能两个专业，我在学习的过程确立锚点，向外拓展，一点一点学习。经历这一步，得到这个结果，中间的曲折真是一言难尽，而且，现在来说，也没有一个准确的答案，秉承的信念是就这样做下去，我喜欢这样，也不需要说服，做就行了。另外，摸索变动中也在电脑、云盘、各个笔记本软件形成了相对稳定的知识学习储存体系——生活、计算机、基础学科三个主干下有着不同的分支，对接触的软件也做了减法，留下合适的软件都有着对应的用途。 &emsp;&emsp;写到这里，脑海里许多零碎的美妙与遗憾也一点一点往出来冒，时间的雕刻下，不曾想我会发生这些体验，这里类比管理学里提到的资源的有限性和欲望的无限性：个人精力是有限的，却有着这么多想要、需要做的事情。所以配置利用好精力很重要。在这之中，去构建一份自己的美好，做好眼前吧，每一刻自然有每一刻的妙处。 零星闪现： 呼吸音准音域 git vim Linux nlp tensorflow 木头 画册 赛博朋克普通disco 法外狂徒张三 罗翔老师 嘟督不geyou 数据库 华为 5G 鞋子 无良印品 pypijs html ps设计 ui 测量 gps 力学 经济 管理 模型 阿里巴巴 不可言说的心里事……","link":"/2020/03/31/%E4%B8%89%E6%9C%88%E8%AE%B0%E5%BD%95/"},{"title":"十一月，《旅程》","text":"作者汪国真 意志倒下了 生命也就不再屹立 歪歪斜斜的身影 怎耐得， 秋叶萧瑟 晚来风急 垂下头颅 只是为了让思想扬起 你若有一个不屈的灵魂 脚下， 就会有一片坚实的土地 无论走向何方 都会有无数双眼睛跟随着你 从别人那里 我们认识了自己","link":"/2020/11/29/%E5%8D%81%E4%B8%80%E6%9C%88/"},{"title":"毛泽东思想和中国特色社会主义概论","text":"思想指南与前进路上的信条 名词解释新民主主义革命理论1、三大法宝： 基本特点、基本武器：统一战线、武装斗争英勇战士：（党的建设）党组织 习近平新时代中国特色社会主义思想及其历史地位 2、中国特色社会主义：主题，根本成就 中国特色社会主义道路：必由之路中国特色社会主义理论体系：正确理论中国特色社会主义制度：根本制度保障中国特色社会主义文化：精神力量 道路自信、理论自信、制度自信、文化自信不走老路 坚持定力 “五位一体”总体布局 3、“三去一降一补”供给侧结构改革问题：产能过剩、楼市库存大、债务高企解决方案：去产能、去库存、去杠杆、降成本、补短板 4、总体国家安全观 国家安全体系：宗旨：坚持国家利益至上，以人民安全为宗旨 根本：政治安全基础：经济安全保障：军事、文化、社会安全依托：促进国际安全 中国特色国家安全道路 5、协商民主一种重要民主形式 中国共产党领导，人民内部各方面开展广泛协商围绕改革开放发展稳定重大问题和涉及群众利益的实际问题决策之前和决策实施 中国特色社会主义特有的形式和独特优势 中国特色大国外交 6、构建人类命运共同体思想的基本内涵一个科学完整、内涵丰富、意义深远的思想体系核心：建设持久和平、普遍安全、共同繁荣、开放包容、清洁美丽的世界 7、新时代中国共产党的历史使命统揽伟大斗争、伟大工程、伟大事业、伟大梦想建成社会主义现代化强国（全面建成小康社会的基础上）实现中国民族伟大复兴的中国梦 简答题社会主义建设道路初步探索的理论成果 1、中国特色社会主义建设改革开放前后两个时期的关系: （1）互相联系又有区别，本质是我们党领导人民进行社会主义建设的实践探索（2）前者为后者积累了经验并准备了条件；后者是对前者的坚持、改革、发展（3）对前者，要坚持实事求是的思想路线，分清主流和支流，坚持真理，修正错误，发扬经验，吸取教训，在这个基础上把党和人民事业继续推向前进 科学发展观 2、科学发展观“以人为本”的核心思想与西方人本主义、中国民本思想的本质区别： 中国民本思想，君本位，维护封建统治而驭民治民 西方人本主义，以个人为本位，为资产阶级取得和维护统治地位服务 科学发展观，以人为本 坚持人民的利益高于一切，实现好、维护好发展好最广大人民的根本利益 习近平新时代中国特色社会主义思想及其历史地位 3、“八个明确”和“十四个坚持”之间的相互关系： 八个明确： 指导思想层面的表述/怎么看/回答问题：新时代坚持和发展什么样的中国特色社会主义十四个坚持：行动纲领层面的表述/怎么办/回答问题：新时代怎样坚持和发展中国特色社会主义习近平新时代中国特色社会主义思想理论与实践的统一 坚持和发展中国特色社会主义的总任务 4、认识总任务： 总任务是建成社会主义 现代化 强国实现复兴在全面建成小康的基础上分两步走：富强民主文明和谐美丽中国梦是形象表达 “五位一体总布局” 5、创新、协调、绿色、开放、共享五大发展理念的内在关系： 1相互贯通、相互促进，具有内在联系的集合体 2解决xxx的问题：创新——发展动力协调——发展不平衡绿色——人与自然和谐开放——发展内外联动共享——社会公平正义 3从整体上把握新发展理念，提高统筹贯彻新发展理念的能力和水平推动建设现代化经济体系 6、如何新时代坚持中国特色社会主义政治发展道路： 认识到——道路是必然结果（历史逻辑、理论逻辑、实践逻辑）/必然要求（坚持党的本质属性、践行党的根本宗旨） 以更大的力度、更实的措施发展社会主义民主坚持 党的领导、人民当家做主、依法治国 有机统一坚持正确政治方向，保持政治定力坚持从国情出发、从实际出发把握过去的经验积累现实的问题增强信心、决心 7、意识形态工作领导权： 坚持马克思主义指导地位构建中国特色哲学社会科学坚持正确的舆论导向建设好网络空间落实好意识形态工作责任制 四个全面战略布局： 8、为什么推进国家治理体系必须解决好价值问题： 是：重要途径——社会系统得以正常运转、社会秩序得以有效维护重要方面——国家治理体系和治理能力为：关系社会和谐稳定、国家长治久安做：培育价值体系、价值观构建价值体系（中国特色 民族特性 时代特征）抢占价值体系制高点 论述题1、如何形成人与自然发展新格局： 要坚持节约资源和保护环境的基本国策，为人民创造良好的生产生活环境，形成人与自然发展新格局（1）把节约资源放在首位狠抓节能减排降低消耗/水资源节约利用/矿产资源节约利用/土地资源节约利用（2）坚持保护优先，自然恢复为主 （3）推进绿色发展、循环发展、低碳发展（4）形成节约资源和保护环境的空间格局、产业结构、生产方式、生活方式 2、准确把握国家治理的关键和根本： 《中共中央关于坚持和完善中国特色社会主义制度、推进国家治理体系和治理能力现代化若干重大问题的决定》始终坚持党的集中统一领导完善坚持党的领导的体制机制 四个全面战略布局 3、全面小康是全面发展的小康 全面：发展的平衡性、协调性、可持续性/小康：发展水平（1）覆盖的 领域 要全面，五位一体全面进步的小康（2）覆盖的 人口 要全面，是惠及全体人民的小康（3）覆盖的 区域 要全面，是城乡共同发展的小康（4）要实事求是，因地制宜 4、为什么说党的领导是中国特色社会主义最本质的特征： （1）由科学社会主义的理论逻辑所决定，坚持无产阶级政党的领导是无产阶级革命和社会主义建设取得胜利的根本保证（2）历史逻辑所决定，中国共产党是中国特色社会主义事业的开创者、推动者、引领者（3）实践逻辑决定，实现复兴、关键在党。","link":"/2020/11/08/%E6%AF%9B%E6%A6%82%E6%80%BB%E7%BB%93/"},{"title":"记录施工企业会计学一点感悟","text":"复习的过程对会计学有了一些认识，记录。 最近触动很大的一个学习观念——“我一直认为，在学习上，智商比方法重要，方法比努力重要”。思考是生产第一驱动力。 所以，一直去思索如何更高效地获取知识、内化。 我对会计学的认识，或者说学习。先达到一个及格的框架，了解清楚学习的主干，在这个主干上是实践的精华，而任何深入的学习都基于这个主干去拓展丰富，时间投入的多少了。 会计学源于人们对经济活动记录方法的思考，这一学科，最基础的便是记录经济业务的往来。 那么如何完善、精确地记录每一社会单位的经济行为呢？特定的语言与特定的方法。在我学习的施工企业会计里，就是用借贷记账符号表示每一笔业务的来龙去脉，然后在借贷的基础上，引入复式记账，构成会计基础核算体系。 这一基础体系静态叫做资产负债记录，动态又引入了成本、费用，叫做利润记录。 一条条记录按照一定的时间组合，形成凭证期间的集合体，集合体的汇集便是帐薄。 会计的主干体系也由此而生，底层到顶层，这些脉络分明的账目为我们提供了许许多多可以反映的信息，供社会公众、政府相关部门、企业高管、债权人和投资人研读。 其中的细节之处每每想起，也让人赞叹其中的活性。 单从资产=负债+所有者权益这一等式去散发思考，资产细化有固定资产、存货、固定资产、无形资产等，每一个细化之下有着主干的账目又从主干的账目动态地设置了应对日常变化的准备变动。 举个例子，固定资产是一级科目，所有的资产是在这一出核算，但为了反映更多问题，固定资产对应又设置了累计折旧、在建工程、工程物资、固定资产减值、固定资产清理。这些账目每一个都具有现实意义——累计折旧反映企业固定资产的使用、在建工程反映正在建设的工程的成本、工程物资为在建工程服务、固定资产清理又是对企业资产发生“特殊”情况的一种考虑。 前前后后，全面地记录忠实地反映问题，会计的妙处也在其中体现的淋漓尽致。 最后，写到这里想到所学的会计学对现实情况建立了四个基本假设——大体来说，就是企业健康地运营下去，按照期间统计业务变动等。这一模型简化现实，专注于问题本身的主要矛盾，也是科学学习中的一种常见的处理问题的手段。 学而不思则罔，思而不学则殆。 ——2020/12/03","link":"/2020/12/03/%E8%AE%B0%E5%BD%95%E6%96%BD%E5%B7%A5%E4%BC%81%E4%B8%9A%E4%BC%9A%E8%AE%A1%E5%AD%A6%E4%B8%80%E7%82%B9%E6%84%9F%E6%82%9F/"},{"title":"python编程","text":"第三次学习python，之前对编程学习一直是伴随着网课教程的思路，几经浮沉，总是不得要点，近日静下心来细细回味之前学习的零散知识点，带着“我想掌握python的哪些知识，想用它来做什么”的问题，来学习这一门编程语言，于是，构建了如下基础知识体系。 知识体系构建思路处理现实问题，从对一个py文件的控制到几个py文件之间的控制，形成python内部的一体化。然后掌握出现意外如何处理的手段，在这个基础上了解更多库，学习与其他语言的互通、学习现实性问题的处理，包括文件。 Python Tutorial一、函数的定义、调用与参数相关细节1、最简单的定义与调用定义函数 123456def fib(n): a, b = 0, 1 while a &lt; n: print(a, end=' ') a, b = b, a + b print() # 空行 调用函数 12if __name__ == '__main__': fib(100) 2、关于调用定义： 123456789101112# 对一个或多个参数指定默认值def ask_ok(prompt, retries=4, reminder='Please try again!'): while True: ok = input(prompt) if ok in ('y', 'ye', 'yes'): return True if ok in ('n', 'no', 'nop', 'nope'): return False retries = retries - 1 if retries &lt; 0: raise ValueError('invalid user response') print(reminder) 调用： 12345if __name__ == '__main__': # ask_ok函数的调用方法 # ask_ok('Do you really want to quit?') # 只给出必需的参数 # ask_ok('OK to overwrite the file?', 2) # 给出一个可选的参数 ask_ok('OK to overwrite the file?', 2, reminder='Come on, only yes or no!') # 给出所有的参数 默认值是在函数定义处计算的12345678i = 5def f(arg=i): print(arg) i = 6f() 默认值只会执行一次123456789101112131415161718192021222324252627282930def f2(a, one=[]): # 测试默认值执行的次数 one.append(a) return onedef f3(a, eli_one=None): if eli_one is None: eli_one = [] eli_one.append(a) return eli_oneif __name__ == '__main__': # 测试默认值参数调用次数 print(f2(1)) print(f2(2)) print(f2(3)) print(f3(1)) print(f3(2)) print(f3(3)) 运行结果： [1][1, 2][1, 2, 3][1][2][3] 3、关键字参数关键字参数跟随在位置参数的后面1234567891011121314151617181920212223242526272829303132333435363738394041424344454647def parrot(voltage, state='a stiff', action='vcom', type='Norwegian Blue'): print(&quot;-- This parrot wouldn't&quot;, action, end=' ') print(&quot;if you put&quot;, voltage, &quot;volts through it.&quot;) print(&quot;-- Lovely plumage, the&quot;, type) print(&quot;-- It's&quot;, state, &quot;!&quot;) if __name__ == '__main__': # 关键字参数的学习 parrot(1000) # 1 positional argument print() parrot(voltage=2000) # 1 keyword argument print() parrot(voltage=1000, action='VOOOOOM') # 2 keyword arguments print() parrot(action='VOOOOOM', voltage=1000) # 2 keyword arguments print() parrot('a million', 'bereft of life', 'jump') # 3 positional arguments print() parrot('a thousand', state='pushing up the daisies') # 1 positional, 1 keyword 结果：-- This parrot wouldn't vcom if you put 1000 volts through it.-- Lovely plumage, the Norwegian Blue-- It's a stiff !-- This parrot wouldn't vcom if you put 2000 volts through it.-- Lovely plumage, the Norwegian Blue-- It's a stiff !-- This parrot wouldn't VOOOOOM if you put 1000 volts through it.-- Lovely plumage, the Norwegian Blue-- It's a stiff !-- This parrot wouldn't VOOOOOM if you put 1000 volts through it.-- Lovely plumage, the Norwegian Blue-- It's a stiff !-- This parrot wouldn't jump if you put a million volts through it.-- Lovely plumage, the Norwegian Blue-- It's bereft of life !-- This parrot wouldn't vcom if you put a thousand volts through it.-- Lovely plumage, the Norwegian Blue-- It's pushing up the daisies ! 剩余的形参中，位置参数用收集，关键字参数用*收集。12345678910111213141516171819202122232425def cheese_shop(kind, *arguments, **keywords): print(&quot;-- Do you have any&quot;, kind, &quot;?&quot;) print(&quot;-- I'm sorry, we're all out of&quot;, kind) for arg in arguments: print(arg) print(&quot;-&quot; * 40) for kw in keywords: print(kw, &quot;:&quot;, keywords[kw]) if __name__ == '__main__': # 剩余参数的收集 cheese_shop(&quot;Limburger&quot;, &quot;It's very runny, sir.&quot;, &quot;It's really very, VERY runny, sir.&quot;, shopkeep=&quot;Michael Pallin&quot;, client=&quot;John Cleese&quot;, sketch=&quot;Cheese Shop Sketch&quot;)结果：-- Do you have any Limburger ?-- I'm sorry, we're all out of LimburgerIt's very runny, sir.It's really very, VERY runny, sir.----------------------------------------shopkeep : Michael Pallinclient : John Cleesesketch : Cheese Shop Sketch 4、限制参数调用方式正斜杠之前放置限制位置参数，*之后仅限关键字参数，二者之间随意 12345678910111213141516171819202122def standard_arg(arg): print(arg)def pos_only_arg(arg, /): print(arg)def kwd_only_arg(*, arg): print(arg)def combined_example(pos_only, /, standard, *, kwd_only): print(pos_only, standard, kwd_only)if __name__ == '__main__': # 不同调用方式比对 standard_arg(2) pos_only_arg(1) # 希望形参名称对用户不可用时使用、对API，防止形参名称修改时造成破坏性的API变动 kwd_only_arg(arg=2) # 形参有实际意义、防止过度依赖传入参数的位置时 combined_example(1, 2, kwd_only=3) 使用仅限位置参数，对API，可以防止形参名称被修改时造成的破坏性的API变动 当然，若形参有实际意义、防止过度依赖传入参数的位置时，使用仅限关键字参数 二、控制函数内部细节的方法 1、2、3是关于定义、调用函数的细节、技巧… 1、解包参数列表调用函数时用，解析参数传递 12345678def unpack_para(): args = [3, 6] show = list(range(*args)) print(show) if __name__ == '__main__': # 将元组里的参数**解包**分别传递给调用的函数 unpack_para() 2、lambda表达式两个作用：一是返回一个函数；二是传递一个小函数作为参数 123456def lambda_test(n): return lambda x: x + n if __name__ == '__main__': f = lambda_test(42) print(f(8)) 123456789def transport(): pairs = [(1, 'one'), (2, 'two'), (3, 'three'), (4, 'four')] pairs.sort(key=lambda pair: pair[1]) print(pairs) if __name__ == '__main__': # 传递小函数作为参数 transport() 3、关于文档标注标注参数、返回值的属性 12345678910111213def annotations_test(ham: str, eggs: str = 'eggs') -&gt; str: &quot;&quot;&quot; 函数标注的使用例子：其中分别有对位置参数、关键字参数、返回值的标注 &quot;&quot;&quot; print(&quot;Annotations:&quot;, annotations_test.__annotations__) print(&quot;Arguments:&quot;, ham, eggs) return ham + ' and ' + eggs if __name__ == '__main__': # 函数标注（和文档字符串一起学习的） result = annotations_test('spam') print(fibonacci.__annotations__) print(result) 3、列表推导3、解包、打包4、zip函数等等三、模块（实现py文件之间的控制）1、认识模块模块就是一个.py文件，模块之间可以互相引用，在实际编程，以主模块为核心，编写各种功能模块。 通过.__name__获得当前模块名称 制作模块： 123456789101112131415161718# 学习模块的使用，构建更大项目# 函数放在主函数之外的其他地方def fib(n): a, b = 0, 1 while a &lt; n: print(a, end=' ') a, b = b, a + b print()def fib2(n): result = [] a, b = 0, 1 while a &lt; n: result.append(a) a, b = b, a+b return result 使用模块： 123456789import fiboif __name__ == '__main__': # 访问做好的模块 fibo.fib(1000) print(fibo.fib2(100)) # 当前模块的名称 print(fibo.__name__) 技巧：如果经常使用某一函数，可以赋值到一个变量上。 123# 导入模块，赋值简化方便后续使用 fib = fibo.fib fib(500) 2、更多关于模块（1）函数定义和可执行语句在第一次导入时被执行，用来初始化模块。 （2）每个模块都有一个私有符号表： 主模块的全局变量不会和其他模块发生冲突 可以用访问函数的方法去访问一个模块的全局变量 同样，可以指定导入模块的对应私有符号变量而不去导入模块本身 使用*符号导入除了以下划线开头的名称之外的所有名称（通常情况不要这样做，因为可能会导入一些未知的函数覆盖调自己定义的东西） 可以用as指定别名 12from fibo import fib, fib2fib(500) （3）每个模块在解释器中执行一次，更改了模块的内容得重启。 在交互测试中可以这样做： 12import importlibimportlib.reload(modulename) 3、执行模块使用脚本传入参数执行模块 123456789python module.py &lt;arguments&gt;# =======if __name__ == '__main__': # 脚本方式执行模块 import sys fib(int(sys.argv[1])) 技巧：添加main，只有在主模块执行时下面的内容才被调用，经常用于提供一个很方便的用户接口或者用于测试 4、模块搜索路径当一个模块被导入，解释器寻找次序为： （1）具有该名称的内置模块； （2）从sys.path变量给出的目录里面找module.py的文件 sys.path的初始路径：输入脚本的目录（未指定文件时为当前目录）、PYTHONPATH（一个包含目录名称的列表）、取决于安装的默认位置 ！在初始化之后可以更改sys.path，包含正在运行的脚本的文件目录将被放在搜索路径的开头，在标准库路径之前。所以，不要让文件和标准库重名了。 5、关于编译过的python文件在__pycache__缓存.pyc文件，会让载入速度变快但并不对执行起作用。 两种情况不检查缓存：（1）命令行载入的；（2）没有源模块。 - O 编译时去除断言，- OO编译时去除断言和__doc__字符串 compileall模块可以为一个目录下的所有模块创建.pyc文件 6、dir()函数（1）查看模块定义的名称，返回字符串列表 默认返回当前定义的名称，会列出所有类型的名称 （2）要查看内置函数和变量名称： 12import builtinsdir(builtins) 7、包（1）模块的集合，分层的文件系统，__init.py__是标志。 导入方法类似上述的模块（第2点） （2）关于__init.py__文件： 可以只是一个空文件，也可以是执行包的初始化代码或设置__all__变量： 包中导入*时，可能会产生不必要的副作用，所以此时可以提供一个包的显式索引，即： 12345678from package import *设置：__all__ = ['moduleA','moduleB']如果没有设置__all__:不会导入包中的任何子模块，只确保 导入当前的模块和运行任何在__init.py__中的代码，然后导入包中定义的任何名称总结：建议使用from package import specific_submodule （3）包除了绝对导入外，还可以相对导入：“子包参考” 四、类（更好地控制py文件实现功能）1、理解命名空间和作用域 命名空间：名字到对象的映射 作用域：一个命名空间可直接访问的python程序的文本区域 global：将变量关联到全局作用域 12345678910111213141516171819202122232425def scope_test(): def do_local(): spam = &quot;local spam&quot; def do_nonlocal(): nonlocal spam spam = &quot;nonlocal spam&quot; def do_global(): global spam spam = &quot;global spam&quot; spam = &quot;test spam&quot; do_local() print(&quot;after local: &quot;, spam) do_nonlocal() print(&quot;after nonlocal: &quot;, spam) do_global() print(&quot;after global: &quot;, spam)if __name__ == '__main__': # 理解作用域与命名空间，一个命名空间下的多个作用域 scope_test() print(&quot;In global scope: &quot;, spam) 2、类&lt;–&gt;实例：属性引用（1）类的属性引用 属性引用：返回内容或者函数对象 1234567891011121314class MyClass: &quot;&quot;&quot;A simple class&quot;&quot;&quot; i = 12345 def f(self): return 'hello world'if __name__ == '__main__': # 属性引用 # MyClass.i = 'changed' 类的属性可以被赋值，可以通过赋值来更改值 print(MyClass.i) # 返回一个整数 print(MyClass.__doc__) print(MyClass.f) # 返回一个函数对象 （2）实例的属性引用 可以视之为不带参数的函数，常常包含一个名为__init__()的特殊方法 self即是类本身，初始化方法的使用： 12345678910class Complex: def __init__(self, realpart, imagpart): self.r = realpart self.i = imagpartif __name__ == '__main__': # 实例化2 x2 = Complex(3.0, -4.5) print('实数部分：%.1f；虚数部分：%.1f' % (x2.r, x2.i)) 数据属性赋值时产生，实例化时的专有名词，对应类时的变量 1234567# 实例化的属性引用: 数据属性x.counter = 1while x &lt; 10: x.counter = x.counter * 2print(x.counter)del x.counter 方法 类的属性引用叫做函数对象&gt;&gt;&gt;实例化之后的引用叫做方法 方法可以在绑定后被立即调用，也可以被保存起来以后再调用 123# 方法 类的属性引用叫做函数对象 实例化之后的引用叫做方法xf = x.f # 注意这里！！！ x.f:绑定，不立即调用； x.f():绑定后立即调用print(xf()) 方法：实例对象会作为函数的第一个参数被传入，调用x.f()相当于MyClass.f(x) 3、类和实例中的“变量”实例中的实例变量是每个实例的唯一数据，类中的变量是所有实例共享的属性和方法。 123456789101112131415161718class Dog: kind = 'canine' # class variable shared by all instance def __init__(self, name): self.name = name # instance variable unique to each variableif __name__ == '__main__': # 类和实例变量 d = Dog('Fido') e = Dog('Buddy') print(&quot;=== shared by all variable ===&quot;) print(d.kind) print(e.kind) print(&quot;=== unique by each variable ===&quot;) print(d.name) print(e.name) ！注意：类中的变量会共享给所有实例，要想使得某个变量被独享，应该放在初始化方法中 *反例: * 属性引用被映射到了公共区域，若是想要独享，只要映射在实例特有区域便可 1234567891011121314151617181920212223242526272829303132333435363738class Dog: kind = 'canine' # class variable shared by all instance tricks = [] def __init__(self, name): self.name = name # instance variable unique to each variable def add_tricks(self, trick): self.tricks.append(trick)class Dog2: def __init__(self, name): self.name = name # instance variable unique to each variable self.tricks = [] def add_tricks(self, trick): self.tricks.append(trick)if __name__ == '__main__': # 共享范围对比 print(&quot;=== 这是放在类的共享区域里： ===&quot;) d = Dog('Fido') e = Dog('Buddy') d.add_tricks('roll over') e.add_tricks('play dead') print(d.tricks) print(&quot;=== 这是利用初始化，为每个实例创建的空间： ===&quot;) d2 = Dog2('Fido') e2 = Dog2('Buddy') d2.add_tricks('roll over') # 换言之，实例将属性引用映射到了不同的位置：查找时一般时先映射到共享的类的位置，再是映射到每个实例下。 e2.add_tricks('play dead') print(d2.tricks) print(e2.tricks) 4、属性查找优先级同样的属性名称同时出现在类和实例中，则属性查找会优先选择实例。 123456789101112class Warehouse: purpose = 'storage' region = 'west'if __name__ == '__main__': w1 = Warehouse() print(w1.purpose, w1.region) print(&quot;=====前后对比=====&quot;) w2 = Warehouse() w2.region = 'east' print(w2.purpose, w2.region) 方法可以引用全局名称，比如模块、函数。 5、继承派生类：DerivedClassName(BaseName): 当构造类对象时，基类会被记住，用来解析属性引用： 请求的属性在当前类中找不到，上一级去基类中找。再找不到，如果有基类的基类，就继续递归式地查找。 派生类可能重载基类的方法 两个内置函数可以被用于继承机制： 12isinstance() 检查一个实例的类型issubclass() 检查类的继承关系 6、私有变量、一些说明下划线的名称改写 7、迭代器123456789101112### 8、生成器用于创建迭代器的工具，使用```yield```语句#### * 生成器表达式语法类似与列表推导式，外层为圆括号。```python# 生成器表达式print(&quot;使用生成器表达式：&quot;, sum(i*i for i in range(10))) 五、异常（出现意外的处理手段）1、捕获（程序处理法）2、日志（debug法）六、标准库和文件（解决现实问题初步）","link":"/2020/12/25/python/"},{"title":"matlab","text":"本篇内容是我用matlab学习图像处理的记录 Q:how to improve my coding force level A:我会找个教程/文档例子，把代码逐行敲一遍，感觉就像是我自己写的一样，一旦完成，我会从头重写一遍，添加注释，并根据自己的用例修改它。 结合右侧的目录学习体验会更好 基础语法matlab界面 我们常规见到的界面应该包括在如图的6个窗口中： 1234561、命令行窗口：这是MATLAB运行命令的主要位置2、编辑器：编程工作区3、菜单栏：常规功能4、变量：显示变量的具体内容5、当前文件夹&amp;详细信息：这两个是分不开的6、工作区：显示了当前工作状态下的所有变量 命令行窗口命令行窗口可以快速运行一些计算或执行命令。当出现提示光标&gt;&gt;时，即代表命令行准备就绪 12345678910&gt;&gt; 1+2ans = 3&gt;&gt; 使用命令行窗口还有一个非常好用的小trick，那就是在命令行准备就绪时，可以使用上方向键直接调取历史命令。而如果你已经输入了一些内容，则会调取与你输入内容开头相匹配的命令。 编辑器我们总是希望编写完程序后可以自动运行，而不是每次都手动输入命令。在编辑器中，我们可以编辑脚本文件或函数文件，其语法与命令行相同。 菜单栏菜单栏覆盖了几乎所有的初学MATLAB的操作。例如，我们点击菜单栏中的“主页”-&gt;“新建脚本”，将会自动跳转到新的脚本界面。我们编辑以下脚本内容： 12345% 绘制y=x^2的图像a = 1:10;b = a.^2;plot(a,b); 点击菜单栏中“编辑器”-&gt;“保存”，将脚本文件命名为“Script2_1.m”将结果直接保存至当前文件夹。再次点击“运行”，即可出现下图所示结果。 变量运行完刚刚的程序，可以看到我们的工作区中目前有a，ans，b三个变量。我们双击a变量，即可打开变量窗口。可以看到下图所示的内容。 “1×10 double”表明该变量的大小为1行×10列，每个元素的类型均为double（双精度浮点数）。以此点击别的变量，我们可以看到对应的变量内容。 需要注意的是，在变量窗口中，变量的值是可以直接被修改的。双击其中的一个元素，即可对元素进行更改。 当前文件夹&amp;详细信息同菜单栏下方的地址栏一起，表明你当前的工作位置。正常情况下，当前文件夹中显示的文件夹均为透明，表明这些文件夹处于不可用状态，即不在你的工作区当中。 这两者有什么区别呢？我们在当前文件夹中右键，创建一个新文件夹。接着，我们再次创建一个脚本“Script2_2.m”，并保存至新创建的文件夹下。这时我们在命令行窗口中输入“Script2_1”，可以看到之前编写的程序重新运行。但是我们如果输入“Script2_1”，将会提示“未定义函数或变量 ‘Script2_1’。”这就是因为我们新创建的文件夹并不属于当前工作区导致的。 解决方法就是右击新建的文件夹文件夹，选择“添加到路径”，根据情况选择是否需要添加子文件夹即可。这时我们可以看到，原本透明的文件夹已经变得不透明，其中的脚本文件也可以成功运行。 如果我们选择“Script2_1.m”，可以看到详细信息中出现了“绘制y=x^2的图像”，这正是我们编写脚本时开头的注释。因此这里希望大家养成良好的习惯，在编写脚本时在开头使用注释简单说明程序功能，以方便之后的查找。 PS：在当前文件夹中，可以进行各种常规资源管理器操作，例如复制、粘贴、重命名等。 工作区工作区显示了当前状态下的所有变量情况，包括名称、值等。左键标题可以进行排序，右键标题即可选择显示的内容，双击变量即可打开变量窗口。 另外，在工作区中选择变量后，按Del键可以删除变量。 如果想快速清除所有变量，可以在命令行中输入clear。 当不清楚一个功能时，在命令行窗口输入用 help + 查询函数会有官方解释，（网上查也是一种选择） 有用的函数指令 clc: 清空命令行窗口 clear: 清空工作变量区的所有变量 close all； 关闭建立的所有窗口 数据类型接下来我们将学习MATLAB中的各种数据类型，主要包括10种基本数据类型和4种复合数据类型。 基本数据类型和一般的编程语言一样，MATLAB的基本数据类型分为两种，即整型(int)和浮点数(float)。其中整形根据其是否包含负数可以进一步分为有符号整形和无符号整形，而浮点数根据其精度不同又可以进一步划分为单精度浮点数和双精度浮点数。下面的表格列出了各种基本数据类型对应的表示范围，这里类型名称沿用了一般编程语言中的名称。 (图像初期用到的基本数据类型是unit8和double类型。) 在MATLAB中，不显式指定数据类型的情况下，默认所有的数据类型均为double类型。如果需要创建一个其他类型的变量，只需要加上其符号名即可，例如 1234a = int8(13); % 创建一个字节型整数13b = single(25.56); % 创建一个单精度浮点数25.56c = -32; % 未显式指明数据类型，创建一个双精度浮点数32 MATLAB中，有几个特殊的常量，它们分别是： pi：圆周率π eps：最小浮点数 Inf：正无穷大，即1/0 NaN：非数，即0/0 i,j：虚数单位复合数据类型——矩阵类似一般编程语言中的数组，MATLAB中也有很多复合数据类型，可以将众多基本数据类型合并到一起。最为常见的符合数据类型包括矩阵，结构体和元胞矩阵。 矩阵是MATLAB中的基本运算单元，即使是一个数在MATLAB中也是被当做1*1的矩阵看待的。矩阵由若干维度组成，例如0维矩阵表示一个元素，1维矩阵表示一个向量，还有2维、3维甚至更高维的矩阵。在MATLAB中，常规矩阵的最小维度为2维，即一般数学意义上的矩阵，而标量、向量都是矩阵的特例。下面我们将以2维矩阵为例，介绍其生成与运算。 矩阵的生成方式主要包括以下几种方式： 矩阵的生成–直接输入利用直接输入的方法，我们可以生成一个矩阵。输入的矩阵用中括号表示，同一行元素之间使用逗号或空格分开，用分号或回车结束一行的输入。例如 123456789101112131415&gt;&gt; a = [1,2,3; 4,5,6]a = 1 2 3 4 5 6&gt;&gt; b = [2 3 45 6 7]b = 2 3 4 5 6 7 当输入的矩阵不指定变量名称时，结果将暂时保存到ans变量中，即 1234567&gt;&gt; [2,3; 3,4]ans = 2 3 3 4 如果没有及时保存结果，ans变量中的内容将会被下一次不指定变量名称的输出结果覆盖。 矩阵的生成–函数生成MATLAB中有一些好用的函数，用于构造一些具有特殊性质的矩阵。例如常用的构造函数： 12345678910111213141516171819202122&gt;&gt; zeros23 = zeros(2,3) % 生成2*3的零矩阵zeros23 = 0 0 0 0 0 0&gt;&gt; ones3 = ones(3) % 生成3*3的全1矩阵，方阵只需要输入行数ones3 = 1 1 1 1 1 1 1 1 1&gt;&gt; eye32 = eye(3,2) % 生成3*2的单位对角阵eye32 = 1 0 0 1 0 0 类似的函数还有rand()（生成随机矩阵）, magic()（生成幻方矩阵）等，大家可以自行尝试。 矩阵计算MATLAB中提供了以下的矩阵运算符 +（加法），-（减法），*（乘法），’（转置），\\（左除），/（右除），^（乘幂）在使用矩阵运算符的过程中，应使得操作矩阵符合矩阵运算性质。例如 123456789101112131415161718192021222324&gt;&gt; ones(2)^3ans = 4 4 4 4&gt;&gt; eye(3,2) * eye(2,4)ans = 1 0 0 0 0 1 0 0 0 0 0 0&gt;&gt; ans'ans = 1 0 0 0 1 0 0 0 0 0 0 0 特别的，当加法、减法和乘法作用于矩阵和标量时，代表对矩阵中每个元素进行对应的处理，例如 12345678910111213&gt;&gt; eye(2,3) + 1ans = 2 1 1 1 2 1&gt;&gt; 4.5*ones(2)ans = 4.5000 4.5000 4.5000 4.5000 另外，对于左除和右除，其用法如下： 设\\(A\\)为可逆矩阵，\\(AX=B\\)的解是\\(X=A\\setminus B\\)，\\(XA=B\\)的解是\\(X=B/A\\)。除此之外，矩阵还有一些特殊的运算，称之为“点”运算，使用较多的包括.*（点乘）和.^（点乘幂）。点运算的特殊之处在于，它不是按照矩阵的运算规律进行计算的，而是对具有相同大小的两矩阵，将对应元素进行乘或乘幂的操作。例如 1234567891011&gt;&gt; [1,2,3] .* [4,5,6]ans = 4 10 18&gt;&gt; [1,2,3] .^ [4,5,6]ans = 1 32 729 冒号运算符与矩阵拼接在MATLAB中，:（冒号运算符）是非常重要的一个符号，利用冒号可以轻松表示等差数列。例如 1234567891011&gt;&gt; a = 1:5 % 创建从1到5，公差为1（可省略）的等差数组a = 1 2 3 4 5&gt;&gt; b = 1:3:10 % 创建从1到10，公差为3的等差数组b = 1 4 7 10 取出矩阵元素时，我们只需要指定选取的行号与列号即可。请注意，MATLAB中所有下标均从1开始而非从0开始，请一定牢记！！！ 1234567891011121314151617181920212223242526272829303132333435363738394041424344&gt;&gt; a = magic(5)a = 17 24 1 8 15 23 5 7 14 16 4 6 13 20 22 10 12 19 21 3 11 18 25 2 9&gt;&gt; a(3,2) % 选取a的第3行，第2列元素ans = 6&gt;&gt; a(1:2,2:4) % 选取a的1~2行，2~4列元素ans = 24 1 8 5 7 14&gt;&gt; a(2,:) % 选取a的第2行，所有列元素ans = 23 5 7 14 16&gt;&gt; a(1:2:5,[2,5]) % 选取a的第[1,3,5]行，第[2,5]列元素ans = 24 15 6 22 18 9&gt;&gt; a(3:end,4) % 选取a的第三行到最后一行，第4列元素ans = 20 21 2 基于此，我们可以对长度吻合的矩阵进行拼接，例如 123456789101112131415&gt;&gt; a = [1:5, ones(1,3); zeros(2,8)]a = 1 2 3 4 5 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0&gt;&gt; b = [a(1,1:2:7); 4:-0.5:2.5]b = 1.0000 3.0000 5.0000 1.0000 4.0000 3.5000 3.0000 2.5000 除了冒号运算符，还有一种生成等差数列的方式，即使用linspace(a,b,n)函数生成从a到b共n个数值的等差数列。同样的，利用logspace(a,b,n)可以生成从(10^a)到(10^b)共n个数值的等比数列。例如 1234567891011&gt;&gt; a = linspace(0,pi,5)a = 0 0.7854 1.5708 2.3562 3.1416&gt;&gt; b = logspace(0,1,4)b = 1.0000 2.1544 4.6416 10.0000 注意，无论使用冒号运算符，或是linspace函数，生成的矩阵均为1*n的矩阵，即为行向量。使用转置符号可以将其转置为列向量。 复合数据类型——字符串上面介绍的所有类型均为数字类型的变量。而最常见的非数类型的变量就是字符串了。MATLAB中，使用单引号表示字符串： 123456&gt;&gt; a = 'hello'a =hello 字符串是一个特殊的行向量，其每个元素是一个字符。 12345&gt;&gt; b = a(2:4)b =ell 字符串的拼接类似数组的拼接，但是需要注意由于字符串是行向量，只能进行横向拼接，否则将会报错。 [a,b]1234ans =helloell 字符串和数字之间的转换也十分容易，可以利用num2str()和str2num()函数进行： 123456789101112&gt;&gt; ['1+1=', num2str(1+1)]ans =1+1=2&gt;&gt; 2 + str2num('3.2')ans = 5.2000 复合数据类型——结构体（了解）结构体是一种特殊的数据类型，是由“变量”和其拥有的“字段”共同组成的，在初学阶段可能见到的比较少，更多的是调用MATLAB内置函数后生成的结构体变量。例如一个学生，他拥有姓名、年龄、期末成绩三个“字段”。利用“.”点运算，我们可以这样定义一个学生： 1234567891011121314151617181920&gt;&gt; student.name = 'Mike'student = name: 'Mike'&gt;&gt; student.age = 22student = name: 'Mike' age: 22&gt;&gt; student.grade = [83,80,85,90]student = name: 'Mike' age: 22 grade: [83 80 85 90] 可以看到，随着我们不断向student变量中增加字段，其包含的信息也越来越多。同样的，我们也可以使用struct(filed,value,…)的方式直接生成结构体： 1234567891011121314&gt;&gt; student = struct('name','Mike','age',22,'grade',[83,80,85,90])student = name: 'Mike' age: 22 grade: [83 80 85 90]&gt;&gt; student.gradeans = 83 80 85 90 如果想要了解更多关于结构体的用法，可以查阅MATLAB的帮助文档。 复合结构类型——元胞矩阵（了解）元胞矩阵是矩阵的一种扩展，虽然直到现在我也不知道这个名字是怎么取出来的。在矩阵中，一个元素代表的都是一个数，或者都是一个字符。但是在元胞矩阵中，这种限制被打破，不同位置可以拥有任何类型的元素，包括字符串，数值或矩阵。为了区分元胞矩阵和普通矩阵，我们使用大括号进行定义，在使用元素时，也是用大括号对其进行取出。 123456789101112131415161718&gt;&gt; a = {'hello',500; [30,20,40],[]}a = 'hello' [500] [1x3 double] []&gt;&gt; a{1,1}ans =hello&gt;&gt; a{2,1}(3)ans = 40 可能你在尝试的过程中也发现了，利用小括号也能对其元素进行取出。关于这两种方式有何不同，我们将在之后的一篇关于元胞矩阵的讨论中再次提到。同样的，MATLAB的帮助文档永远是你的好帮手。 流程控制通过前面的内容，我们已经对MATLAB中的数据类型和一些简单的命令有所了解。这篇文章将主要介绍一下MATLAB中的流程控制语句，包括顺序执行、条件控制和循环控制。相信经过这篇文章的学习，你已经可以写出像模像样的MATLAB程序了。 顺序执行可能你已经注意到了，我们之前的语句都是在命令行窗口中进行编写的。这样虽然可以及时得到反馈，但是如果我们想要同时执行多个语句则是非常困难的。因此我们将利用MATLAB的脚本m文件，使其从一个“大计算器”变成一个“编程工具”。 顺序执行是程序执行过程中最基本的执行方式，在MATLAB中也不需要对其进行任何的控制，只需要把要执行的命令按顺序写下来就可以了。例如我们需要对下面的方程组进行求解： 我们可以在m文件中编写以下内容。需要注意的是，如果语句不以分号结尾，则会将输出发送到命令行窗口；而如果是以分号结尾，程序虽然运行了，但不会产生任何输出： 1234567891011A = [1,2,0;3,4,5;0,6,7]; % 语句以分号结尾时，结果将不输出到命令行窗口b = [0,1,2]';X = A \\ b % 语句不以分号结尾时，结果将直接输出到命令行窗口，否则命令行将没有任何输出% 以下是命令行输出结果%% X =%% -0.1364% 0.0682% 0.2273 条件执行顺序执行显然不能满足我们的需要，如果我们要操作的语句是根据一定的条件进行选择，那么我们就需要用到条件语句。 if条件语句最为常见的条件语句即为if条件语句，其使用方法包括以下两种： 如果condition条件为TRUE(1)，则执行语句statement，否则不执行123if condition statementend 123456% 如果condition条件TRUE(1)，则执行语句statement1，否则执行语句statement2if condition statement1else statement2end 为了方便对控制条件进行编写，这里介绍常见的关系运算符和逻辑运算符。常用的关系运算符包括以下几个： ==（等于），~=（不等于），&gt;（大于），&lt;（小于），&gt;=（大于等于），&lt;=（小于等于）和其他编程语言类似，注意逻辑判断中的==（等于）和赋值语句中的=（赋值）的区别。 常用的逻辑运算符包括以下几个： &amp;&amp;（逻辑与），||（逻辑或），~（逻辑非）。注意在MATLAB中，FALSE的值默认为0，TRUE的值默认为1；在进行逻辑运算时，所有的0值被当做FALSE处理，非0值被当做TRUE处理。举例说明： 1234(3&gt;2) &amp;&amp; (2~=3); % 结果为1（TRUE）~(4&lt;=4); % 结果为0（FALSE）(3&gt;4) || 5; % 结果为1（TRUE）~0; % 结果为1（TRUE） 拓展 MATLAB提供位运算符，分别是&amp;（按位与），|（按位或），~（按位非） MATLAB提供的逻辑运算符支持短路操作 MATLAB中不提供++、+=等类似的赋值操作符 举一个栗子，如果一斤栗子10元，买5斤及以上总价打八折，计算价格的程序可以这样编写： 12345678910111213unitPrice = 10; % 单价10元/斤weight = 8; % 输入购买的重量（斤）if weight &gt;= 5 price = unitPrice * weight * 0.8else price = unitPrice * weightend% 以下是命令行输出结果%% price =% % 64 if嵌套语句if语句是可以进行层层嵌套的，例如下面是两种常见的嵌套模式： 12345678910111213141516171819202122% 若condition1满足：同时满足condition2时，执行statement21；不满足时执行statement22。若condition1不满足，则执行statement1if condition1 if condition2 statement21 else statement22 endelse statement1end% 若condition1满足，则执行statement1；否则，若condition2满足，则执行statement21，不满足时执行statement22if condition1 statement1else if condition2 statement21 else statement22 endend 通过if语句的嵌套形式，我们可以对运行流程进行更好的控制。再举一个栗子，刚刚的栗子如果买10斤及以上则总价打7折，则计算程序如下： 1234567891011121314151617unitPrice = 10; % 单价10元/斤weight = 12; % 输入购买的重量（斤）if weight &gt;= 5 if weight &gt;= 10 price = unitPrice * weight * 0.7 else price = unitPrice * weight * 0.8 endelse price = unitPrice * weightend% 以下是命令行输出结果%% price =% % 84 switch语句当我们要判断的分支非常多时，如果使用嵌套if语句写法，将会显得十分繁琐。这时我们可以使用switch语句来使得程序可读性更强。 switch语句的用法是这样的。 1234567891011switch variable case {value11,value12...} statement1 case value2 statement2 ... case valuen statementn otherwise statementend 当variable的值可以匹配上其中的任何value时，会直接跳转执行其对应的语句；如果没有匹配上任何值，则会直接跳转到otherwise语句进行执行。需要注意的是，otherwise语句并不是必须的。 不同于其他语言的switch语句，如果多个值对应同一个执行语句，可以利用大括号将值写在一起。这也意味着MATLAB不需要在每一个分支后使用break进行显式中断。 我们可以编写一个根据年份和月份判断该月有几天的程序： 1234567891011121314151617181920year = 2012;month = 2;switch month case {1,3,5,7,8,10,12} % 一三五七八十腊，三十一天永不差 days = 31 case {4,6,9,11} % 四六九冬三十日 days = 30 case 2 % 二月需要判断是否为闰年 if (mod(year,4) == 0 &amp;&amp; mod(year,100) ~= 0) || (mod(year,400) == 0) days = 29 else days = 28 endend% 以下是命令行输出结果%% days =% % 29 在这个例子中，我们在switch语句内部再次使用了if语句，用于对闰年的判断。其中mod(a,b)函数表示a对b的模。 循环执行流程控制中的循环语句非常重要，它避免了我们写几乎重复的代码，而通过程序的循环与退出对其进行控制。常见的循环执行语句有while循环和for循环。 while循环while循环是最容易理解的一种循环，其用法如下所示： 123while condition statementend 当condition条件为真时，循环执行statement语句，然后再次判断condition条件，直至condition条件不再满足时退出循环。如果在进入while循环前，condition条件不满足，则循环直接不会执行。 我们以经典的“水滴数”计算为例，练习while循环。水滴数是这样计算的：对于任意一个正整数，如果它是奇数，则乘3再加1；如果它是偶数，就除以2。循环往复，最后终将变成1（该结果尚未被证明，但至今未发现反例）。 12345678910num = 50; % 以50为例，显示水滴数的变化过程。由于num的计算过程没有加分号，会输出每次运算的结果。while num ~= 1 % 还没有减小到1时，不断循环 if mod(num,2) == 0 % 如果是偶数 num = num / 2 else % 如果是奇数 num = num * 3 + 1 endend% 命令行输出结果：（略） for循环回顾一下高斯的优秀事迹：如果要计算1到100的和，如何写这个循环呢？我们当然可以采用如下的while循环的方式进行编写： 12345678910111213sum = 0; % 保存求和结果i = 1; % 当前数while i &lt;= 100 sum = sum + i; i = i + 1; % 不要忘记变到下一个数endsum % 不加分号，输出最后结果% 以下是命令行输出结果%% sum =%% 5050 但是除了while循环外，还有一种更加方便的计数循环：for循环可以快速解决这个问题。for循环的格式如下： 123for variable = value statementend 其中value一般是利用冒号运算符得到的等差数列。我们利用for循环改写一下求和程序： 1234567891011sum = 0; % 保存求和结果for i = 1:100 sum = sum + i; % 累加endsum % 输出结果% 以下是命令行输出结果%% sum =%% 5050 可以看到使用for循环后整个程序变得更加简洁易懂。同样的，我们还可以求100以内所有奇数的平方和： 1234567891011sum = 0; % 保存求和结果for i = 1:2:100 % 1~100以内所有奇数 sum = sum + i^2; % 累加endsum % 输出结果% 以下是命令行输出结果%% sum =%% 166650 我们可以看到，使用for循环避免了编写复杂的循环控制条件，使得程序编写者可以直接确定循环的次数和循环变量的值。而当循环次数未知时，则仍需要使用while循环对其进行控制。 函数在我们已经可以编写简单的MATLAB脚本之后，我们需要学习一个更加强大的编程工具：函数。这篇文章将主要介绍MATLAB中函数的使用。 函数的思想之所以说函数是一种强大的工具，是因为使用函数可以让我们的代码变得更加简洁，同时也给我们模块化带来了很大的方便。 以我们在生活中做家务为例，正常情况下，我们需要具体写出做家务的每一步，例如： 擦桌子12345672. 洗碗3. 扫地4. xxxx5. 擦桌子6. 洗碗7. 扫地8. ... 如果我们将其组织成一个函数，那我们每次只需要调用做家务这个函数，就可以实现这样一套流程。 123456789定义：做家务 = 1. 擦桌子 2. 洗碗 3. 扫地1. 做家务2. xxxx3. 做家务4. ... 同样，如果我们需要在做家务的过程中添加一项“倒垃圾”，我们只需要在函数端进行修改，而不用对调用部分的代码做任何改动，这样模块化的方法将使得我们代码的可维护性大大增强。 函数定义了解了函数的作用之后，我们就需要了解如何对函数进行定义。MATLAB中的函数定义包括function保留字、输出变量、函数名、输入参数、函数体几部分： 1234% function为保留字，out1~outN为函数输出，function_name为函数名，para1~paraN为输入参数function [out1, out2, outN] = function_name(para1, para2, paraN) statementsend 定义函数时，一般通过建立单独的函数m文件进行编写。例如，我们可以定义一个“给定两个数，返回其和”的函数add。因此我们可以首先选择新建 -&gt; 函数选项，新建一个与函数名同名的函数m文件（事实上，函数m文件和脚本m文件没有实质性的不同，但是新建函数m文件时将会自动生成函数结构）。这时我们可以看到MATLAB已经自动为我们生成好了函数的结构。 12345function [ output_args ] = Untitled1( input_args )%UNTITLED1 此处显示有关此函数的摘要% 此处显示详细说明end 我们将其更改为下面内容： 12345function sum = add(num1, num2)%add 给定两个数，返回其和% 给定输入的两个数num1和num2，计算得到两数之和并返回（虽然看起来很啰嗦，但是把输入输出讲清楚非常重要） sum = num1 + num2;end 通过这个例子我们可以看到，与一般的编程语言不同，MATLAB没有显式的return语句返回计算结果，而是通过在语句中给输出变量赋值的方法实现返回值。类似的，如果我们的函数具有多个返回值，我们即需要对所有的输出变量进行赋值。 MATLAB也支持没有任何输出的函数，此时函数仅需要包含如下部分： 1234% 没有返回值的函数function function_name(para1, para2, paraN) statementsend 一般而言，这种没有返回值的函数使用较少，主要是为了实现一些附加作用而使用的。 函数调用定义函数是为了方便我们进行调用。MATLAB中调用已定义的函数非常简单，实际上我们之前已经调用过系统内置函数，例如zeros()、ones()等。调用函数的方法如下所示： 12% 调用函数[out1, out2, outN] = function_name(para1, para2, paraN) 与上述我们定义的add函数相匹配的函数调用为 12345&gt;&gt; a = add(1, 2)a = 3 这与我们定义函数的形式非常一致。需要注意的是，当输出变量的个数小于函数实际返回的变量个数时，MATLAB将默认从前到后进行返回，并不会引起报错。下面的例子很好的说明了这一点。 12345678910111213141516171819202122232425262728%%% 文件calculate.m %%%% 计算两个数的四则运算结果function [res1, res2, res3, res4] = calculate(num1, num2) res1 = num1 + num2; res2 = num1 - num2; res3 = num1 * num2; res4 = num1 / num2;end%%% 文件Script5_1.m %%%sum = calculate(1, 2)[sum, diff, product, quot] = calculate(1, 2)% 以下是运行Script5_1.m的命令行输出结果% 注：此为第1行运行结果sum = 3% 注：此为第2行运行结果sum = 3diff = -1product = 2quot = 0.5000 之所以强调是Script5_1.m的运行结果，是因为带有输入参数的函数是无法直接被运行的。但是没有输入参数的函数可以直接被运行，例如下列函数在屏幕上打印出Hello World字样。 1234567% 在屏幕上打印出Hello Worldfunction hello() disp('Hello World!');end% 以下是命令行输出结果Hello World! 函数变量函数作为参数这一部分可能会使得编程基础稍差的同学感到迷惑，不过耐心读几遍还是可以读懂的。 MATLAB一项令人欣喜的功能是可以将函数作为变量看待，其方式为使用’@’字符。例如我们编写了之前的add.m文件后，使用以下命令： 12345678910% 将add函数赋值给var_fun函数var_fun = @add;% 使用var_fun函数var_fun(3, 5)% 以下是命令行输出结果ans = 8 我们发现，我们定义的var_fun居然实现了和add一样的功能！这看起来很不可思议，但实际上这正是函数式编程的基本概念。甚至，我们还可以将函数作为函数参数进行传递。例如我们定义了一个函数operate，这个函数接受一个操作两个数的函数（例如add）和两个数字，给出计算结果。我们可以这样定义： 123456789101112131415161718192021%%% 文件add.m %%%function sum = add(num1, num2) sum = num1 + num2;end%%% 文件operate.m %%%function result = operate(my_fun, num1, num2) result = my_fun(num1, num2);end%%% 文件Script5_2.m %%%operate(@add, 2, 3)% 以下是命令行输出结果ans = 5 我们惊讶地发现，我们将add函数作为参数成功传递给了operate，并给出了正确的计算结果。请认真思考上述代码的执行流程。 匿名函数提起函数式编程，就不得不提到大名鼎鼎的Lambda函数。在MATLAB中，同样对Lambda函数提供了支持。为方便不了解函数式编程的同学，下面将统一称之为“匿名函数”。 首先回想我们使用函数的流程。我们需要确定函数的输入与输出、函数名，新建函数m文件，编写函数体，然后在主程序中对函数进行调用。但很多时候，我们编写的函数可能往往只有一行或更少，这种情况下单独编写一个函数m文件就显得非常麻烦。甚至有些时候，这个函数我们只需要用一次，能不能不取名呢？匿名函数（Lambda函数）就很好地解决了这个问题。 匿名函数的声明如下： 1@(para1, para2, paraN)expression 匿名函数的形式十分简洁，将整个函数的定义缩减到一行内。例如之前的add函数，我们可以这样进行改写 12345678910% 定义add函数的Lambda形式lambda_add = @(a, b)a + b% 调用函数lambda_add(3, 4)% 以下是命令行输出结果ans = 7 可以看到Lambda函数保持了和原函数一样的功能。我们将之前的Script5_2.m文件进行Lambda函数改写： 1234567891011121314151617181920212223%%% 文件operate.m %%%function result = operate(my_fun, num1, num2) result = my_fun(num1, num2);end%%% 文件Script5_2.m %%%% 利用operate函数和匿名函数进行四则运算operate(@(a,b)a + b, 2, 3)operate(@(a,b)a - b, 2, 3)operate(@(a,b)a * b, 2, 3)operate(@(a,b)a / b, 2, 3)% 以下是命令行输出结果ans = 5ans = -1ans = 6ans = 0.6667 看到这里，相信大多数人一定一头雾水，不禁想到：这有什么卵用？事实上这还真的用卵用，后面的章节中我们可以看到很多匿名函数的使用，因此希望这一节的内容你能够尽量理解~ 形参vs实参学过其他编程语言的同学在对待函数时，往往需要急切地弄清楚什么时候函数传递形参，什么时候传递实参呢？ 先上结论：MATLAB函数永远传递形参 没有理解的同学可以通过下面的例子感受一下。 假设我现在有一个1*5的矩阵，我现在想让这个矩阵的第一个元素加1，那么有什么办法呢？最直观的想法是这样的： 1234%%% 文件add_one.m %%%function add_one(mat) mat(1, 1) = mat(1, 1) + 1;end 表面上看来，这个函数对于任何传递进来的矩阵mat，都将第一个元素进行了加1操作。我们对其进行一下测试： 12345678910%%% 文件Script5_3.m %%%mat = [1, 2, 3, 4, 5];add_one(mat);mat% 以下是命令行输出结果mat = 1 2 3 4 5 我们惊讶地发现，mat的值并没有发生任何变化！事实上，无论我们在函数内对传入参数进行什么操作，都不会影响到参数在主程序中的原本值，这是因为MATLAB使用的是“形参传递”。在这个过程中，实际上在MATLAB内部发生了如下的事情： 1 主程序调用函数，此时需要传递参数mat=[1,2,3,4,5] 2 主程序将所有需要传递的参数的值复制了一份，生成了参数副本mat_copy=[1,2,3,4,5] 3 主程序将计算中的所有变量暂存，进入函数执行模式 4 函数利用mat_copy进行计算，当函数试图修改mat的值时，实际在修改mat_copy的值，使得mat_copy=[2,2,3,4,5] 5 函数计算完成，告知主程序计算完成，并将计算结果返回主程序 6 主程序将暂存变量恢复，mat的值仍为[1,2,3,4,5]因此，无论我们怎么做，主程序中的值都无法在函数中进行修改。那我们怎样实现上述需求呢？一种方式是可以将mat_copy的值直接返回给主程序，主程序再将mat的值替换为函数返回值。如下： 1234567891011121314%%% 文件add_one.m %%%function mat = add_one(mat) mat(1, 1) = mat(1, 1) + 1;end%%% 文件Script5_3.m %%%mat = [1, 2, 3, 4, 5];mat = add_one(mat)% 以下是命令行输出结果mat = 2 2 3 4 5 这样做或许显得不美观，但也不失为一种好方法。 还有一种方法则是利用全局变量的方法。 全局变量在介绍全局变量之前，我们需要先了解一下变量空间。变量空间是指MATLAB计算过程中当前状态可以使用的所有变量。例如在主程序中可以访问在主程序中定义的变量，但是在函数运行过程中就无法使用主程序定义的变量，因此我们说它们属于不同的变量空间。 一般而言，MATLAB的变量空间可以有多个，其中所有的脚本m文件共享一个变量空间，例如先执行Script2_1.m，再执行Script2_2.m时仍然可以访问在之前的脚本中已经定义的函数；而不同的函数m文件属于不同的变量空间，且不同于脚本m文件的变量空间，因此任何函数都不能调用在其他函数中或者主程序中定义的变量。 之所以传递到函数中的参数不能修改，是因为主程序中传进去的参数是属于主程序的变量空间，当函数开始执行时，主程序的变量就被暂存起来无法改动了。那我们自然想到，能不能利用什么方法，使得一个变量不只是属于主程序呢？答案就是全局变量。全局变量不属于任何一个程序模块，在任何时候都可以被修改。 我们使用如下的方式定义或使用一个全局变量： 12global global_var;statements 使用任何全局变量前，都要先进行声明，以告知编译器：这是一个全局变量，请不要在局部变量里面寻找。使用全局变量可以对上述的add_one方法进行改写： 1234567891011121314151617%%% 文件add_one.m %%%function add_one() global mat; mat(1, 1) = mat(1, 1) + 1;end%%% 文件Script5_3.m %%%global mat;mat = [1, 2, 3, 4, 5];add_one();mat% 以下是命令行输出结果mat = 2 2 3 4 5 使用全局变量非常方便，但是需要注意的是，使用全局变量与函数化、模块化的概念完全相悖，大量使用全局变量将使得程序的逻辑控制变得复杂，可读性变差。因此建议大家尽量不要使用全局变量，以免生出“一个月前写的程序自己都看不懂”的悲剧。 matlab绘图为了将计算结果进行可视化呈现，MATLAB提供了诸多绘图功能，可以满足不同可视化的需求。这篇内容将主要介绍使用MATLAB进行二维绘图的入门操作。 plot函数提到MATLAB中的二维绘图函数，那一定要提到plot函数。虽然是最基础的二维绘图函数，但是其功能却十分的强大。在开始绘图的学习之前，请先将下面这句话默念3遍： MATLAB主要用来处理【数值运算】！ 这句话虽然不完全正确，但在初学阶段请牢记。如同之前提到的，MATLAB的主要运算对象是【矩阵】，因此MATLAB的绘制实际上是根据你提供的数据进行绘图，换句话说你可以当作MATLAB是个不认识函数的“傻子”。举个栗子，你让MATLAB绘制所谓y=sin(x)的图像，它做不到；但是根据产生的x、y值序列，MATLAB可以轻松进行绘图。 plot函数的基本使用方法plot函数可以根据提供的数据绘制对应的图像，其基本用法如下： 12345678% 以1:n为X坐标，绘制Y值的折线图plot(Y)% 根据提供的X和Y数据绘制折线图plot(X, Y)% 绘制折线图并指定线型、颜色等特征plot(X, Y, LineSpec)% 在同一幅图中绘制多组图线plot(X1, Y1, LineSpec1, Xn, Yn, LineSpecn) 例如我们绘制函数y=sin(x)在区间[0,5]上的图像，可以使用以下的代码： 123456% 产生x值数据，这里每隔0.1取一个点。x = 0:0.1:5;% 根据函数关系，生成对应的y值数据；MATLAB提供的sin函数支持对向量的处理。y = sin(x);% 绘图，选择曲线为红色plot(x, y, 'r'); 绘图结果如图所示： 同时绘制y=x^2和y=0.5x^3两个图像： 1234567% 产生x值数据，这里每隔0.1取一个点。x = 0:0.1:5;% 根据函数关系，生成对应的y值数据。y1 = x.^2;y2 = 0.5 * x.^3;% 绘图plot(x, y1, 'r^-', x, y2, 'ko--'); 绘图结果： 常见的颜色、线型、标记点属性如下： 1234567891011121314颜色 符号红色 ‘r’粉红 ‘m’绿色 ‘g’青色 ‘c’蓝色 ‘b’白色 ‘w’黄色 ‘y’黑色 ‘k’线型 符号实线 ’-‘虚线 ’–’点线 ’:’点划线 ’-.’ 1234567891011121314标记点类型 符号上三角 ’^’下三角 ‘v’左三角 ’&lt;’右三角 ’&gt;’星号 ‘*’加号 ’+’叉号 ‘x’实心圆 ’.’空心圆 ‘o’正方形 ’s’五角星 ‘p’六角星 ‘h’菱形 ‘d’ 这些属性可以仅指定一种，也可以被同时指定，指定时无需区分顺序。需要注意的是如果指定了标记点类型的话，必须要进一步指定线型，否则绘图时只会出现标记点而没有线。 plot函数的额外属性使用plot函数除了可以对颜色、线型、标记点类型进行修改外，还可以通过以下方式设定通用属性值： 1plot(X, Y, LineSpec, Name, Value) 常见的属性值包括 12345属性名 说明‘LineWidth’ 线宽（默认为0.5）‘MarkerSize’ 标记点大小（默认为6.0）‘MarkerEdgeColor’ 标记点轮廓颜色（与线颜色写法相同）‘MarkerFaceColor’ 标记点填充颜色（与线颜色写法相同） 例如下面代码设置了多种参数： 12345678x = -pi:pi/10:pi;y = tan(sin(x)) - sin(tan(x));plot(x,y,'--gs',... 'LineWidth',2,... 'MarkerSize',10,... 'MarkerEdgeColor','b',... 'MarkerFaceColor',[0.5,0.5,0.5]) 绘制出的图像如下所示： 添加/设置图像其他部分一张完整的图表应当包括标题、轴坐标等元素。下面展示了一些常用的添加/设置图表元素的方法。 12345678910111213141516% 设置图表标题title('Sample Title');% 设置x坐标轴名称xlabel('X Label Title');% 设置y坐标轴名称ylabel('Y Label Title');% 设置图例项legend('Legend1','Legend2','LegendN');% 设置X、Y轴坐标范围xlim([XMIN, XMAX]);ylim([YMIN, YMAX]);% 或者使用以下方式设置坐标范围axis([XMIN, XMAX, YMIN, YMAX]);% 开启网格grid on 使用代码对图像进行调整，可以使得每次生成的图像具有相同的属性。但是还有一种更加交互化（福利化）的方式，那就是在图像界面进行直接设置。在生成的图像中选择“编辑”-&gt;“图形属性”，即可打开对应的交互化设置界面。点击图中的坐标轴、图线还可以对这些元素进行对应的设置。 新建图像和添加图像当你想要绘制多张图像时，你可能会发现多次调用plot方法会使得后一次绘制的结果覆盖已有的图像。为了生成新的图像，需要使用以下命令生成一张空白的图像。 1figure; 事实上，在你第一次调用plot()函数时，你可以认为MATLAB已经自动调用了figure方法，生成新的空白图像用于绘图。但之后若没有再次调用figure方法，则每次使用plot()时将覆盖已有的图像。 例如使用以下代码生成互为反函数的y=ln(x)和y=e^x的两幅图像： 1234567891011121314x = 0.1:0.1:5;y = log(x);figure; % 第一次绘制时，figure命令可省略% 绘制函数y=ln(x)的图像plot(x, y);title('函数y=ln(x)');figure;% 绘制函数y=e^x的图像plot(y, x);title('函数y=e^x'); Matlab会生成两幅图像： 有时我们可能并不想将结果绘制在多个图像上，而是直接绘制在同一个图像上。但是多次使用plot()函数又会使得之前的图像被覆盖，这时就需要使用hold on命令来保持当前图像。 hold on命令的使用方法如下： 123plot();hold on;plot(); 需要注意的是，使用hold on命令之后，两次的plot将完全不相关，等同于在一次plot()函数中同时绘制多组数据。因此使用对于plot()函数出现的多条图线，将不会自动生成直线连接它们。 使用hold on方法可以使我们绘制图像时不拘泥于将绘图数据全部计算完成后画出，而是使用“更新”的方法进行绘图。例如绘制幂函数y=x^a在不同a值时的函数图像： 1234567891011figure; % 第一次绘制时，figure命令可省略for a = -2:2 x = -2:0.1:2; y = x .^ a; plot(x, y, 'linewidth', 1); hold on;endgrid on;axis([-2,2,-5,5]);title('y=x^a在不同a值下的图像');legend('a=-2', 'a=-1', 'a=0', 'a=1', 'a=2'); 绘制在同一幅图中的效果： 利用hold on还可以作出类似“动态变化”的效果: 12345678910111213141516171819202122232425262728293031323334% “水滴数”动态变化图% 设置初始值num = 50;% 设置刷新时间refresh = 0.5;% 记录迭代次数iter = 1;% 进行第一次绘图，这里我们采用散点图，并添加标题等其他元素figure; % 第一次绘制图像的时候，是否添加这句话效果相同plot(iter, num, 'ro');axis([1, 25, 0, 100]);title('“水滴数”动态变化展示');xlabel('迭代次数');ylabel('数值');hold on;% 开始迭代计算while num ~= 1 % 迭代一次 if mod(num,2) == 0 num = num / 2; else num = num * 3 + 1; end iter = iter + 1; % 绘图 plot(iter, num, 'ro'); pause(refresh); hold on; % 这里的hold on命令也可省略end 绘制多幅子图像有些使用我们需要在同一张图中并列放置多张图像，这时候我们可以使用subplot进行绘制。其主要使用方法如下： 123% 绘制m*n排列的子图像中的第p幅subplot(m, n, p);plot(); 需要注意的是，subplot默认按逐行的方式对子图像进行排列。例如以下代码绘制了函数y=sin(k*x)在不同k值下的图像： 123456789101112131415161718192021222324% 生成绘图数据x = linspace(0,10);y1 = sin(1*x);y2 = sin(2*x);y3 = sin(3*x);y4 = sin(4*x);% 绘制2*2排列的子图像figure; % 第一次绘制时，figure命令可省略subplot(2,2,1);plot(x,y1);title('Subplot 1: sin(x)');subplot(2,2,2);plot(x,y2);title('Subplot 2: sin(2x)');subplot(2,2,3);plot(x,y3);title('Subplot 3: sin(3x)');subplot(2,2,4);plot(x,y4);title('Subplot 4: sin(4x)'); 子图像的绘制结果如图所示： 图像算法 参考代码都是可以优化的，下面的只是参考，定位是简单入门。 图像导入与格式转换1234567891011121314151617181920212223242526272829clc;clear;close all;%-----读--取--图--片--并--显--示---------% imread 读一张图片，括号里格式为字符串，这字符串表示你要读取图片的路径img = imread('1.jpg');% 函数figure: 建立一个窗口 可以直接用数字去编号：% figure(1);% 关于figure的用法参考：https://blog.csdn.net/qq_30387863/article/details/80301996% 命名编号：括号里两个参数：第一个是指定参数为'name', 第二个写你要起的名字figure('name', '小黑')% 函数imshow：显示图片 括号里面是需要显示的图片的名字imshow(img);% -----图--像--的--表--示-----% 关于图像里面的数据格式，常见的是uint8和double % 其中，uint8指的是没有符号的整数，即非负整数，double指的是精确度比较高的浮点数% 彩图和灰度图的转化不是可逆的，彩图到灰度图可以用函数rgb2graygray = rgb2gray(img);figure('name', 'gray');imshow(gray);% ---保存图片到指定位置---% 用 imwrite(A,filename) % 将图像数据 A 写入 filename 指定的文件，并从扩展名推断出文件格式。 均值滤波说明均值滤波的代码:code.m1234示例用的思路是：选取相邻3x3的范围，用9个数字的平均作为滤波结果，进行赋值。均值滤波的两种方法：一个是示例的邻域平均，另一个是根据距离目标像素点的远近乘以加权的系数，叫做加权平均，像高斯滤波就是如此。 参考 这篇文章介绍得挺好： 均值滤波和中值滤波 代码 code.m 12345678910111213141516171819202122232425clc;clear;close all;img = imread('1.jpg');gray = rgb2gray(img);figure('name', 'gray');imshow(gray);[m, n] = size(gray);avg_filter = gray;for i = 2:m-1 for j = 2:n-1 filter_con = gray(i-1:i+1, j-1:j+1); k = sum(sum(filter_con))/9; avg_filter(i, j) = k; endendfigure('name', 'avg_filter');imshow(avg_filter); sobel算法说明文件code.m，利用sobel算子可以将图像周围像素灰度有阶跃变化的像素检测出来，这些像素组成的集合就是该图像的边缘。 实现： 分别用检测垂直边缘和检测水平边缘的算子对图像一点作平面卷积，然后开平方得到该点的灰度值。 参考 sobel参考 原理可以，里面参考代码不太行，漏洞太多，以我为准。 知乎一篇不错的文章 代码 code.m 123456789101112131415161718192021222324252627282930313233clc;clear;close all;img = imread('1.jpg');figure('name', '原图');imshow(img);gray = rgb2gray(img);[m, n] = size(gray);% 预设好矩阵大小x_sobel = double(gray);y_sobel = double(gray);img_sobel = gray;for i = 2:m-1 for j = 2:n-1 % 分别用x、y方向的算子检测边缘，然后合成 % x_con = [-1,0,1; -2,0,2; -1,0,1]; % y_con = [-1,-2,-1; 0,0,0; 1,2,1]; x_sobel(i,j) = (-1*gray(i-1, j-1) + gray(i-1, j+1) ... % 三个省略号表示接着下一行 -2*gray(i, j-1) + 2*gray(i, j+1) ... -1*gray(i+1, j-1) + gray(i+1, j+1)); y_sobel(i, j) = (-1*gray(i-1, j-1) - 2*gray(i-1, j) - gray(i-1, j+1) ... +gray(i+1, j-1) + 2*gray(i+1, j) + gray(i+1, j+1)); endendimg_sobel = sqrt(x_sobel.^2 + y_sobel.^2);figure('name', 'img_sobel');imshow(uint8(img_sobel)); 腐蚀膨胀说明文件 code1.m：膨胀，使图像中亮的区域增长 使用卷积核B对图片A进行卷积运算，求局部最大值，这个卷积核可以有任意的形状和大小，通常是一个方形或者圆形。卷积核B通常有个锚点，通常位于卷积核的中央位置。 随着卷积核扫描图像，计算叠加区域的最大像素值，并将锚点的位置用最大值替换，从而导致图片中亮的区域增长。 文件code2.m:腐蚀，使亮色的区域减少 文件code3.m:开操作, 先腐蚀后膨胀；先膨胀后腐蚀是闭操作； 顶帽操作和底帽操作是灰度图像所特有的，其原理是开操作将使峰顶消去，具体消去了多少呢，可以用原图减去开操作结果，这样就能得到其消去的部分，而这个过程成为顶帽操作，顶帽就是开操作消去的峰顶，这一部分对应于图像中较亮的部分，也叫白色顶帽。 开运算放大了裂缝或者局部低亮度的区域，所以，从原图中减去开运算后的图，得到的结果突出了比原图轮廓周围的区域更明亮的区域，这个操作与选择的核的大小有关。TopHat运算一般用来分离比邻近点亮一些的斑块，可以使用这个运算提取背景。 同理，底帽操作是用闭操作的结果减去原图就得到被闭操作填充的谷底部分，这一部分对应于图像中较暗的部分，也叫黑色底帽。黑帽运算的结果突出了比原图轮廓周围区域更暗的区域，所以黑帽运算用来分离比邻近点暗一些的斑块。 参考参考一 参考二 代码 code1.m 1234567891011121314151617181920212223242526272829clc;clear;close all;path = '1.jpg';img = imread(path);figure('name', '原图')imshow(img);% 膨胀：这里对灰度图腐蚀，其他类型图像同理gray = rgb2gray(img);figure('name', '灰度图')imshow(gray);[m,n] = size(gray);pz = gray; % 提前预分配，优化速度for i = 2 : m-1 for j = 2 : n-1 % con是选了3*3大小的卷积区域，然后腐蚀 con = gray(i-1:i+1, j-1:j+1); % 一次max求每列最大，二次是整体最大 pz(i,j) = max(max(con)); endendfigure('name', 'fs');imshow(pz); code2.m 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364clc;clear;close all;path = '1.jpg';img = imread(path);figure('name', '原图')imshow(img);% ----------对--灰--度--图--腐--蚀---------% gray = rgb2gray(img);% figure('name', '灰度图')% imshow(gray);% % [m,n] = size(gray);% fs = gray; % 提前预分配，优化速度% for i = 2 : m-1% for j = 2 : n-1% % con是选了3*3大小的卷积区域，然后腐蚀% con = gray(i-1:i+1, j-1:j+1);% fs(i,j) = min(min(con));% % end% end% % figure('name', 'fs');% imshow(fs);%------------对--彩--色--图-------------r = img(:, :, 1);g = img(:, :, 2);b = img(:, :, 3);[m, n] = size(r);r_out = r;for i = 2 : m-1 for j = 2 : n-1 con = r(i-1:i+1, j-1:j+1); r_out(i,j) = min(min(con)); endendg_out = g;for i = 2 : m-1 for j = 2 : n-1 con = g(i-1:i+1, j-1:j+1); g_out(i,j) = min(min(con)); endendb_out = b;for i = 2 : m-1 for j = 2 : n-1 con = b(i-1:i+1, j-1:j+1); b_out(i,j) = min(min(con)); endendout = cat(3, r_out, g_out, b_out);figure('name', 'fs_color');imshow(out); code3.m 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647clc;clear;close all;path = '1.jpg';img = imread(path);figure('name', '原图')imshow(img);% ----开--运--算------gray = rgb2gray(img);figure('name', '灰度图')imshow(gray);% 先腐蚀[m,n] = size(gray);fs = gray; for i = 2 : m-1 for j = 2 : n-1 con = gray(i-1:i+1, j-1:j+1); fs(i,j) = min(min(con)); endend% 后膨胀pz = fs;for i = 2 : m-1 for j = 2 : n-1 con = fs(i-1:i+1, j-1:j+1); pz(i,j) = max(max(con)); endendopen_img = pz;figure('name', 'open_img');imshow(open_img);% ------顶--帽:找出多膨胀的那一块亮度--------% 原图-开运算的图top_hat = gray - open_img;figure('name', 'top_hat');imshow(top_hat);% 备注： 由上面代码变换顺序做一下微调整，便可以得到闭运算、黑帽 直方图均衡化说明原理当图像直方图完全均匀分布的时候，此时图像的熵是最大的（随机变量每个值的概率都相同时，概率最大），图像对比度是最大的。直方图均衡化就是让图像的像素值所组成的直方图均匀分布，达到提高亮度的作用。 12345code.m 是用灰度图实现code_color.m 是彩色图coloraverage.m 是对code_color.m 的写法改进 参考 彩色图像的直方图均衡化，用到了函数，这个不错 直方图的原理 代码 code.m 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051clcclearclose all;% 读图img = imread('1.jpg');%灰度图处理gray = rgb2gray(img);figure('name', 'original gray');imshow(gray);%读取灰度图 及直方图[R,C]=size(gray);% figure(2);% imhist(I);%统计灰度s=zeros(1,256);for i=1:R for j=1:C s(1,gray(i,j)+1)=s(1,gray(i,j)+1)+1; endend%算概率p=zeros(1,256);for i=1:256 p(i)=s(i)/(R*C*1.0);end%累计直方图c=zeros(1,256);c(1)=p(1);for i=2:256 c(i)=c(i-1)+p(i);end%取整% c = uint8(255.*c+0.5);c= round(255.*c);% 均衡for i=1:R for j=1:C gray(i,j)=c(gray(i,j)+1); endend%8 输出直方图均衡化后的图像figure('name', 'out_hisq');imshow(gray);% figure(4);% imhist(I); code_color.m 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119clcclearclose all;% 读图img = imread('1.jpg');figure('name', 'original image');imshow(img);figure(12);imshow(histeq(img, 256));%彩图处理r = img(:, :, 1);g = img(:, :, 2);b = img(:, :, 3);% 获得图像的尺寸大小 [R, C]=size(r);% ----分--图--层--处--理------% ----r----r_out = r;s = zeros(1,256);for i = 1:R for j=1:C s(1, r_out(i,j)+1)=s(1, r_out(i,j)+1)+1; endend%算概率p = zeros(1,256);for i = 1:256 p(i)=s(i)/(R*C*1.0);end%累计直方图c=zeros(1,256);c(1)=p(1);for i=2:256 c(i)=c(i-1)+p(i);end%取整% c = uint8(255.*c+0.5);c= round(255.*c);% 均衡for i=1:R for j=1:C r_out(i,j)=c(r_out(i,j)+1); endend% -----g-------g_out = g;s=zeros(1,256);for i=1:R for j=1:C s(1, g_out(i,j)+1) = s(1, g_out(i,j)+1)+1; endend%算概率p=zeros(1,256);for i=1:256 p(i)=s(i)/(R*C*1.0);end%累计直方图c=zeros(1,256);c(1)=p(1);for i=2:256 c(i)=c(i-1)+p(i);end%取整% c = uint8(255.*c+0.5);c= round(255.*c);% 均衡for i=1:R for j=1:C g_out(i,j) = c(g_out(i,j)+1); endend% -----b-------b_out = b;s=zeros(1,256);for i=1:R for j=1:C s(1, b_out(i,j)+1) = s(1, b_out(i,j) + 1) + 1; endend%算概率p=zeros(1,256);for i=1:256 p(i)=s(i)/(R*C*1.0);end%累计直方图c=zeros(1,256);c(1)=p(1);for i=2:256 c(i)=c(i-1)+p(i);end%取整% c = uint8(255.*c+0.5);c= round(255.*c);% 均衡for i = 1:R for j = 1:C b_out(i,j) = c(b_out(i,j)+1); endendout = cat(3, r_out, g_out, b_out);% 输出直方图均衡化后的图像figure('name', 'out_hisq');imshow(out); coloraverage.m 1234567891011121314151617181920212223242526272829303132333435363738394041%主函数function coloraverage()I=imread('1.jpg');imshow(I);I1=I(:,:,1);%提取红色分量I2=I(:,:,2);%提取绿色分量I3=I(:,:,3);%提取蓝色分量I1=histogram(I1); %构造的函数I2=histogram(I2);I3=histogram(I3);c=cat(3,I1,I2,I3); %cat用于构造多维数组subplot(1,2,1);imshow(I);subplot(1,2,2);imshow(c);%调用的（直方图均衡化）构造函数function d=histogram(I)%构造histogram函数J=I;[m,n]=size(I); %确定矩阵大小area=m*n;a=zeros(1,256); %产生1*256的零矩阵a,用来存放原始图像各个灰度值的个数b=zeros(1,256);for i=1:m %记录各个灰度值的个数 for j=1:n d=I(i,j)+1; %获取(i,j)位置的灰度值(注意：灰度值为0-255，对应矩阵的1-256） a(1,d)=a(1,d)+1; %矩阵a上对应灰度值的计数+1 endendfor i=1:256 %均衡化 sum=0; for j=1:i sum=sum+a(1,j); end b(1,i)=sum*255/area;endfor i=1:m %用均衡化后的数据代替原位置的数据 for j=1:n d=J(i,j)+1; J(i,j)=b(1,d); endendd=J; 整理参考来源： 1、grammar 2、书：数字图像处理，朱虹等著 3、知乎/CSDN等网友的博客贴","link":"/2020/11/09/matlab/"},{"title":"[工科高数专栏]序言","text":"写点数学 想了许久，把数学复习分成以下三个部分： 想象力、逻辑力、计算力。 一、想象力又叫做数与几何。 在这一阶段主要做形象地理解，感性地认知曲线、空间等元素。 1、曲线的凹凸性、拐点2、函数图形与曲率3、向量4、平面和空间二、逻辑力数学的严谨与思维 1、拉格朗日2、梯度3、微分中值4、定积分5、曲线第二型6、曲面第二型三、运算力1、级数2、极限3、从求导到链式法则4、不定积分5、微分方程6、重积分7、第一型积分","link":"/2020/12/31/%E5%B7%A5%E7%A7%91%E9%AB%98%E6%95%B0%E4%B8%93%E6%A0%8F-%E5%BA%8F%E8%A8%80/"}],"tags":[{"name":"plan","slug":"plan","link":"/tags/plan/"},{"name":"体能锻炼","slug":"体能锻炼","link":"/tags/%E4%BD%93%E8%83%BD%E9%94%BB%E7%82%BC/"},{"name":"学习方法","slug":"学习方法","link":"/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"},{"name":"线性代数","slug":"线性代数","link":"/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"},{"name":"摄影","slug":"摄影","link":"/tags/%E6%91%84%E5%BD%B1/"},{"name":"工程测量","slug":"工程测量","link":"/tags/%E5%B7%A5%E7%A8%8B%E6%B5%8B%E9%87%8F/"},{"name":"社会实践","slug":"社会实践","link":"/tags/%E7%A4%BE%E4%BC%9A%E5%AE%9E%E8%B7%B5/"},{"name":"观点","slug":"观点","link":"/tags/%E8%A7%82%E7%82%B9/"},{"name":"日常随笔","slug":"日常随笔","link":"/tags/%E6%97%A5%E5%B8%B8%E9%9A%8F%E7%AC%94/"},{"name":"土木","slug":"土木","link":"/tags/%E5%9C%9F%E6%9C%A8/"},{"name":"数学 概率论与数理统计","slug":"数学-概率论与数理统计","link":"/tags/%E6%95%B0%E5%AD%A6-%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"},{"name":"python编程思考","slug":"python编程思考","link":"/tags/python%E7%BC%96%E7%A8%8B%E6%80%9D%E8%80%83/"},{"name":"python-matplotlib","slug":"python-matplotlib","link":"/tags/python-matplotlib/"},{"name":"诗歌","slug":"诗歌","link":"/tags/%E8%AF%97%E6%AD%8C/"},{"name":"政治","slug":"政治","link":"/tags/%E6%94%BF%E6%B2%BB/"},{"name":"施工企业会计","slug":"施工企业会计","link":"/tags/%E6%96%BD%E5%B7%A5%E4%BC%81%E4%B8%9A%E4%BC%9A%E8%AE%A1/"},{"name":"coding matlab与图像处理","slug":"coding-matlab与图像处理","link":"/tags/coding-matlab%E4%B8%8E%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"},{"name":"高数 纲要","slug":"高数-纲要","link":"/tags/%E9%AB%98%E6%95%B0-%E7%BA%B2%E8%A6%81/"}],"categories":[{"name":"生活 月计划","slug":"生活-月计划","link":"/categories/%E7%94%9F%E6%B4%BB-%E6%9C%88%E8%AE%A1%E5%88%92/"},{"name":"生活 阅读","slug":"生活-阅读","link":"/categories/%E7%94%9F%E6%B4%BB-%E9%98%85%E8%AF%BB/"},{"name":"理论 工程技术","slug":"理论-工程技术","link":"/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A8%8B%E6%8A%80%E6%9C%AF/"},{"name":"理论 经济管理","slug":"理论-经济管理","link":"/categories/%E7%90%86%E8%AE%BA-%E7%BB%8F%E6%B5%8E%E7%AE%A1%E7%90%86/"},{"name":"生活 年计划","slug":"生活-年计划","link":"/categories/%E7%94%9F%E6%B4%BB-%E5%B9%B4%E8%AE%A1%E5%88%92/"},{"name":"编程 python","slug":"编程-python","link":"/categories/%E7%BC%96%E7%A8%8B-python/"},{"name":"编程 matlab","slug":"编程-matlab","link":"/categories/%E7%BC%96%E7%A8%8B-matlab/"},{"name":"理论 工科高等数学","slug":"理论-工科高等数学","link":"/categories/%E7%90%86%E8%AE%BA-%E5%B7%A5%E7%A7%91%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"}]}